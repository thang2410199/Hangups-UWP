// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;

namespace Hangups.Proto {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Hangouts {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DoNotDisturbSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DoNotDisturbSetting, global::Hangups.Proto.DoNotDisturbSetting.Builder> internal__static_DoNotDisturbSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_NotificationSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.NotificationSettings, global::Hangups.Proto.NotificationSettings.Builder> internal__static_NotificationSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConversationId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationId, global::Hangups.Proto.ConversationId.Builder> internal__static_ConversationId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ParticipantId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ParticipantId, global::Hangups.Proto.ParticipantId.Builder> internal__static_ParticipantId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeviceStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeviceStatus, global::Hangups.Proto.DeviceStatus.Builder> internal__static_DeviceStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Presence__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Presence, global::Hangups.Proto.Presence.Builder> internal__static_Presence__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PresenceResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PresenceResult, global::Hangups.Proto.PresenceResult.Builder> internal__static_PresenceResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ClientIdentifier__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ClientIdentifier, global::Hangups.Proto.ClientIdentifier.Builder> internal__static_ClientIdentifier__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ClientPresenceState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ClientPresenceState, global::Hangups.Proto.ClientPresenceState.Builder> internal__static_ClientPresenceState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_UserEventState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UserEventState, global::Hangups.Proto.UserEventState.Builder> internal__static_UserEventState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Formatting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Formatting, global::Hangups.Proto.Formatting.Builder> internal__static_Formatting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_LinkData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.LinkData, global::Hangups.Proto.LinkData.Builder> internal__static_LinkData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Segment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Segment, global::Hangups.Proto.Segment.Builder> internal__static_Segment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PlusPhoto__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PlusPhoto, global::Hangups.Proto.PlusPhoto.Builder> internal__static_PlusPhoto__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PlusPhoto_Thumbnail__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PlusPhoto.Types.Thumbnail, global::Hangups.Proto.PlusPhoto.Types.Thumbnail.Builder> internal__static_PlusPhoto_Thumbnail__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Place__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Place, global::Hangups.Proto.Place.Builder> internal__static_Place__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Place_RepresentativeImage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Place.Types.RepresentativeImage, global::Hangups.Proto.Place.Types.RepresentativeImage.Builder> internal__static_Place_RepresentativeImage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EmbedItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EmbedItem, global::Hangups.Proto.EmbedItem.Builder> internal__static_EmbedItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Attachment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Attachment, global::Hangups.Proto.Attachment.Builder> internal__static_Attachment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_MessageContent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MessageContent, global::Hangups.Proto.MessageContent.Builder> internal__static_MessageContent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EventAnnotation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventAnnotation, global::Hangups.Proto.EventAnnotation.Builder> internal__static_EventAnnotation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ChatMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ChatMessage, global::Hangups.Proto.ChatMessage.Builder> internal__static_ChatMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_MembershipChange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MembershipChange, global::Hangups.Proto.MembershipChange.Builder> internal__static_MembershipChange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConversationRename__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationRename, global::Hangups.Proto.ConversationRename.Builder> internal__static_ConversationRename__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_HangoutEvent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.HangoutEvent, global::Hangups.Proto.HangoutEvent.Builder> internal__static_HangoutEvent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_OTRModification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.OTRModification, global::Hangups.Proto.OTRModification.Builder> internal__static_OTRModification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_HashModifier__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.HashModifier, global::Hangups.Proto.HashModifier.Builder> internal__static_HashModifier__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Event__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Event, global::Hangups.Proto.Event.Builder> internal__static_Event__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_UserReadState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UserReadState, global::Hangups.Proto.UserReadState.Builder> internal__static_UserReadState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeliveryMedium__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeliveryMedium, global::Hangups.Proto.DeliveryMedium.Builder> internal__static_DeliveryMedium__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeliveryMediumOption__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeliveryMediumOption, global::Hangups.Proto.DeliveryMediumOption.Builder> internal__static_DeliveryMediumOption__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_UserConversationState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UserConversationState, global::Hangups.Proto.UserConversationState.Builder> internal__static_UserConversationState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConversationParticipantData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationParticipantData, global::Hangups.Proto.ConversationParticipantData.Builder> internal__static_ConversationParticipantData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Conversation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Conversation, global::Hangups.Proto.Conversation.Builder> internal__static_Conversation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EasterEgg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEgg, global::Hangups.Proto.EasterEgg.Builder> internal__static_EasterEgg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_BlockStateChange__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.BlockStateChange, global::Hangups.Proto.BlockStateChange.Builder> internal__static_BlockStateChange__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Photo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Photo, global::Hangups.Proto.Photo.Builder> internal__static_Photo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ExistingMedia__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ExistingMedia, global::Hangups.Proto.ExistingMedia.Builder> internal__static_ExistingMedia__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EventRequestHeader__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventRequestHeader, global::Hangups.Proto.EventRequestHeader.Builder> internal__static_EventRequestHeader__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ClientVersion__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ClientVersion, global::Hangups.Proto.ClientVersion.Builder> internal__static_ClientVersion__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RequestHeader__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RequestHeader, global::Hangups.Proto.RequestHeader.Builder> internal__static_RequestHeader__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ResponseHeader__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ResponseHeader, global::Hangups.Proto.ResponseHeader.Builder> internal__static_ResponseHeader__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Entity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Entity, global::Hangups.Proto.Entity.Builder> internal__static_Entity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EntityProperties__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EntityProperties, global::Hangups.Proto.EntityProperties.Builder> internal__static_EntityProperties__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConversationState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationState, global::Hangups.Proto.ConversationState.Builder> internal__static_ConversationState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EventContinuationToken__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventContinuationToken, global::Hangups.Proto.EventContinuationToken.Builder> internal__static_EventContinuationToken__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EntityLookupSpec__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EntityLookupSpec, global::Hangups.Proto.EntityLookupSpec.Builder> internal__static_EntityLookupSpec__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConfigurationBit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConfigurationBit, global::Hangups.Proto.ConfigurationBit.Builder> internal__static_ConfigurationBit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RichPresenceState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RichPresenceState, global::Hangups.Proto.RichPresenceState.Builder> internal__static_RichPresenceState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RichPresenceEnabledState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RichPresenceEnabledState, global::Hangups.Proto.RichPresenceEnabledState.Builder> internal__static_RichPresenceEnabledState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DesktopOffSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DesktopOffSetting, global::Hangups.Proto.DesktopOffSetting.Builder> internal__static_DesktopOffSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DesktopOffState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DesktopOffState, global::Hangups.Proto.DesktopOffState.Builder> internal__static_DesktopOffState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DndSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DndSetting, global::Hangups.Proto.DndSetting.Builder> internal__static_DndSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PresenceStateSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PresenceStateSetting, global::Hangups.Proto.PresenceStateSetting.Builder> internal__static_PresenceStateSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_MoodMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodMessage, global::Hangups.Proto.MoodMessage.Builder> internal__static_MoodMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_MoodContent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodContent, global::Hangups.Proto.MoodContent.Builder> internal__static_MoodContent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_MoodSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodSetting, global::Hangups.Proto.MoodSetting.Builder> internal__static_MoodSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_MoodState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodState, global::Hangups.Proto.MoodState.Builder> internal__static_MoodState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeleteAction__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteAction, global::Hangups.Proto.DeleteAction.Builder> internal__static_DeleteAction__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_InviteeID__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.InviteeID, global::Hangups.Proto.InviteeID.Builder> internal__static_InviteeID__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Country__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Country, global::Hangups.Proto.Country.Builder> internal__static_Country__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DesktopSoundSetting__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DesktopSoundSetting, global::Hangups.Proto.DesktopSoundSetting.Builder> internal__static_DesktopSoundSetting__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PhoneData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PhoneData, global::Hangups.Proto.PhoneData.Builder> internal__static_PhoneData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Phone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Phone, global::Hangups.Proto.Phone.Builder> internal__static_Phone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_I18nData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.I18nData, global::Hangups.Proto.I18nData.Builder> internal__static_I18nData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PhoneNumber__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PhoneNumber, global::Hangups.Proto.PhoneNumber.Builder> internal__static_PhoneNumber__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SuggestedContactGroupHash__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SuggestedContactGroupHash, global::Hangups.Proto.SuggestedContactGroupHash.Builder> internal__static_SuggestedContactGroupHash__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SuggestedContact__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SuggestedContact, global::Hangups.Proto.SuggestedContact.Builder> internal__static_SuggestedContact__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SuggestedContactGroup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SuggestedContactGroup, global::Hangups.Proto.SuggestedContactGroup.Builder> internal__static_SuggestedContactGroup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_StateUpdateHeader__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.StateUpdateHeader, global::Hangups.Proto.StateUpdateHeader.Builder> internal__static_StateUpdateHeader__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EventNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventNotification, global::Hangups.Proto.EventNotification.Builder> internal__static_EventNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetFocusNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetFocusNotification, global::Hangups.Proto.SetFocusNotification.Builder> internal__static_SetFocusNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetTypingNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetTypingNotification, global::Hangups.Proto.SetTypingNotification.Builder> internal__static_SetTypingNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetConversationNotificationLevelNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationNotificationLevelNotification, global::Hangups.Proto.SetConversationNotificationLevelNotification.Builder> internal__static_SetConversationNotificationLevelNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ReplyToInviteNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ReplyToInviteNotification, global::Hangups.Proto.ReplyToInviteNotification.Builder> internal__static_ReplyToInviteNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_WatermarkNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.WatermarkNotification, global::Hangups.Proto.WatermarkNotification.Builder> internal__static_WatermarkNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConversationViewModification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationViewModification, global::Hangups.Proto.ConversationViewModification.Builder> internal__static_ConversationViewModification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EasterEggNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEggNotification, global::Hangups.Proto.EasterEggNotification.Builder> internal__static_EasterEggNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SelfPresenceNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SelfPresenceNotification, global::Hangups.Proto.SelfPresenceNotification.Builder> internal__static_SelfPresenceNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeleteActionNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteActionNotification, global::Hangups.Proto.DeleteActionNotification.Builder> internal__static_DeleteActionNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_PresenceNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PresenceNotification, global::Hangups.Proto.PresenceNotification.Builder> internal__static_PresenceNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_BlockNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.BlockNotification, global::Hangups.Proto.BlockNotification.Builder> internal__static_BlockNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetNotificationSettingNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetNotificationSettingNotification, global::Hangups.Proto.SetNotificationSettingNotification.Builder> internal__static_SetNotificationSettingNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RichPresenceEnabledStateNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RichPresenceEnabledStateNotification, global::Hangups.Proto.RichPresenceEnabledStateNotification.Builder> internal__static_RichPresenceEnabledStateNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_ConversationSpec__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationSpec, global::Hangups.Proto.ConversationSpec.Builder> internal__static_ConversationSpec__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_AddUserRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.AddUserRequest, global::Hangups.Proto.AddUserRequest.Builder> internal__static_AddUserRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_AddUserResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.AddUserResponse, global::Hangups.Proto.AddUserResponse.Builder> internal__static_AddUserResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_CreateConversationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.CreateConversationRequest, global::Hangups.Proto.CreateConversationRequest.Builder> internal__static_CreateConversationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_CreateConversationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.CreateConversationResponse, global::Hangups.Proto.CreateConversationResponse.Builder> internal__static_CreateConversationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeleteConversationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteConversationRequest, global::Hangups.Proto.DeleteConversationRequest.Builder> internal__static_DeleteConversationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DeleteConversationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteConversationResponse, global::Hangups.Proto.DeleteConversationResponse.Builder> internal__static_DeleteConversationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EasterEggRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEggRequest, global::Hangups.Proto.EasterEggRequest.Builder> internal__static_EasterEggRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_EasterEggResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEggResponse, global::Hangups.Proto.EasterEggResponse.Builder> internal__static_EasterEggResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetConversationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetConversationRequest, global::Hangups.Proto.GetConversationRequest.Builder> internal__static_GetConversationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetConversationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetConversationResponse, global::Hangups.Proto.GetConversationResponse.Builder> internal__static_GetConversationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetEntityByIdRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetEntityByIdRequest, global::Hangups.Proto.GetEntityByIdRequest.Builder> internal__static_GetEntityByIdRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetEntityByIdResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetEntityByIdResponse, global::Hangups.Proto.GetEntityByIdResponse.Builder> internal__static_GetEntityByIdResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetSuggestedEntitiesRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSuggestedEntitiesRequest, global::Hangups.Proto.GetSuggestedEntitiesRequest.Builder> internal__static_GetSuggestedEntitiesRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetSuggestedEntitiesResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSuggestedEntitiesResponse, global::Hangups.Proto.GetSuggestedEntitiesResponse.Builder> internal__static_GetSuggestedEntitiesResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetSelfInfoRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSelfInfoRequest, global::Hangups.Proto.GetSelfInfoRequest.Builder> internal__static_GetSelfInfoRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_GetSelfInfoResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSelfInfoResponse, global::Hangups.Proto.GetSelfInfoResponse.Builder> internal__static_GetSelfInfoResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QueryPresenceRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.QueryPresenceRequest, global::Hangups.Proto.QueryPresenceRequest.Builder> internal__static_QueryPresenceRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_QueryPresenceResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.QueryPresenceResponse, global::Hangups.Proto.QueryPresenceResponse.Builder> internal__static_QueryPresenceResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RemoveUserRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RemoveUserRequest, global::Hangups.Proto.RemoveUserRequest.Builder> internal__static_RemoveUserRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RemoveUserResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RemoveUserResponse, global::Hangups.Proto.RemoveUserResponse.Builder> internal__static_RemoveUserResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RenameConversationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RenameConversationRequest, global::Hangups.Proto.RenameConversationRequest.Builder> internal__static_RenameConversationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_RenameConversationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RenameConversationResponse, global::Hangups.Proto.RenameConversationResponse.Builder> internal__static_RenameConversationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SearchEntitiesRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SearchEntitiesRequest, global::Hangups.Proto.SearchEntitiesRequest.Builder> internal__static_SearchEntitiesRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SearchEntitiesResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SearchEntitiesResponse, global::Hangups.Proto.SearchEntitiesResponse.Builder> internal__static_SearchEntitiesResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SendChatMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SendChatMessageRequest, global::Hangups.Proto.SendChatMessageRequest.Builder> internal__static_SendChatMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SendChatMessageResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SendChatMessageResponse, global::Hangups.Proto.SendChatMessageResponse.Builder> internal__static_SendChatMessageResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetActiveClientRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetActiveClientRequest, global::Hangups.Proto.SetActiveClientRequest.Builder> internal__static_SetActiveClientRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetActiveClientResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetActiveClientResponse, global::Hangups.Proto.SetActiveClientResponse.Builder> internal__static_SetActiveClientResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetConversationLevelRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationLevelRequest, global::Hangups.Proto.SetConversationLevelRequest.Builder> internal__static_SetConversationLevelRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetConversationLevelResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationLevelResponse, global::Hangups.Proto.SetConversationLevelResponse.Builder> internal__static_SetConversationLevelResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetConversationNotificationLevelRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationNotificationLevelRequest, global::Hangups.Proto.SetConversationNotificationLevelRequest.Builder> internal__static_SetConversationNotificationLevelRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetConversationNotificationLevelResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationNotificationLevelResponse, global::Hangups.Proto.SetConversationNotificationLevelResponse.Builder> internal__static_SetConversationNotificationLevelResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetFocusRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetFocusRequest, global::Hangups.Proto.SetFocusRequest.Builder> internal__static_SetFocusRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetFocusResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetFocusResponse, global::Hangups.Proto.SetFocusResponse.Builder> internal__static_SetFocusResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetPresenceRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetPresenceRequest, global::Hangups.Proto.SetPresenceRequest.Builder> internal__static_SetPresenceRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetPresenceResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetPresenceResponse, global::Hangups.Proto.SetPresenceResponse.Builder> internal__static_SetPresenceResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetTypingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetTypingRequest, global::Hangups.Proto.SetTypingRequest.Builder> internal__static_SetTypingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SetTypingResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetTypingResponse, global::Hangups.Proto.SetTypingResponse.Builder> internal__static_SetTypingResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SyncAllNewEventsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncAllNewEventsRequest, global::Hangups.Proto.SyncAllNewEventsRequest.Builder> internal__static_SyncAllNewEventsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SyncAllNewEventsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncAllNewEventsResponse, global::Hangups.Proto.SyncAllNewEventsResponse.Builder> internal__static_SyncAllNewEventsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SyncRecentConversationsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncRecentConversationsRequest, global::Hangups.Proto.SyncRecentConversationsRequest.Builder> internal__static_SyncRecentConversationsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_SyncRecentConversationsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncRecentConversationsResponse, global::Hangups.Proto.SyncRecentConversationsResponse.Builder> internal__static_SyncRecentConversationsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_UpdateWatermarkRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UpdateWatermarkRequest, global::Hangups.Proto.UpdateWatermarkRequest.Builder> internal__static_UpdateWatermarkRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_UpdateWatermarkResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UpdateWatermarkResponse, global::Hangups.Proto.UpdateWatermarkResponse.Builder> internal__static_UpdateWatermarkResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Hangouts() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5oYW5nb3V0cy5wcm90byJcChNEb05vdERpc3R1cmJTZXR0aW5nEhYKDmRv", 
            "X25vdF9kaXN0dXJiGAEgASgIEhwKFGV4cGlyYXRpb25fdGltZXN0YW1wGAIg", 
            "ASgEEg8KB3ZlcnNpb24YAyABKAQiQgoUTm90aWZpY2F0aW9uU2V0dGluZ3MS", 
            "KgoMZG5kX3NldHRpbmdzGAEgASgLMhQuRG9Ob3REaXN0dXJiU2V0dGluZyIc", 
            "Cg5Db252ZXJzYXRpb25JZBIKCgJpZBgBIAEoCSIxCg1QYXJ0aWNpcGFudElk", 
            "Eg8KB2dhaWFfaWQYASABKAkSDwoHY2hhdF9pZBgCIAEoCSI/CgxEZXZpY2VT", 
            "dGF0dXMSDgoGbW9iaWxlGAEgASgIEg8KB2Rlc2t0b3AYAiABKAgSDgoGdGFi", 
            "bGV0GAMgASgIInoKCFByZXNlbmNlEhEKCXJlYWNoYWJsZRgBIAEoCBIRCglh", 
            "dmFpbGFibGUYAiABKAgSJAoNZGV2aWNlX3N0YXR1cxgGIAEoCzINLkRldmlj", 
            "ZVN0YXR1cxIiCgxtb29kX3NldHRpbmcYCSABKAsyDC5Nb29kU2V0dGluZyJO", 
            "Cg5QcmVzZW5jZVJlc3VsdBIfCgd1c2VyX2lkGAEgASgLMg4uUGFydGljaXBh", 
            "bnRJZBIbCghwcmVzZW5jZRgCIAEoCzIJLlByZXNlbmNlIjcKEENsaWVudElk", 
            "ZW50aWZpZXISEAoIcmVzb3VyY2UYASABKAkSEQoJaGVhZGVyX2lkGAIgASgJ", 
            "ImUKE0NsaWVudFByZXNlbmNlU3RhdGUSJQoKaWRlbnRpZmllchgBIAEoCzIR", 
            "LkNsaWVudElkZW50aWZpZXISJwoFc3RhdGUYAiABKA4yGC5DbGllbnRQcmVz", 
            "ZW5jZVN0YXRlVHlwZSJ+Cg5Vc2VyRXZlbnRTdGF0ZRIfCgd1c2VyX2lkGAEg", 
            "ASgLMg4uUGFydGljaXBhbnRJZBIbChNjbGllbnRfZ2VuZXJhdGVkX2lkGAIg", 
            "ASgJEi4KEm5vdGlmaWNhdGlvbl9sZXZlbBgDIAEoDjISLk5vdGlmaWNhdGlv", 
            "bkxldmVsIlQKCkZvcm1hdHRpbmcSDAoEYm9sZBgBIAEoCBIOCgZpdGFsaWMY", 
            "AiABKAgSFQoNc3RyaWtldGhyb3VnaBgDIAEoCBIRCgl1bmRlcmxpbmUYBCAB", 
            "KAgiHwoITGlua0RhdGESEwoLbGlua190YXJnZXQYASABKAkicgoHU2VnbWVu", 
            "dBIaCgR0eXBlGAEgAigOMgwuU2VnbWVudFR5cGUSDAoEdGV4dBgCIAEoCRIf", 
            "Cgpmb3JtYXR0aW5nGAMgASgLMgsuRm9ybWF0dGluZxIcCglsaW5rX2RhdGEY", 
            "BCABKAsyCS5MaW5rRGF0YSKJAwoJUGx1c1Bob3RvEicKCXRodW1ibmFpbBgB", 
            "IAEoCzIULlBsdXNQaG90by5UaHVtYm5haWwSGwoTb3duZXJfb2JmdXNjYXRl", 
            "ZF9pZBgCIAEoCRIQCghhbGJ1bV9pZBgDIAEoCRIQCghwaG90b19pZBgEIAEo", 
            "CRILCgN1cmwYBiABKAkSHAoUb3JpZ2luYWxfY29udGVudF91cmwYCiABKAkS", 
            "KAoKbWVkaWFfdHlwZRgNIAEoDjIULlBsdXNQaG90by5NZWRpYVR5cGUSEQoJ", 
            "c3RyZWFtX2lkGA4gAygJGlAKCVRodW1ibmFpbBILCgN1cmwYASABKAkSEQoJ", 
            "aW1hZ2VfdXJsGAQgASgJEhAKCHdpZHRoX3B4GAogASgEEhEKCWhlaWdodF9w", 
            "eBgLIAEoBCJYCglNZWRpYVR5cGUSFgoSTUVESUFfVFlQRV9VTktOT1dOEAAS", 
            "FAoQTUVESUFfVFlQRV9QSE9UTxABEh0KGU1FRElBX1RZUEVfQU5JTUFURURf", 
            "UEhPVE8QBCKBAQoFUGxhY2USCwoDdXJsGAEgASgJEgwKBG5hbWUYAyABKAkS", 
            "OQoUcmVwcmVzZW50YXRpdmVfaW1hZ2UYuQEgASgLMhouUGxhY2UuUmVwcmVz", 
            "ZW50YXRpdmVJbWFnZRoiChNSZXByZXNlbnRhdGl2ZUltYWdlEgsKA3VybBgC", 
            "IAEoCSJtCglFbWJlZEl0ZW0SFwoEdHlwZRgBIAMoDjIJLkl0ZW1UeXBlEgoK", 
            "AmlkGAIgASgJEiEKCnBsdXNfcGhvdG8YlYGXDSABKAsyCi5QbHVzUGhvdG8S", 
            "GAoFcGxhY2UY6M+KESABKAsyBi5QbGFjZSIsCgpBdHRhY2htZW50Eh4KCmVt", 
            "YmVkX2l0ZW0YASABKAsyCi5FbWJlZEl0ZW0iTAoOTWVzc2FnZUNvbnRlbnQS", 
            "GQoHc2VnbWVudBgBIAMoCzIILlNlZ21lbnQSHwoKYXR0YWNobWVudBgCIAMo", 
            "CzILLkF0dGFjaG1lbnQiLgoPRXZlbnRBbm5vdGF0aW9uEgwKBHR5cGUYASAB", 
            "KAUSDQoFdmFsdWUYAiABKAkiXQoLQ2hhdE1lc3NhZ2USJAoKYW5ub3RhdGlv", 
            "bhgCIAMoCzIQLkV2ZW50QW5ub3RhdGlvbhIoCg9tZXNzYWdlX2NvbnRlbnQY", 
            "AyABKAsyDy5NZXNzYWdlQ29udGVudCJgChBNZW1iZXJzaGlwQ2hhbmdlEiMK", 
            "BHR5cGUYASABKA4yFS5NZW1iZXJzaGlwQ2hhbmdlVHlwZRInCg9wYXJ0aWNp", 
            "cGFudF9pZHMYAyADKAsyDi5QYXJ0aWNpcGFudElkIjgKEkNvbnZlcnNhdGlv", 
            "blJlbmFtZRIQCghuZXdfbmFtZRgBIAEoCRIQCghvbGRfbmFtZRgCIAEoCSJd", 
            "CgxIYW5nb3V0RXZlbnQSJQoKZXZlbnRfdHlwZRgBIAEoDjIRLkhhbmdvdXRF", 
            "dmVudFR5cGUSJgoOcGFydGljaXBhbnRfaWQYAiADKAsyDi5QYXJ0aWNpcGFu", 
            "dElkIsUBCg9PVFJNb2RpZmljYXRpb24SKwoOb2xkX290cl9zdGF0dXMYASAB", 
            "KA4yEy5PZmZUaGVSZWNvcmRTdGF0dXMSKwoObmV3X290cl9zdGF0dXMYAiAB", 
            "KA4yEy5PZmZUaGVSZWNvcmRTdGF0dXMSKwoOb2xkX290cl90b2dnbGUYAyAB", 
            "KA4yEy5PZmZUaGVSZWNvcmRUb2dnbGUSKwoObmV3X290cl90b2dnbGUYBCAB", 
            "KA4yEy5PZmZUaGVSZWNvcmRUb2dnbGUiRQoMSGFzaE1vZGlmaWVyEhEKCXVw", 
            "ZGF0ZV9pZBgBIAEoCRIRCgloYXNoX2RpZmYYAiABKAQSDwoHdmVyc2lvbhgE", 
            "IAEoBCKaBQoFRXZlbnQSKAoPY29udmVyc2F0aW9uX2lkGAEgASgLMg8uQ29u", 
            "dmVyc2F0aW9uSWQSIQoJc2VuZGVyX2lkGAIgASgLMg4uUGFydGljaXBhbnRJ", 
            "ZBIRCgl0aW1lc3RhbXAYAyABKAQSKQoQc2VsZl9ldmVudF9zdGF0ZRgEIAEo", 
            "CzIPLlVzZXJFdmVudFN0YXRlEiAKC3NvdXJjZV90eXBlGAYgASgOMgsuU291", 
            "cmNlVHlwZRIiCgxjaGF0X21lc3NhZ2UYByABKAsyDC5DaGF0TWVzc2FnZRIs", 
            "ChFtZW1iZXJzaGlwX2NoYW5nZRgJIAEoCzIRLk1lbWJlcnNoaXBDaGFuZ2US", 
            "MAoTY29udmVyc2F0aW9uX3JlbmFtZRgKIAEoCzITLkNvbnZlcnNhdGlvblJl", 
            "bmFtZRIkCg1oYW5nb3V0X2V2ZW50GAsgASgLMg0uSGFuZ291dEV2ZW50EhAK", 
            "CGV2ZW50X2lkGAwgASgJEhwKFGV4cGlyYXRpb25fdGltZXN0YW1wGA0gASgE", 
            "EioKEG90cl9tb2RpZmljYXRpb24YDiABKAsyEC5PVFJNb2RpZmljYXRpb24S", 
            "HwoXYWR2YW5jZXNfc29ydF90aW1lc3RhbXAYDyABKAgSJwoKb3RyX3N0YXR1", 
            "cxgQIAEoDjITLk9mZlRoZVJlY29yZFN0YXR1cxIRCglwZXJzaXN0ZWQYESAB", 
            "KAgSJAoLbWVkaXVtX3R5cGUYFCABKAsyDy5EZWxpdmVyeU1lZGl1bRIeCgpl", 
            "dmVudF90eXBlGBcgASgOMgouRXZlbnRUeXBlEhUKDWV2ZW50X3ZlcnNpb24Y", 
            "GCABKAQSJAoNaGFzaF9tb2RpZmllchgaIAEoCzINLkhhc2hNb2RpZmllciJW", 
            "Cg1Vc2VyUmVhZFN0YXRlEiYKDnBhcnRpY2lwYW50X2lkGAEgASgLMg4uUGFy", 
            "dGljaXBhbnRJZBIdChVsYXRlc3RfcmVhZF90aW1lc3RhbXAYAiABKAQiUQoO", 
            "RGVsaXZlcnlNZWRpdW0SKAoLbWVkaXVtX3R5cGUYASABKA4yEy5EZWxpdmVy", 
            "eU1lZGl1bVR5cGUSFQoFcGhvbmUYAiABKAsyBi5QaG9uZSJZChREZWxpdmVy", 
            "eU1lZGl1bU9wdGlvbhIoCg9kZWxpdmVyeV9tZWRpdW0YASABKAsyDy5EZWxp", 
            "dmVyeU1lZGl1bRIXCg9jdXJyZW50X2RlZmF1bHQYAiABKAgi+gIKFVVzZXJD", 
            "b252ZXJzYXRpb25TdGF0ZRIbChNjbGllbnRfZ2VuZXJhdGVkX2lkGAIgASgJ", 
            "EicKD3NlbGZfcmVhZF9zdGF0ZRgHIAEoCzIOLlVzZXJSZWFkU3RhdGUSIwoG", 
            "c3RhdHVzGAggASgOMhMuQ29udmVyc2F0aW9uU3RhdHVzEi4KEm5vdGlmaWNh", 
            "dGlvbl9sZXZlbBgJIAEoDjISLk5vdGlmaWNhdGlvbkxldmVsEh8KBHZpZXcY", 
            "CiADKA4yES5Db252ZXJzYXRpb25WaWV3EiIKCmludml0ZXJfaWQYCyABKAsy", 
            "Di5QYXJ0aWNpcGFudElkEhgKEGludml0ZV90aW1lc3RhbXAYDCABKAQSFgoO", 
            "c29ydF90aW1lc3RhbXAYDSABKAQSGAoQYWN0aXZlX3RpbWVzdGFtcBgOIAEo", 
            "BBI1ChZkZWxpdmVyeV9tZWRpdW1fb3B0aW9uGBEgAygLMhUuRGVsaXZlcnlN", 
            "ZWRpdW1PcHRpb24i3AEKG0NvbnZlcnNhdGlvblBhcnRpY2lwYW50RGF0YRIa", 
            "CgJpZBgBIAEoCzIOLlBhcnRpY2lwYW50SWQSFQoNZmFsbGJhY2tfbmFtZRgC", 
            "IAEoCRIsChFpbnZpdGF0aW9uX3N0YXR1cxgDIAEoDjIRLkludml0YXRpb25T", 
            "dGF0dXMSKgoQcGFydGljaXBhbnRfdHlwZRgFIAEoDjIQLlBhcnRpY2lwYW50", 
            "VHlwZRIwChVuZXdfaW52aXRhdGlvbl9zdGF0dXMYBiABKA4yES5JbnZpdGF0", 
            "aW9uU3RhdHVzIo8ECgxDb252ZXJzYXRpb24SKAoPY29udmVyc2F0aW9uX2lk", 
            "GAEgASgLMg8uQ29udmVyc2F0aW9uSWQSHwoEdHlwZRgCIAEoDjIRLkNvbnZl", 
            "cnNhdGlvblR5cGUSDAoEbmFtZRgDIAEoCRI3ChdzZWxmX2NvbnZlcnNhdGlv", 
            "bl9zdGF0ZRgEIAEoCzIWLlVzZXJDb252ZXJzYXRpb25TdGF0ZRIiCgpyZWFk", 
            "X3N0YXRlGAggAygLMg4uVXNlclJlYWRTdGF0ZRIaChJoYXNfYWN0aXZlX2hh", 
            "bmdvdXQYCSABKAgSJwoKb3RyX3N0YXR1cxgKIAEoDjITLk9mZlRoZVJlY29y", 
            "ZFN0YXR1cxInCgpvdHJfdG9nZ2xlGAsgASgOMhMuT2ZmVGhlUmVjb3JkVG9n", 
            "Z2xlEiYKHmNvbnZlcnNhdGlvbl9oaXN0b3J5X3N1cHBvcnRlZBgMIAEoCBIr", 
            "ChNjdXJyZW50X3BhcnRpY2lwYW50GA0gAygLMg4uUGFydGljaXBhbnRJZBI2", 
            "ChBwYXJ0aWNpcGFudF9kYXRhGA4gAygLMhwuQ29udmVyc2F0aW9uUGFydGlj", 
            "aXBhbnREYXRhEiIKDG5ldHdvcmtfdHlwZRgSIAMoDjIMLk5ldHdvcmtUeXBl", 
            "EioKE2ZvcmNlX2hpc3Rvcnlfc3RhdGUYEyABKA4yDS5Gb3JjZUhpc3Rvcnki", 
            "HAoJRWFzdGVyRWdnEg8KB21lc3NhZ2UYASABKAkiYAoQQmxvY2tTdGF0ZUNo", 
            "YW5nZRImCg5wYXJ0aWNpcGFudF9pZBgBIAEoCzIOLlBhcnRpY2lwYW50SWQS", 
            "JAoPbmV3X2Jsb2NrX3N0YXRlGAIgASgOMgsuQmxvY2tTdGF0ZSJsCgVQaG90", 
            "bxIQCghwaG90b19pZBgBIAEoCRIlCh1kZWxldGVfYWxidW1sZXNzX3NvdXJj", 
            "ZV9waG90bxgCIAEoCBIPCgd1c2VyX2lkGAMgASgJEhkKEWlzX2N1c3RvbV91", 
            "c2VyX2lkGAQgASgIIiYKDUV4aXN0aW5nTWVkaWESFQoFcGhvdG8YASABKAsy", 
            "Bi5QaG90byLQAQoSRXZlbnRSZXF1ZXN0SGVhZGVyEigKD2NvbnZlcnNhdGlv", 
            "bl9pZBgBIAEoCzIPLkNvbnZlcnNhdGlvbklkEhsKE2NsaWVudF9nZW5lcmF0", 
            "ZWRfaWQYAiABKAQSKQoMZXhwZWN0ZWRfb3RyGAMgASgOMhMuT2ZmVGhlUmVj", 
            "b3JkU3RhdHVzEigKD2RlbGl2ZXJ5X21lZGl1bRgEIAEoCzIPLkRlbGl2ZXJ5", 
            "TWVkaXVtEh4KCmV2ZW50X3R5cGUYBSABKA4yCi5FdmVudFR5cGUiuQEKDUNs", 
            "aWVudFZlcnNpb24SHAoJY2xpZW50X2lkGAEgASgOMgkuQ2xpZW50SWQSJAoK", 
            "YnVpbGRfdHlwZRgCIAEoDjIQLkNsaWVudEJ1aWxkVHlwZRIVCg1tYWpvcl92", 
            "ZXJzaW9uGAMgASgJEhkKEXZlcnNpb25fdGltZXN0YW1wGAQgASgEEhkKEWRl", 
            "dmljZV9vc192ZXJzaW9uGAUgASgJEhcKD2RldmljZV9oYXJkd2FyZRgGIAEo", 
            "CSJ8Cg1SZXF1ZXN0SGVhZGVyEiYKDmNsaWVudF92ZXJzaW9uGAEgASgLMg4u", 
            "Q2xpZW50VmVyc2lvbhIsChFjbGllbnRfaWRlbnRpZmllchgCIAEoCzIRLkNs", 
            "aWVudElkZW50aWZpZXISFQoNbGFuZ3VhZ2VfY29kZRgEIAEoCSKWAQoOUmVz", 
            "cG9uc2VIZWFkZXISHwoGc3RhdHVzGAEgASgOMg8uUmVzcG9uc2VTdGF0dXMS", 
            "GQoRZXJyb3JfZGVzY3JpcHRpb24YAiABKAkSEQoJZGVidWdfdXJsGAMgASgJ", 
            "EhgKEHJlcXVlc3RfdHJhY2VfaWQYBCABKAkSGwoTY3VycmVudF9zZXJ2ZXJf", 
            "dGltZRgFIAEoBCLPAgoGRW50aXR5EhoKAmlkGAkgASgLMg4uUGFydGljaXBh", 
            "bnRJZBIbCghwcmVzZW5jZRgIIAEoCzIJLlByZXNlbmNlEiUKCnByb3BlcnRp", 
            "ZXMYCiABKAsyES5FbnRpdHlQcm9wZXJ0aWVzEiUKC2VudGl0eV90eXBlGA0g", 
            "ASgOMhAuUGFydGljaXBhbnRUeXBlEjgKFmhhZF9wYXN0X2hhbmdvdXRfc3Rh", 
            "dGUYECABKA4yGC5FbnRpdHkuUGFzdEhhbmdvdXRTdGF0ZSKDAQoQUGFzdEhh", 
            "bmdvdXRTdGF0ZRIeChpQQVNUX0hBTkdPVVRfU1RBVEVfVU5LTk9XThAAEicK", 
            "I1BBU1RfSEFOR09VVF9TVEFURV9IQURfUEFTVF9IQU5HT1VUEAESJgoiUEFT", 
            "VF9IQU5HT1VUX1NUQVRFX05PX1BBU1RfSEFOR09VVBACIv8BChBFbnRpdHlQ", 
            "cm9wZXJ0aWVzEhoKBHR5cGUYASABKA4yDC5Qcm9maWxlVHlwZRIUCgxkaXNw", 
            "bGF5X25hbWUYAiABKAkSEgoKZmlyc3RfbmFtZRgDIAEoCRIRCglwaG90b191", 
            "cmwYBCABKAkSDQoFZW1haWwYBSADKAkSDQoFcGhvbmUYBiADKAkSFwoPaW5f", 
            "dXNlcnNfZG9tYWluGAogASgIEhcKBmdlbmRlchgLIAEoDjIHLkdlbmRlchIp", 
            "ChBwaG90b191cmxfc3RhdHVzGAwgASgOMg8uUGhvdG9VcmxTdGF0dXMSFwoP", 
            "Y2Fub25pY2FsX2VtYWlsGA8gASgJIrQBChFDb252ZXJzYXRpb25TdGF0ZRIo", 
            "Cg9jb252ZXJzYXRpb25faWQYASABKAsyDy5Db252ZXJzYXRpb25JZBIjCgxj", 
            "b252ZXJzYXRpb24YAiABKAsyDS5Db252ZXJzYXRpb24SFQoFZXZlbnQYAyAD", 
            "KAsyBi5FdmVudBI5ChhldmVudF9jb250aW51YXRpb25fdG9rZW4YBSABKAsy", 
            "Fy5FdmVudENvbnRpbnVhdGlvblRva2VuImcKFkV2ZW50Q29udGludWF0aW9u", 
            "VG9rZW4SEAoIZXZlbnRfaWQYASABKAkSIgoac3RvcmFnZV9jb250aW51YXRp", 
            "b25fdG9rZW4YAiABKAwSFwoPZXZlbnRfdGltZXN0YW1wGAMgASgEIiMKEEVu", 
            "dGl0eUxvb2t1cFNwZWMSDwoHZ2FpYV9pZBgBIAEoCSJYChBDb25maWd1cmF0", 
            "aW9uQml0EjUKFmNvbmZpZ3VyYXRpb25fYml0X3R5cGUYASABKA4yFS5Db25m", 
            "aWd1cmF0aW9uQml0VHlwZRINCgV2YWx1ZRgCIAEoCCJXChFSaWNoUHJlc2Vu", 
            "Y2VTdGF0ZRJCCh9nZXRfcmljaF9wcmVzZW5jZV9lbmFibGVkX3N0YXRlGAMg", 
            "AygLMhkuUmljaFByZXNlbmNlRW5hYmxlZFN0YXRlIkwKGFJpY2hQcmVzZW5j", 
            "ZUVuYWJsZWRTdGF0ZRIfCgR0eXBlGAEgASgOMhEuUmljaFByZXNlbmNlVHlw", 
            "ZRIPCgdlbmFibGVkGAIgASgIIigKEURlc2t0b3BPZmZTZXR0aW5nEhMKC2Rl", 
            "c2t0b3Bfb2ZmGAEgASgIIjcKD0Rlc2t0b3BPZmZTdGF0ZRITCgtkZXNrdG9w", 
            "X29mZhgBIAEoCBIPCgd2ZXJzaW9uGAIgASgEIjoKCkRuZFNldHRpbmcSFgoO", 
            "ZG9fbm90X2Rpc3R1cmIYASABKAgSFAoMdGltZW91dF9zZWNzGAIgASgEIlQK", 
            "FFByZXNlbmNlU3RhdGVTZXR0aW5nEhQKDHRpbWVvdXRfc2VjcxgBIAEoBBIm", 
            "CgR0eXBlGAIgASgOMhguQ2xpZW50UHJlc2VuY2VTdGF0ZVR5cGUiMQoLTW9v", 
            "ZE1lc3NhZ2USIgoMbW9vZF9jb250ZW50GAEgASgLMgwuTW9vZENvbnRlbnQi", 
            "KAoLTW9vZENvbnRlbnQSGQoHc2VnbWVudBgBIAMoCzIILlNlZ21lbnQiMQoL", 
            "TW9vZFNldHRpbmcSIgoMbW9vZF9tZXNzYWdlGAEgASgLMgwuTW9vZE1lc3Nh", 
            "Z2UiLwoJTW9vZFN0YXRlEiIKDG1vb2Rfc2V0dGluZxgEIAEoCzIMLk1vb2RT", 
            "ZXR0aW5nIncKDERlbGV0ZUFjdGlvbhIfChdkZWxldGVfYWN0aW9uX3RpbWVz", 
            "dGFtcBgBIAEoBBIkChxkZWxldGVfdXBwZXJfYm91bmRfdGltZXN0YW1wGAIg", 
            "ASgEEiAKC2RlbGV0ZV90eXBlGAMgASgOMgsuRGVsZXRlVHlwZSIzCglJbnZp", 
            "dGVlSUQSDwoHZ2FpYV9pZBgBIAEoCRIVCg1mYWxsYmFja19uYW1lGAQgASgJ", 
            "IjQKB0NvdW50cnkSEwoLcmVnaW9uX2NvZGUYASABKAkSFAoMY291bnRyeV9j", 
            "b2RlGAIgASgEIm4KE0Rlc2t0b3BTb3VuZFNldHRpbmcSKAoTZGVza3RvcF9z", 
            "b3VuZF9zdGF0ZRgBIAEoDjILLlNvdW5kU3RhdGUSLQoYZGVza3RvcF9yaW5n", 
            "X3NvdW5kX3N0YXRlGAIgASgOMgsuU291bmRTdGF0ZSJaCglQaG9uZURhdGES", 
            "FQoFcGhvbmUYASADKAsyBi5QaG9uZRI2ChdjYWxsZXJfaWRfc2V0dGluZ3Nf", 
            "bWFzaxgDIAEoDjIVLkNhbGxlcklkU2V0dGluZ3NNYXNrItwBCgVQaG9uZRIi", 
            "CgxwaG9uZV9udW1iZXIYASABKAsyDC5QaG9uZU51bWJlchIUCgxnb29nbGVf", 
            "dm9pY2UYAiABKAgSNQoTdmVyaWZpY2F0aW9uX3N0YXR1cxgDIAEoDjIYLlBo", 
            "b25lVmVyaWZpY2F0aW9uU3RhdHVzEhQKDGRpc2NvdmVyYWJsZRgEIAEoCBI7", 
            "ChZkaXNjb3ZlcmFiaWxpdHlfc3RhdHVzGAUgASgOMhsuUGhvbmVEaXNjb3Zl", 
            "cmFiaWxpdHlTdGF0dXMSDwoHcHJpbWFyeRgGIAEoCCKxAQoISTE4bkRhdGES", 
            "FwoPbmF0aW9uYWxfbnVtYmVyGAEgASgJEhwKFGludGVybmF0aW9uYWxfbnVt", 
            "YmVyGAIgASgJEhQKDGNvdW50cnlfY29kZRgDIAEoBBITCgtyZWdpb25fY29k", 
            "ZRgEIAEoCRIQCghpc192YWxpZBgFIAEoCBIxChF2YWxpZGF0aW9uX3Jlc3Vs", 
            "dBgGIAEoDjIWLlBob25lVmFsaWRhdGlvblJlc3VsdCI5CgtQaG9uZU51bWJl", 
            "chIMCgRlMTY0GAEgASgJEhwKCWkxOG5fZGF0YRgCIAEoCzIJLkkxOG5EYXRh", 
            "Ij4KGVN1Z2dlc3RlZENvbnRhY3RHcm91cEhhc2gSEwoLbWF4X3Jlc3VsdHMY", 
            "ASABKAQSDAoEaGFzaBgCIAEoDCJZChBTdWdnZXN0ZWRDb250YWN0EhcKBmVu", 
            "dGl0eRgBIAEoCzIHLkVudGl0eRIsChFpbnZpdGF0aW9uX3N0YXR1cxgCIAEo", 
            "DjIRLkludml0YXRpb25TdGF0dXMiXwoVU3VnZ2VzdGVkQ29udGFjdEdyb3Vw", 
            "EhQKDGhhc2hfbWF0Y2hlZBgBIAEoCBIMCgRoYXNoGAIgASgMEiIKB2NvbnRh", 
            "Y3QYAyADKAsyES5TdWdnZXN0ZWRDb250YWN0IrEBChFTdGF0ZVVwZGF0ZUhl", 
            "YWRlchIvChNhY3RpdmVfY2xpZW50X3N0YXRlGAEgASgOMhIuQWN0aXZlQ2xp", 
            "ZW50U3RhdGUSGAoQcmVxdWVzdF90cmFjZV9pZBgDIAEoCRI0ChVub3RpZmlj", 
            "YXRpb25fc2V0dGluZ3MYBCABKAsyFS5Ob3RpZmljYXRpb25TZXR0aW5ncxIb", 
            "ChNjdXJyZW50X3NlcnZlcl90aW1lGAUgASgEIioKEUV2ZW50Tm90aWZpY2F0", 
            "aW9uEhUKBWV2ZW50GAEgASgLMgYuRXZlbnQirgEKFFNldEZvY3VzTm90aWZp", 
            "Y2F0aW9uEigKD2NvbnZlcnNhdGlvbl9pZBgBIAEoCzIPLkNvbnZlcnNhdGlv", 
            "bklkEiEKCXNlbmRlcl9pZBgCIAEoCzIOLlBhcnRpY2lwYW50SWQSEQoJdGlt", 
            "ZXN0YW1wGAMgASgEEhgKBHR5cGUYBCABKA4yCi5Gb2N1c1R5cGUSHAoGZGV2", 
            "aWNlGAUgASgOMgwuRm9jdXNEZXZpY2UikgEKFVNldFR5cGluZ05vdGlmaWNh", 
            "dGlvbhIoCg9jb252ZXJzYXRpb25faWQYASABKAsyDy5Db252ZXJzYXRpb25J", 
            "ZBIhCglzZW5kZXJfaWQYAiABKAsyDi5QYXJ0aWNpcGFudElkEhEKCXRpbWVz", 
            "dGFtcBgDIAEoBBIZCgR0eXBlGAQgASgOMgsuVHlwaW5nVHlwZSKOAQosU2V0", 
            "Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uTGV2ZWxOb3RpZmljYXRpb24SKAoP", 
            "Y29udmVyc2F0aW9uX2lkGAEgASgLMg8uQ29udmVyc2F0aW9uSWQSIQoFbGV2", 
            "ZWwYAiABKA4yEi5Ob3RpZmljYXRpb25MZXZlbBIRCgl0aW1lc3RhbXAYBCAB", 
            "KAQiZwoZUmVwbHlUb0ludml0ZU5vdGlmaWNhdGlvbhIoCg9jb252ZXJzYXRp", 
            "b25faWQYASABKAsyDy5Db252ZXJzYXRpb25JZBIgCgR0eXBlGAIgASgOMhIu", 
            "UmVwbHlUb0ludml0ZVR5cGUigwEKFVdhdGVybWFya05vdGlmaWNhdGlvbhIh", 
            "CglzZW5kZXJfaWQYASABKAsyDi5QYXJ0aWNpcGFudElkEigKD2NvbnZlcnNh", 
            "dGlvbl9pZBgCIAEoCzIPLkNvbnZlcnNhdGlvbklkEh0KFWxhdGVzdF9yZWFk", 
            "X3RpbWVzdGFtcBgDIAEoBCKSAQocQ29udmVyc2F0aW9uVmlld01vZGlmaWNh", 
            "dGlvbhIoCg9jb252ZXJzYXRpb25faWQYASABKAsyDy5Db252ZXJzYXRpb25J", 
            "ZBIjCghvbGRfdmlldxgCIAEoDjIRLkNvbnZlcnNhdGlvblZpZXcSIwoIbmV3", 
            "X3ZpZXcYAyABKA4yES5Db252ZXJzYXRpb25WaWV3IoQBChVFYXN0ZXJFZ2dO", 
            "b3RpZmljYXRpb24SIQoJc2VuZGVyX2lkGAEgASgLMg4uUGFydGljaXBhbnRJ", 
            "ZBIoCg9jb252ZXJzYXRpb25faWQYAiABKAsyDy5Db252ZXJzYXRpb25JZBIe", 
            "CgplYXN0ZXJfZWdnGAMgASgLMgouRWFzdGVyRWdnIoMCChhTZWxmUHJlc2Vu", 
            "Y2VOb3RpZmljYXRpb24SMwoVY2xpZW50X3ByZXNlbmNlX3N0YXRlGAEgASgL", 
            "MhQuQ2xpZW50UHJlc2VuY2VTdGF0ZRI0ChZkb19ub3RfZGlzdHVyYl9zZXR0", 
            "aW5nGAMgASgLMhQuRG9Ob3REaXN0dXJiU2V0dGluZxIvChNkZXNrdG9wX29m", 
            "Zl9zZXR0aW5nGAQgASgLMhIuRGVza3RvcE9mZlNldHRpbmcSKwoRZGVza3Rv", 
            "cF9vZmZfc3RhdGUYBSABKAsyEC5EZXNrdG9wT2ZmU3RhdGUSHgoKbW9vZF9z", 
            "dGF0ZRgGIAEoCzIKLk1vb2RTdGF0ZSJqChhEZWxldGVBY3Rpb25Ob3RpZmlj", 
            "YXRpb24SKAoPY29udmVyc2F0aW9uX2lkGAEgASgLMg8uQ29udmVyc2F0aW9u", 
            "SWQSJAoNZGVsZXRlX2FjdGlvbhgCIAEoCzINLkRlbGV0ZUFjdGlvbiI5ChRQ", 
            "cmVzZW5jZU5vdGlmaWNhdGlvbhIhCghwcmVzZW5jZRgBIAMoCzIPLlByZXNl", 
            "bmNlUmVzdWx0IkIKEUJsb2NrTm90aWZpY2F0aW9uEi0KEmJsb2NrX3N0YXRl", 
            "X2NoYW5nZRgBIAMoCzIRLkJsb2NrU3RhdGVDaGFuZ2UiWQoiU2V0Tm90aWZp", 
            "Y2F0aW9uU2V0dGluZ05vdGlmaWNhdGlvbhIzChVkZXNrdG9wX3NvdW5kX3Nl", 
            "dHRpbmcYAiABKAsyFC5EZXNrdG9wU291bmRTZXR0aW5nImYKJFJpY2hQcmVz", 
            "ZW5jZUVuYWJsZWRTdGF0ZU5vdGlmaWNhdGlvbhI+ChtyaWNoX3ByZXNlbmNl", 
            "X2VuYWJsZWRfc3RhdGUYASADKAsyGS5SaWNoUHJlc2VuY2VFbmFibGVkU3Rh", 
            "dGUiPAoQQ29udmVyc2F0aW9uU3BlYxIoCg9jb252ZXJzYXRpb25faWQYASAB", 
            "KAsyDy5Db252ZXJzYXRpb25JZCKLAQoOQWRkVXNlclJlcXVlc3QSJgoOcmVx", 
            "dWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEh4KCmludml0ZWVf", 
            "aWQYAyADKAsyCi5JbnZpdGVlSUQSMQoUZXZlbnRfcmVxdWVzdF9oZWFkZXIY", 
            "BSABKAsyEy5FdmVudFJlcXVlc3RIZWFkZXIiWgoPQWRkVXNlclJlc3BvbnNl", 
            "EigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVyEh0K", 
            "DWNyZWF0ZWRfZXZlbnQYBSABKAsyBi5FdmVudCKvAQoZQ3JlYXRlQ29udmVy", 
            "c2F0aW9uUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVl", 
            "c3RIZWFkZXISHwoEdHlwZRgCIAEoDjIRLkNvbnZlcnNhdGlvblR5cGUSGwoT", 
            "Y2xpZW50X2dlbmVyYXRlZF9pZBgDIAEoBBIMCgRuYW1lGAQgASgJEh4KCmlu", 
            "dml0ZWVfaWQYBSADKAsyCi5JbnZpdGVlSUQijQEKGkNyZWF0ZUNvbnZlcnNh", 
            "dGlvblJlc3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3Bv", 
            "bnNlSGVhZGVyEiMKDGNvbnZlcnNhdGlvbhgCIAEoCzINLkNvbnZlcnNhdGlv", 
            "bhIgChhuZXdfY29udmVyc2F0aW9uX2NyZWF0ZWQYByABKAgikwEKGURlbGV0", 
            "ZUNvbnZlcnNhdGlvblJlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsy", 
            "Di5SZXF1ZXN0SGVhZGVyEigKD2NvbnZlcnNhdGlvbl9pZBgCIAEoCzIPLkNv", 
            "bnZlcnNhdGlvbklkEiQKHGRlbGV0ZV91cHBlcl9ib3VuZF90aW1lc3RhbXAY", 
            "AyABKAQibAoaRGVsZXRlQ29udmVyc2F0aW9uUmVzcG9uc2USKAoPcmVzcG9u", 
            "c2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISJAoNZGVsZXRlX2Fj", 
            "dGlvbhgCIAEoCzINLkRlbGV0ZUFjdGlvbiKEAQoQRWFzdGVyRWdnUmVxdWVz", 
            "dBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJlcXVlc3RIZWFkZXISKAoP", 
            "Y29udmVyc2F0aW9uX2lkGAIgASgLMg8uQ29udmVyc2F0aW9uSWQSHgoKZWFz", 
            "dGVyX2VnZxgDIAEoCzIKLkVhc3RlckVnZyJQChFFYXN0ZXJFZ2dSZXNwb25z", 
            "ZRIoCg9yZXNwb25zZV9oZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlchIR", 
            "Cgl0aW1lc3RhbXAYAiABKAQi5QEKFkdldENvbnZlcnNhdGlvblJlcXVlc3QS", 
            "JgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEiwKEWNv", 
            "bnZlcnNhdGlvbl9zcGVjGAIgASgLMhEuQ29udmVyc2F0aW9uU3BlYxIVCg1p", 
            "bmNsdWRlX2V2ZW50GAQgASgIEiMKG21heF9ldmVudHNfcGVyX2NvbnZlcnNh", 
            "dGlvbhgGIAEoBBI5ChhldmVudF9jb250aW51YXRpb25fdG9rZW4YByABKAsy", 
            "Fy5FdmVudENvbnRpbnVhdGlvblRva2VuInMKF0dldENvbnZlcnNhdGlvblJl", 
            "c3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVh", 
            "ZGVyEi4KEmNvbnZlcnNhdGlvbl9zdGF0ZRgCIAEoCzISLkNvbnZlcnNhdGlv", 
            "blN0YXRlImwKFEdldEVudGl0eUJ5SWRSZXF1ZXN0EiYKDnJlcXVlc3RfaGVh", 
            "ZGVyGAEgASgLMg4uUmVxdWVzdEhlYWRlchIsChFiYXRjaF9sb29rdXBfc3Bl", 
            "YxgDIAMoCzIRLkVudGl0eUxvb2t1cFNwZWMiWgoVR2V0RW50aXR5QnlJZFJl", 
            "c3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVh", 
            "ZGVyEhcKBmVudGl0eRgCIAMoCzIHLkVudGl0eSKVAwobR2V0U3VnZ2VzdGVk", 
            "RW50aXRpZXNSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVx", 
            "dWVzdEhlYWRlchItCglmYXZvcml0ZXMYCCABKAsyGi5TdWdnZXN0ZWRDb250", 
            "YWN0R3JvdXBIYXNoEj0KGWNvbnRhY3RzX3lvdV9oYW5nb3V0X3dpdGgYCSAB", 
            "KAsyGi5TdWdnZXN0ZWRDb250YWN0R3JvdXBIYXNoEj4KGm90aGVyX2NvbnRh", 
            "Y3RzX29uX2hhbmdvdXRzGAogASgLMhouU3VnZ2VzdGVkQ29udGFjdEdyb3Vw", 
            "SGFzaBIyCg5vdGhlcl9jb250YWN0cxgLIAEoCzIaLlN1Z2dlc3RlZENvbnRh", 
            "Y3RHcm91cEhhc2gSNgoSZGlzbWlzc2VkX2NvbnRhY3RzGAwgASgLMhouU3Vn", 
            "Z2VzdGVkQ29udGFjdEdyb3VwSGFzaBI0ChBwaW5uZWRfZmF2b3JpdGVzGA0g", 
            "ASgLMhouU3VnZ2VzdGVkQ29udGFjdEdyb3VwSGFzaCKZAwocR2V0U3VnZ2Vz", 
            "dGVkRW50aXRpZXNSZXNwb25zZRIoCg9yZXNwb25zZV9oZWFkZXIYASABKAsy", 
            "Dy5SZXNwb25zZUhlYWRlchIXCgZlbnRpdHkYAiADKAsyBy5FbnRpdHkSKQoJ", 
            "ZmF2b3JpdGVzGAQgASgLMhYuU3VnZ2VzdGVkQ29udGFjdEdyb3VwEjkKGWNv", 
            "bnRhY3RzX3lvdV9oYW5nb3V0X3dpdGgYBSABKAsyFi5TdWdnZXN0ZWRDb250", 
            "YWN0R3JvdXASOgoab3RoZXJfY29udGFjdHNfb25faGFuZ291dHMYBiABKAsy", 
            "Fi5TdWdnZXN0ZWRDb250YWN0R3JvdXASLgoOb3RoZXJfY29udGFjdHMYByAB", 
            "KAsyFi5TdWdnZXN0ZWRDb250YWN0R3JvdXASMgoSZGlzbWlzc2VkX2NvbnRh", 
            "Y3RzGAggASgLMhYuU3VnZ2VzdGVkQ29udGFjdEdyb3VwEjAKEHBpbm5lZF9m", 
            "YXZvcml0ZXMYCSABKAsyFi5TdWdnZXN0ZWRDb250YWN0R3JvdXAiPAoSR2V0", 
            "U2VsZkluZm9SZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVx", 
            "dWVzdEhlYWRlciLtAwoTR2V0U2VsZkluZm9SZXNwb25zZRIoCg9yZXNwb25z", 
            "ZV9oZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlchIcCgtzZWxmX2VudGl0", 
            "eRgCIAEoCzIHLkVudGl0eRIWCg5pc19rbm93bl9taW5vchgDIAEoCBInCglk", 
            "bmRfc3RhdGUYBSABKAsyFC5Eb05vdERpc3R1cmJTZXR0aW5nEi8KE2Rlc2t0", 
            "b3Bfb2ZmX3NldHRpbmcYBiABKAsyEi5EZXNrdG9wT2ZmU2V0dGluZxIeCgpw", 
            "aG9uZV9kYXRhGAcgASgLMgouUGhvbmVEYXRhEiwKEWNvbmZpZ3VyYXRpb25f", 
            "Yml0GAggAygLMhEuQ29uZmlndXJhdGlvbkJpdBIrChFkZXNrdG9wX29mZl9z", 
            "dGF0ZRgJIAEoCzIQLkRlc2t0b3BPZmZTdGF0ZRIYChBnb29nbGVfcGx1c191", 
            "c2VyGAogASgIEjMKFWRlc2t0b3Bfc291bmRfc2V0dGluZxgLIAEoCzIULkRl", 
            "c2t0b3BTb3VuZFNldHRpbmcSLwoTcmljaF9wcmVzZW5jZV9zdGF0ZRgMIAEo", 
            "CzISLlJpY2hQcmVzZW5jZVN0YXRlEiEKD2RlZmF1bHRfY291bnRyeRgTIAEo", 
            "CzIILkNvdW50cnkihgEKFFF1ZXJ5UHJlc2VuY2VSZXF1ZXN0EiYKDnJlcXVl", 
            "c3RfaGVhZGVyGAEgASgLMg4uUmVxdWVzdEhlYWRlchImCg5wYXJ0aWNpcGFu", 
            "dF9pZBgCIAMoCzIOLlBhcnRpY2lwYW50SWQSHgoKZmllbGRfbWFzaxgDIAMo", 
            "DjIKLkZpZWxkTWFzayJrChVRdWVyeVByZXNlbmNlUmVzcG9uc2USKAoPcmVz", 
            "cG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISKAoPcHJlc2Vu", 
            "Y2VfcmVzdWx0GAIgAygLMg8uUHJlc2VuY2VSZXN1bHQibgoRUmVtb3ZlVXNl", 
            "clJlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVh", 
            "ZGVyEjEKFGV2ZW50X3JlcXVlc3RfaGVhZGVyGAUgASgLMhMuRXZlbnRSZXF1", 
            "ZXN0SGVhZGVyIl0KElJlbW92ZVVzZXJSZXNwb25zZRIoCg9yZXNwb25zZV9o", 
            "ZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlchIdCg1jcmVhdGVkX2V2ZW50", 
            "GAQgASgLMgYuRXZlbnQiiAEKGVJlbmFtZUNvbnZlcnNhdGlvblJlcXVlc3QS", 
            "JgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEhAKCG5l", 
            "d19uYW1lGAMgASgJEjEKFGV2ZW50X3JlcXVlc3RfaGVhZGVyGAUgASgLMhMu", 
            "RXZlbnRSZXF1ZXN0SGVhZGVyImUKGlJlbmFtZUNvbnZlcnNhdGlvblJlc3Bv", 
            "bnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVy", 
            "Eh0KDWNyZWF0ZWRfZXZlbnQYBCABKAsyBi5FdmVudCJhChVTZWFyY2hFbnRp", 
            "dGllc1JlcXVlc3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0", 
            "SGVhZGVyEg0KBXF1ZXJ5GAMgASgJEhEKCW1heF9jb3VudBgEIAEoBCJbChZT", 
            "ZWFyY2hFbnRpdGllc1Jlc3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEo", 
            "CzIPLlJlc3BvbnNlSGVhZGVyEhcKBmVudGl0eRgCIAMoCzIHLkVudGl0eSLr", 
            "AQoWU2VuZENoYXRNZXNzYWdlUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRlchgB", 
            "IAEoCzIOLlJlcXVlc3RIZWFkZXISJAoKYW5ub3RhdGlvbhgFIAMoCzIQLkV2", 
            "ZW50QW5ub3RhdGlvbhIoCg9tZXNzYWdlX2NvbnRlbnQYBiABKAsyDy5NZXNz", 
            "YWdlQ29udGVudBImCg5leGlzdGluZ19tZWRpYRgHIAEoCzIOLkV4aXN0aW5n", 
            "TWVkaWESMQoUZXZlbnRfcmVxdWVzdF9oZWFkZXIYCCABKAsyEy5FdmVudFJl", 
            "cXVlc3RIZWFkZXIiYgoXU2VuZENoYXRNZXNzYWdlUmVzcG9uc2USKAoPcmVz", 
            "cG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXISHQoNY3JlYXRl", 
            "ZF9ldmVudBgGIAEoCzIGLkV2ZW50InsKFlNldEFjdGl2ZUNsaWVudFJlcXVl", 
            "c3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEhEK", 
            "CWlzX2FjdGl2ZRgCIAEoCBIQCghmdWxsX2ppZBgDIAEoCRIUCgx0aW1lb3V0", 
            "X3NlY3MYBCABKAQiQwoXU2V0QWN0aXZlQ2xpZW50UmVzcG9uc2USKAoPcmVz", 
            "cG9uc2VfaGVhZGVyGAEgASgLMg8uUmVzcG9uc2VIZWFkZXIiRQobU2V0Q29u", 
            "dmVyc2F0aW9uTGV2ZWxSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgL", 
            "Mg4uUmVxdWVzdEhlYWRlciJIChxTZXRDb252ZXJzYXRpb25MZXZlbFJlc3Bv", 
            "bnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVhZGVy", 
            "Ip4BCidTZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25MZXZlbFJlcXVlc3QS", 
            "JgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEigKD2Nv", 
            "bnZlcnNhdGlvbl9pZBgCIAEoCzIPLkNvbnZlcnNhdGlvbklkEiEKBWxldmVs", 
            "GAMgASgOMhIuTm90aWZpY2F0aW9uTGV2ZWwiZwooU2V0Q29udmVyc2F0aW9u", 
            "Tm90aWZpY2F0aW9uTGV2ZWxSZXNwb25zZRIoCg9yZXNwb25zZV9oZWFkZXIY", 
            "ASABKAsyDy5SZXNwb25zZUhlYWRlchIRCgl0aW1lc3RhbXAYAiABKAQikwEK", 
            "D1NldEZvY3VzUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIOLlJl", 
            "cXVlc3RIZWFkZXISKAoPY29udmVyc2F0aW9uX2lkGAIgASgLMg8uQ29udmVy", 
            "c2F0aW9uSWQSGAoEdHlwZRgDIAEoDjIKLkZvY3VzVHlwZRIUCgx0aW1lb3V0", 
            "X3NlY3MYBCABKA0iTwoQU2V0Rm9jdXNSZXNwb25zZRIoCg9yZXNwb25zZV9o", 
            "ZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlchIRCgl0aW1lc3RhbXAYAiAB", 
            "KAQi6gEKElNldFByZXNlbmNlUmVxdWVzdBImCg5yZXF1ZXN0X2hlYWRlchgB", 
            "IAEoCzIOLlJlcXVlc3RIZWFkZXISNQoWcHJlc2VuY2Vfc3RhdGVfc2V0dGlu", 
            "ZxgCIAEoCzIVLlByZXNlbmNlU3RhdGVTZXR0aW5nEiAKC2RuZF9zZXR0aW5n", 
            "GAMgASgLMgsuRG5kU2V0dGluZxIvChNkZXNrdG9wX29mZl9zZXR0aW5nGAUg", 
            "ASgLMhIuRGVza3RvcE9mZlNldHRpbmcSIgoMbW9vZF9zZXR0aW5nGAggASgL", 
            "MgwuTW9vZFNldHRpbmciPwoTU2V0UHJlc2VuY2VSZXNwb25zZRIoCg9yZXNw", 
            "b25zZV9oZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlciJ/ChBTZXRUeXBp", 
            "bmdSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVxdWVzdEhl", 
            "YWRlchIoCg9jb252ZXJzYXRpb25faWQYAiABKAsyDy5Db252ZXJzYXRpb25J", 
            "ZBIZCgR0eXBlGAMgASgOMgsuVHlwaW5nVHlwZSJQChFTZXRUeXBpbmdSZXNw", 
            "b25zZRIoCg9yZXNwb25zZV9oZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRl", 
            "chIRCgl0aW1lc3RhbXAYAiABKAQifwoXU3luY0FsbE5ld0V2ZW50c1JlcXVl", 
            "c3QSJgoOcmVxdWVzdF9oZWFkZXIYASABKAsyDi5SZXF1ZXN0SGVhZGVyEhsK", 
            "E2xhc3Rfc3luY190aW1lc3RhbXAYAiABKAQSHwoXbWF4X3Jlc3BvbnNlX3Np", 
            "emVfYnl0ZXMYCCABKAQijAEKGFN5bmNBbGxOZXdFdmVudHNSZXNwb25zZRIo", 
            "Cg9yZXNwb25zZV9oZWFkZXIYASABKAsyDy5SZXNwb25zZUhlYWRlchIWCg5z", 
            "eW5jX3RpbWVzdGFtcBgCIAEoBBIuChJjb252ZXJzYXRpb25fc3RhdGUYAyAD", 
            "KAsyEi5Db252ZXJzYXRpb25TdGF0ZSKqAQoeU3luY1JlY2VudENvbnZlcnNh", 
            "dGlvbnNSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVxdWVz", 
            "dEhlYWRlchIZChFtYXhfY29udmVyc2F0aW9ucxgDIAEoBBIjChttYXhfZXZl", 
            "bnRzX3Blcl9jb252ZXJzYXRpb24YBCABKAQSIAoLc3luY19maWx0ZXIYBSAD", 
            "KA4yCy5TeW5jRmlsdGVyIpMBCh9TeW5jUmVjZW50Q29udmVyc2F0aW9uc1Jl", 
            "c3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJlc3BvbnNlSGVh", 
            "ZGVyEhYKDnN5bmNfdGltZXN0YW1wGAIgASgEEi4KEmNvbnZlcnNhdGlvbl9z", 
            "dGF0ZRgDIAMoCzISLkNvbnZlcnNhdGlvblN0YXRlIocBChZVcGRhdGVXYXRl", 
            "cm1hcmtSZXF1ZXN0EiYKDnJlcXVlc3RfaGVhZGVyGAEgASgLMg4uUmVxdWVz", 
            "dEhlYWRlchIoCg9jb252ZXJzYXRpb25faWQYAiABKAsyDy5Db252ZXJzYXRp", 
            "b25JZBIbChNsYXN0X3JlYWRfdGltZXN0YW1wGAMgASgEIkMKF1VwZGF0ZVdh", 
            "dGVybWFya1Jlc3BvbnNlEigKD3Jlc3BvbnNlX2hlYWRlchgBIAEoCzIPLlJl", 
            "c3BvbnNlSGVhZGVyKn8KEUFjdGl2ZUNsaWVudFN0YXRlEiEKHUFDVElWRV9D", 
            "TElFTlRfU1RBVEVfTk9fQUNUSVZFEAASIQodQUNUSVZFX0NMSUVOVF9TVEFU", 
            "RV9JU19BQ1RJVkUQARIkCiBBQ1RJVkVfQ0xJRU5UX1NUQVRFX09USEVSX0FD", 
            "VElWRRACKlUKCUZvY3VzVHlwZRIWChJGT0NVU19UWVBFX1VOS05PV04QABIW", 
            "ChJGT0NVU19UWVBFX0ZPQ1VTRUQQARIYChRGT0NVU19UWVBFX1VORk9DVVNF", 
            "RBACKl8KC0ZvY3VzRGV2aWNlEhwKGEZPQ1VTX0RFVklDRV9VTlNQRUNJRklF", 
            "RBAAEhgKFEZPQ1VTX0RFVklDRV9ERVNLVE9QEBQSGAoTRk9DVVNfREVWSUNF", 
            "X01PQklMRRCsAipvCgpUeXBpbmdUeXBlEhcKE1RZUElOR19UWVBFX1VOS05P", 
            "V04QABIXChNUWVBJTkdfVFlQRV9TVEFSVEVEEAESFgoSVFlQSU5HX1RZUEVf", 
            "UEFVU0VEEAISFwoTVFlQSU5HX1RZUEVfU1RPUFBFRBADKq4BChdDbGllbnRQ", 
            "cmVzZW5jZVN0YXRlVHlwZRIhCh1DTElFTlRfUFJFU0VOQ0VfU1RBVEVfVU5L", 
            "Tk9XThAAEh4KGkNMSUVOVF9QUkVTRU5DRV9TVEFURV9OT05FEAESJgoiQ0xJ", 
            "RU5UX1BSRVNFTkNFX1NUQVRFX0RFU0tUT1BfSURMRRAeEigKJENMSUVOVF9Q", 
            "UkVTRU5DRV9TVEFURV9ERVNLVE9QX0FDVElWRRAoKm4KEU5vdGlmaWNhdGlv", 
            "bkxldmVsEh4KGk5PVElGSUNBVElPTl9MRVZFTF9VTktOT1dOEAASHAoYTk9U", 
            "SUZJQ0FUSU9OX0xFVkVMX1FVSUVUEAoSGwoXTk9USUZJQ0FUSU9OX0xFVkVM", 
            "X1JJTkcQHipYCgtTZWdtZW50VHlwZRIVChFTRUdNRU5UX1RZUEVfVEVYVBAA", 
            "EhsKF1NFR01FTlRfVFlQRV9MSU5FX0JSRUFLEAESFQoRU0VHTUVOVF9UWVBF", 
            "X0xJTksQAippCghJdGVtVHlwZRITCg9JVEVNX1RZUEVfVEhJTkcQABIZChRJ", 
            "VEVNX1RZUEVfUExVU19QSE9UTxD5ARIUCg9JVEVNX1RZUEVfUExBQ0UQzwIS", 
            "FwoSSVRFTV9UWVBFX1BMQUNFX1YyENQCKlkKFE1lbWJlcnNoaXBDaGFuZ2VU", 
            "eXBlEh8KG01FTUJFUlNISVBfQ0hBTkdFX1RZUEVfSk9JThABEiAKHE1FTUJF", 
            "UlNISVBfQ0hBTkdFX1RZUEVfTEVBVkUQAirrAQoQSGFuZ291dEV2ZW50VHlw", 
            "ZRIeChpIQU5HT1VUX0VWRU5UX1RZUEVfVU5LTk9XThAAEhwKGEhBTkdPVVRf", 
            "RVZFTlRfVFlQRV9TVEFSVBABEhoKFkhBTkdPVVRfRVZFTlRfVFlQRV9FTkQQ", 
            "AhIbChdIQU5HT1VUX0VWRU5UX1RZUEVfSk9JThADEhwKGEhBTkdPVVRfRVZF", 
            "TlRfVFlQRV9MRUFWRRAEEiIKHkhBTkdPVVRfRVZFTlRfVFlQRV9DT01JTkdf", 
            "U09PThAFEh4KGkhBTkdPVVRfRVZFTlRfVFlQRV9PTkdPSU5HEAYqfgoST2Zm", 
            "VGhlUmVjb3JkVG9nZ2xlEiEKHU9GRl9USEVfUkVDT1JEX1RPR0dMRV9VTktO", 
            "T1dOEAASIQodT0ZGX1RIRV9SRUNPUkRfVE9HR0xFX0VOQUJMRUQQARIiCh5P", 
            "RkZfVEhFX1JFQ09SRF9UT0dHTEVfRElTQUJMRUQQAiqKAQoST2ZmVGhlUmVj", 
            "b3JkU3RhdHVzEiEKHU9GRl9USEVfUkVDT1JEX1NUQVRVU19VTktOT1dOEAAS", 
            "KAokT0ZGX1RIRV9SRUNPUkRfU1RBVFVTX09GRl9USEVfUkVDT1JEEAESJwoj", 
            "T0ZGX1RIRV9SRUNPUkRfU1RBVFVTX09OX1RIRV9SRUNPUkQQAiolCgpTb3Vy", 
            "Y2VUeXBlEhcKE1NPVVJDRV9UWVBFX1VOS05PV04QACrzAgoJRXZlbnRUeXBl", 
            "EhYKEkVWRU5UX1RZUEVfVU5LTk9XThAAEiMKH0VWRU5UX1RZUEVfUkVHVUxB", 
            "Ul9DSEFUX01FU1NBR0UQARISCg5FVkVOVF9UWVBFX1NNUxACEhgKFEVWRU5U", 
            "X1RZUEVfVk9JQ0VNQUlMEAMSFwoTRVZFTlRfVFlQRV9BRERfVVNFUhAEEhoK", 
            "FkVWRU5UX1RZUEVfUkVNT1ZFX1VTRVIQBRIiCh5FVkVOVF9UWVBFX0NPTlZF", 
            "UlNBVElPTl9SRU5BTUUQBhIWChJFVkVOVF9UWVBFX0hBTkdPVVQQBxIZChVF", 
            "VkVOVF9UWVBFX1BIT05FX0NBTEwQCBIfChtFVkVOVF9UWVBFX09UUl9NT0RJ", 
            "RklDQVRJT04QCRIcChhFVkVOVF9UWVBFX1BMQU5fTVVUQVRJT04QChISCg5F", 
            "VkVOVF9UWVBFX01NUxALEhwKGEVWRU5UX1RZUEVfREVQUkVDQVRFRF8xMhAM", 
            "KnAKEENvbnZlcnNhdGlvblR5cGUSHQoZQ09OVkVSU0FUSU9OX1RZUEVfVU5L", 
            "Tk9XThAAEiAKHENPTlZFUlNBVElPTl9UWVBFX09ORV9UT19PTkUQARIbChdD", 
            "T05WRVJTQVRJT05fVFlQRV9HUk9VUBACKpQBChJDb252ZXJzYXRpb25TdGF0", 
            "dXMSHwobQ09OVkVSU0FUSU9OX1NUQVRVU19VTktOT1dOEAASHwobQ09OVkVS", 
            "U0FUSU9OX1NUQVRVU19JTlZJVEVEEAESHgoaQ09OVkVSU0FUSU9OX1NUQVRV", 
            "U19BQ1RJVkUQAhIcChhDT05WRVJTQVRJT05fU1RBVFVTX0xFRlQQAypuChBD", 
            "b252ZXJzYXRpb25WaWV3Eh0KGUNPTlZFUlNBVElPTl9WSUVXX1VOS05PV04Q", 
            "ABIbChdDT05WRVJTQVRJT05fVklFV19JTkJPWBABEh4KGkNPTlZFUlNBVElP", 
            "Tl9WSUVXX0FSQ0hJVkVEEAIqjQEKEkRlbGl2ZXJ5TWVkaXVtVHlwZRIbChdE", 
            "RUxJVkVSWV9NRURJVU1fVU5LTk9XThAAEhkKFURFTElWRVJZX01FRElVTV9C", 
            "QUJFTBABEiAKHERFTElWRVJZX01FRElVTV9HT09HTEVfVk9JQ0UQAhIdChlE", 
            "RUxJVkVSWV9NRURJVU1fTE9DQUxfU01TEAMqSgoPUGFydGljaXBhbnRUeXBl", 
            "EhwKGFBBUlRJQ0lQQU5UX1RZUEVfVU5LTk9XThAAEhkKFVBBUlRJQ0lQQU5U", 
            "X1RZUEVfR0FJQRACKnAKEEludml0YXRpb25TdGF0dXMSHQoZSU5WSVRBVElP", 
            "Tl9TVEFUVVNfVU5LTk9XThAAEh0KGUlOVklUQVRJT05fU1RBVFVTX1BFTkRJ", 
            "TkcQARIeChpJTlZJVEFUSU9OX1NUQVRVU19BQ0NFUFRFRBACKj8KDEZvcmNl", 
            "SGlzdG9yeRIZChVGT1JDRV9ISVNUT1JZX1VOS05PV04QABIUChBGT1JDRV9I", 
            "SVNUT1JZX05PEAEqPwoLTmV0d29ya1R5cGUSGAoUTkVUV09SS19UWVBFX1VO", 
            "S05PV04QABIWChJORVRXT1JLX1RZUEVfQkFCRUwQASpVCgpCbG9ja1N0YXRl", 
            "EhcKE0JMT0NLX1NUQVRFX1VOS05PV04QABIVChFCTE9DS19TVEFURV9CTE9D", 
            "SxABEhcKE0JMT0NLX1NUQVRFX1VOQkxPQ0sQAip4ChFSZXBseVRvSW52aXRl", 
            "VHlwZRIgChxSRVBMWV9UT19JTlZJVEVfVFlQRV9VTktOT1dOEAASHwobUkVQ", 
            "TFlfVE9fSU5WSVRFX1RZUEVfQUNDRVBUEAESIAocUkVQTFlfVE9fSU5WSVRF", 
            "X1RZUEVfREVDTElORRACKq4BCghDbGllbnRJZBIVChFDTElFTlRfSURfVU5L", 
            "Tk9XThAAEhUKEUNMSUVOVF9JRF9BTkRST0lEEAESEQoNQ0xJRU5UX0lEX0lP", 
            "UxACEhQKEENMSUVOVF9JRF9DSFJPTUUQAxIXChNDTElFTlRfSURfV0VCX0dQ", 
            "TFVTEAUSFwoTQ0xJRU5UX0lEX1dFQl9HTUFJTBAGEhkKFUNMSUVOVF9JRF9V", 
            "TFRSQVZJT0xFVBANKmcKD0NsaWVudEJ1aWxkVHlwZRIWChJCVUlMRF9UWVBF", 
            "X1VOS05PV04QABIdChlCVUlMRF9UWVBFX1BST0RVQ1RJT05fV0VCEAESHQoZ", 
            "QlVJTERfVFlQRV9QUk9EVUNUSU9OX0FQUBADKpABCg5SZXNwb25zZVN0YXR1", 
            "cxIbChdSRVNQT05TRV9TVEFUVVNfVU5LTk9XThAAEhYKElJFU1BPTlNFX1NU", 
            "QVRVU19PSxABEiQKIFJFU1BPTlNFX1NUQVRVU19VTkVYUEVDVEVEX0VSUk9S", 
            "EAMSIwofUkVTUE9OU0VfU1RBVFVTX0lOVkFMSURfUkVRVUVTVBAEKnEKDlBo", 
            "b3RvVXJsU3RhdHVzEhwKGFBIT1RPX1VSTF9TVEFUVVNfVU5LTk9XThAAEiAK", 
            "HFBIT1RPX1VSTF9TVEFUVVNfUExBQ0VIT0xERVIQARIfChtQSE9UT19VUkxf", 
            "U1RBVFVTX1VTRVJfUEhPVE8QAipACgZHZW5kZXISEgoOR0VOREVSX1VOS05P", 
            "V04QABIPCgtHRU5ERVJfTUFMRRABEhEKDUdFTkRFUl9GRU1BTEUQAio+CgtQ", 
            "cm9maWxlVHlwZRIVChFQUk9GSUxFX1RZUEVfTk9ORRAAEhgKFFBST0ZJTEVf", 
            "VFlQRV9FU19VU0VSEAEqrQsKFENvbmZpZ3VyYXRpb25CaXRUeXBlEiIKHkNP", 
            "TkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XThAAEiQKIENPTkZJR1VSQVRJ", 
            "T05fQklUX1RZUEVfVU5LTk9XTl8xEAESJAogQ09ORklHVVJBVElPTl9CSVRf", 
            "VFlQRV9VTktOT1dOXzIQAhIkCiBDT05GSUdVUkFUSU9OX0JJVF9UWVBFX1VO", 
            "S05PV05fMxADEiQKIENPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl80", 
            "EAQSJAogQ09ORklHVVJBVElPTl9CSVRfVFlQRV9VTktOT1dOXzUQBRIkCiBD", 
            "T05GSUdVUkFUSU9OX0JJVF9UWVBFX1VOS05PV05fNhAGEiQKIENPTkZJR1VS", 
            "QVRJT05fQklUX1RZUEVfVU5LTk9XTl83EAcSJAogQ09ORklHVVJBVElPTl9C", 
            "SVRfVFlQRV9VTktOT1dOXzgQCBIkCiBDT05GSUdVUkFUSU9OX0JJVF9UWVBF", 
            "X1VOS05PV05fORAJEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9X", 
            "Tl8xMBAKEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8xMRAL", 
            "EiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8xMhAMEiUKIUNP", 
            "TkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8xMxANEiUKIUNPTkZJR1VS", 
            "QVRJT05fQklUX1RZUEVfVU5LTk9XTl8xNBAOEiUKIUNPTkZJR1VSQVRJT05f", 
            "QklUX1RZUEVfVU5LTk9XTl8xNRAPEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZ", 
            "UEVfVU5LTk9XTl8xNhAQEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5L", 
            "Tk9XTl8xNxAREiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8x", 
            "OBASEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8xORATEiUK", 
            "IUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8yMBAUEiUKIUNPTkZJ", 
            "R1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8yMRAVEiUKIUNPTkZJR1VSQVRJ", 
            "T05fQklUX1RZUEVfVU5LTk9XTl8yMhAWEiUKIUNPTkZJR1VSQVRJT05fQklU", 
            "X1RZUEVfVU5LTk9XTl8yMxAXEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVf", 
            "VU5LTk9XTl8yNBAYEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9X", 
            "Tl8yNRAZEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8yNhAa", 
            "EiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8yNxAbEiUKIUNP", 
            "TkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8yOBAcEiUKIUNPTkZJR1VS", 
            "QVRJT05fQklUX1RZUEVfVU5LTk9XTl8yORAdEiUKIUNPTkZJR1VSQVRJT05f", 
            "QklUX1RZUEVfVU5LTk9XTl8zMBAeEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZ", 
            "UEVfVU5LTk9XTl8zMRAfEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5L", 
            "Tk9XTl8zMhAgEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8z", 
            "MxAhEiUKIUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8zNBAiEiUK", 
            "IUNPTkZJR1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8zNRAjEiUKIUNPTkZJ", 
            "R1VSQVRJT05fQklUX1RZUEVfVU5LTk9XTl8zNhAkKv8BChBSaWNoUHJlc2Vu", 
            "Y2VUeXBlEh4KGlJJQ0hfUFJFU0VOQ0VfVFlQRV9VTktOT1dOEAASJAogUklD", 
            "SF9QUkVTRU5DRV9UWVBFX0lOX0NBTExfU1RBVEUQARIgChxSSUNIX1BSRVNF", 
            "TkNFX1RZUEVfVU5LTk9XTl8zEAMSIAocUklDSF9QUkVTRU5DRV9UWVBFX1VO", 
            "S05PV05fNBAEEiAKHFJJQ0hfUFJFU0VOQ0VfVFlQRV9VTktOT1dOXzUQBRId", 
            "ChlSSUNIX1BSRVNFTkNFX1RZUEVfREVWSUNFEAISIAocUklDSF9QUkVTRU5D", 
            "RV9UWVBFX0xBU1RfU0VFThAGKlYKCUZpZWxkTWFzaxIYChRGSUVMRF9NQVNL", 
            "X1JFQUNIQUJMRRABEhgKFEZJRUxEX01BU0tfQVZBSUxBQkxFEAISFQoRRklF", 
            "TERfTUFTS19ERVZJQ0UQBypCCgpEZWxldGVUeXBlEhcKE0RFTEVURV9UWVBF", 
            "X1VOS05PV04QABIbChdERUxFVEVfVFlQRV9VUFBFUl9CT1VORBABKlYKClN5", 
            "bmNGaWx0ZXISFwoTU1lOQ19GSUxURVJfVU5LTk9XThAAEhUKEVNZTkNfRklM", 
            "VEVSX0lOQk9YEAESGAoUU1lOQ19GSUxURVJfQVJDSElWRUQQAipOCgpTb3Vu", 
            "ZFN0YXRlEhcKE1NPVU5EX1NUQVRFX1VOS05PV04QABISCg5TT1VORF9TVEFU", 
            "RV9PThABEhMKD1NPVU5EX1NUQVRFX09GRhACKmEKFENhbGxlcklkU2V0dGlu", 
            "Z3NNYXNrEiMKH0NBTExFUl9JRF9TRVRUSU5HU19NQVNLX1VOS05PV04QABIk", 
            "CiBDQUxMRVJfSURfU0VUVElOR1NfTUFTS19QUk9WSURFRBABKmgKF1Bob25l", 
            "VmVyaWZpY2F0aW9uU3RhdHVzEiUKIVBIT05FX1ZFUklGSUNBVElPTl9TVEFU", 
            "VVNfVU5LTk9XThAAEiYKIlBIT05FX1ZFUklGSUNBVElPTl9TVEFUVVNfVkVS", 
            "SUZJRUQQASqGAQoaUGhvbmVEaXNjb3ZlcmFiaWxpdHlTdGF0dXMSKAokUEhP", 
            "TkVfRElTQ09WRVJBQklMSVRZX1NUQVRVU19VTktOT1dOEAASPgo6UEhPTkVf", 
            "RElTQ09WRVJBQklMSVRZX1NUQVRVU19PUFRFRF9JTl9CVVRfTk9UX0RJU0NP", 
            "VkVSQUJMRRACKkAKFVBob25lVmFsaWRhdGlvblJlc3VsdBInCiNQSE9ORV9W", 
          "QUxJREFUSU9OX1JFU1VMVF9JU19QT1NTSUJMRRAA"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DoNotDisturbSetting__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DoNotDisturbSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DoNotDisturbSetting, global::Hangups.Proto.DoNotDisturbSetting.Builder>(internal__static_DoNotDisturbSetting__Descriptor,
                new string[] { "DoNotDisturb", "ExpirationTimestamp", "Version", });
        internal__static_NotificationSettings__Descriptor = Descriptor.MessageTypes[1];
        internal__static_NotificationSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.NotificationSettings, global::Hangups.Proto.NotificationSettings.Builder>(internal__static_NotificationSettings__Descriptor,
                new string[] { "DndSettings", });
        internal__static_ConversationId__Descriptor = Descriptor.MessageTypes[2];
        internal__static_ConversationId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationId, global::Hangups.Proto.ConversationId.Builder>(internal__static_ConversationId__Descriptor,
                new string[] { "Id", });
        internal__static_ParticipantId__Descriptor = Descriptor.MessageTypes[3];
        internal__static_ParticipantId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ParticipantId, global::Hangups.Proto.ParticipantId.Builder>(internal__static_ParticipantId__Descriptor,
                new string[] { "GaiaId", "ChatId", });
        internal__static_DeviceStatus__Descriptor = Descriptor.MessageTypes[4];
        internal__static_DeviceStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeviceStatus, global::Hangups.Proto.DeviceStatus.Builder>(internal__static_DeviceStatus__Descriptor,
                new string[] { "Mobile", "Desktop", "Tablet", });
        internal__static_Presence__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Presence__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Presence, global::Hangups.Proto.Presence.Builder>(internal__static_Presence__Descriptor,
                new string[] { "Reachable", "Available", "DeviceStatus", "MoodSetting", });
        internal__static_PresenceResult__Descriptor = Descriptor.MessageTypes[6];
        internal__static_PresenceResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PresenceResult, global::Hangups.Proto.PresenceResult.Builder>(internal__static_PresenceResult__Descriptor,
                new string[] { "UserId", "Presence", });
        internal__static_ClientIdentifier__Descriptor = Descriptor.MessageTypes[7];
        internal__static_ClientIdentifier__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ClientIdentifier, global::Hangups.Proto.ClientIdentifier.Builder>(internal__static_ClientIdentifier__Descriptor,
                new string[] { "Resource", "HeaderId", });
        internal__static_ClientPresenceState__Descriptor = Descriptor.MessageTypes[8];
        internal__static_ClientPresenceState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ClientPresenceState, global::Hangups.Proto.ClientPresenceState.Builder>(internal__static_ClientPresenceState__Descriptor,
                new string[] { "Identifier", "State", });
        internal__static_UserEventState__Descriptor = Descriptor.MessageTypes[9];
        internal__static_UserEventState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UserEventState, global::Hangups.Proto.UserEventState.Builder>(internal__static_UserEventState__Descriptor,
                new string[] { "UserId", "ClientGeneratedId", "NotificationLevel", });
        internal__static_Formatting__Descriptor = Descriptor.MessageTypes[10];
        internal__static_Formatting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Formatting, global::Hangups.Proto.Formatting.Builder>(internal__static_Formatting__Descriptor,
                new string[] { "Bold", "Italic", "Strikethrough", "Underline", });
        internal__static_LinkData__Descriptor = Descriptor.MessageTypes[11];
        internal__static_LinkData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.LinkData, global::Hangups.Proto.LinkData.Builder>(internal__static_LinkData__Descriptor,
                new string[] { "LinkTarget", });
        internal__static_Segment__Descriptor = Descriptor.MessageTypes[12];
        internal__static_Segment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Segment, global::Hangups.Proto.Segment.Builder>(internal__static_Segment__Descriptor,
                new string[] { "Type", "Text", "Formatting", "LinkData", });
        internal__static_PlusPhoto__Descriptor = Descriptor.MessageTypes[13];
        internal__static_PlusPhoto__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PlusPhoto, global::Hangups.Proto.PlusPhoto.Builder>(internal__static_PlusPhoto__Descriptor,
                new string[] { "Thumbnail", "OwnerObfuscatedId", "AlbumId", "PhotoId", "Url", "OriginalContentUrl", "MediaType", "StreamId", });
        internal__static_PlusPhoto_Thumbnail__Descriptor = internal__static_PlusPhoto__Descriptor.NestedTypes[0];
        internal__static_PlusPhoto_Thumbnail__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PlusPhoto.Types.Thumbnail, global::Hangups.Proto.PlusPhoto.Types.Thumbnail.Builder>(internal__static_PlusPhoto_Thumbnail__Descriptor,
                new string[] { "Url", "ImageUrl", "WidthPx", "HeightPx", });
        internal__static_Place__Descriptor = Descriptor.MessageTypes[14];
        internal__static_Place__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Place, global::Hangups.Proto.Place.Builder>(internal__static_Place__Descriptor,
                new string[] { "Url", "Name", "RepresentativeImage", });
        internal__static_Place_RepresentativeImage__Descriptor = internal__static_Place__Descriptor.NestedTypes[0];
        internal__static_Place_RepresentativeImage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Place.Types.RepresentativeImage, global::Hangups.Proto.Place.Types.RepresentativeImage.Builder>(internal__static_Place_RepresentativeImage__Descriptor,
                new string[] { "Url", });
        internal__static_EmbedItem__Descriptor = Descriptor.MessageTypes[15];
        internal__static_EmbedItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EmbedItem, global::Hangups.Proto.EmbedItem.Builder>(internal__static_EmbedItem__Descriptor,
                new string[] { "Type", "Id", "PlusPhoto", "Place", });
        internal__static_Attachment__Descriptor = Descriptor.MessageTypes[16];
        internal__static_Attachment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Attachment, global::Hangups.Proto.Attachment.Builder>(internal__static_Attachment__Descriptor,
                new string[] { "EmbedItem", });
        internal__static_MessageContent__Descriptor = Descriptor.MessageTypes[17];
        internal__static_MessageContent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MessageContent, global::Hangups.Proto.MessageContent.Builder>(internal__static_MessageContent__Descriptor,
                new string[] { "Segment", "Attachment", });
        internal__static_EventAnnotation__Descriptor = Descriptor.MessageTypes[18];
        internal__static_EventAnnotation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventAnnotation, global::Hangups.Proto.EventAnnotation.Builder>(internal__static_EventAnnotation__Descriptor,
                new string[] { "Type", "Value", });
        internal__static_ChatMessage__Descriptor = Descriptor.MessageTypes[19];
        internal__static_ChatMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ChatMessage, global::Hangups.Proto.ChatMessage.Builder>(internal__static_ChatMessage__Descriptor,
                new string[] { "Annotation", "MessageContent", });
        internal__static_MembershipChange__Descriptor = Descriptor.MessageTypes[20];
        internal__static_MembershipChange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MembershipChange, global::Hangups.Proto.MembershipChange.Builder>(internal__static_MembershipChange__Descriptor,
                new string[] { "Type", "ParticipantIds", });
        internal__static_ConversationRename__Descriptor = Descriptor.MessageTypes[21];
        internal__static_ConversationRename__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationRename, global::Hangups.Proto.ConversationRename.Builder>(internal__static_ConversationRename__Descriptor,
                new string[] { "NewName", "OldName", });
        internal__static_HangoutEvent__Descriptor = Descriptor.MessageTypes[22];
        internal__static_HangoutEvent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.HangoutEvent, global::Hangups.Proto.HangoutEvent.Builder>(internal__static_HangoutEvent__Descriptor,
                new string[] { "EventType", "ParticipantId", });
        internal__static_OTRModification__Descriptor = Descriptor.MessageTypes[23];
        internal__static_OTRModification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.OTRModification, global::Hangups.Proto.OTRModification.Builder>(internal__static_OTRModification__Descriptor,
                new string[] { "OldOtrStatus", "NewOtrStatus", "OldOtrToggle", "NewOtrToggle", });
        internal__static_HashModifier__Descriptor = Descriptor.MessageTypes[24];
        internal__static_HashModifier__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.HashModifier, global::Hangups.Proto.HashModifier.Builder>(internal__static_HashModifier__Descriptor,
                new string[] { "UpdateId", "HashDiff", "Version", });
        internal__static_Event__Descriptor = Descriptor.MessageTypes[25];
        internal__static_Event__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Event, global::Hangups.Proto.Event.Builder>(internal__static_Event__Descriptor,
                new string[] { "ConversationId", "SenderId", "Timestamp", "SelfEventState", "SourceType", "ChatMessage", "MembershipChange", "ConversationRename", "HangoutEvent", "EventId", "ExpirationTimestamp", "OtrModification", "AdvancesSortTimestamp", "OtrStatus", "Persisted", "MediumType", "EventType", "EventVersion", "HashModifier", });
        internal__static_UserReadState__Descriptor = Descriptor.MessageTypes[26];
        internal__static_UserReadState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UserReadState, global::Hangups.Proto.UserReadState.Builder>(internal__static_UserReadState__Descriptor,
                new string[] { "ParticipantId", "LatestReadTimestamp", });
        internal__static_DeliveryMedium__Descriptor = Descriptor.MessageTypes[27];
        internal__static_DeliveryMedium__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeliveryMedium, global::Hangups.Proto.DeliveryMedium.Builder>(internal__static_DeliveryMedium__Descriptor,
                new string[] { "MediumType", "Phone", });
        internal__static_DeliveryMediumOption__Descriptor = Descriptor.MessageTypes[28];
        internal__static_DeliveryMediumOption__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeliveryMediumOption, global::Hangups.Proto.DeliveryMediumOption.Builder>(internal__static_DeliveryMediumOption__Descriptor,
                new string[] { "DeliveryMedium", "CurrentDefault", });
        internal__static_UserConversationState__Descriptor = Descriptor.MessageTypes[29];
        internal__static_UserConversationState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UserConversationState, global::Hangups.Proto.UserConversationState.Builder>(internal__static_UserConversationState__Descriptor,
                new string[] { "ClientGeneratedId", "SelfReadState", "Status", "NotificationLevel", "View", "InviterId", "InviteTimestamp", "SortTimestamp", "ActiveTimestamp", "DeliveryMediumOption", });
        internal__static_ConversationParticipantData__Descriptor = Descriptor.MessageTypes[30];
        internal__static_ConversationParticipantData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationParticipantData, global::Hangups.Proto.ConversationParticipantData.Builder>(internal__static_ConversationParticipantData__Descriptor,
                new string[] { "Id", "FallbackName", "InvitationStatus", "ParticipantType", "NewInvitationStatus", });
        internal__static_Conversation__Descriptor = Descriptor.MessageTypes[31];
        internal__static_Conversation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Conversation, global::Hangups.Proto.Conversation.Builder>(internal__static_Conversation__Descriptor,
                new string[] { "ConversationId", "Type", "Name", "SelfConversationState", "ReadState", "HasActiveHangout", "OtrStatus", "OtrToggle", "ConversationHistorySupported", "CurrentParticipant", "ParticipantData", "NetworkType", "ForceHistoryState", });
        internal__static_EasterEgg__Descriptor = Descriptor.MessageTypes[32];
        internal__static_EasterEgg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEgg, global::Hangups.Proto.EasterEgg.Builder>(internal__static_EasterEgg__Descriptor,
                new string[] { "Message", });
        internal__static_BlockStateChange__Descriptor = Descriptor.MessageTypes[33];
        internal__static_BlockStateChange__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.BlockStateChange, global::Hangups.Proto.BlockStateChange.Builder>(internal__static_BlockStateChange__Descriptor,
                new string[] { "ParticipantId", "NewBlockState", });
        internal__static_Photo__Descriptor = Descriptor.MessageTypes[34];
        internal__static_Photo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Photo, global::Hangups.Proto.Photo.Builder>(internal__static_Photo__Descriptor,
                new string[] { "PhotoId", "DeleteAlbumlessSourcePhoto", "UserId", "IsCustomUserId", });
        internal__static_ExistingMedia__Descriptor = Descriptor.MessageTypes[35];
        internal__static_ExistingMedia__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ExistingMedia, global::Hangups.Proto.ExistingMedia.Builder>(internal__static_ExistingMedia__Descriptor,
                new string[] { "Photo", });
        internal__static_EventRequestHeader__Descriptor = Descriptor.MessageTypes[36];
        internal__static_EventRequestHeader__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventRequestHeader, global::Hangups.Proto.EventRequestHeader.Builder>(internal__static_EventRequestHeader__Descriptor,
                new string[] { "ConversationId", "ClientGeneratedId", "ExpectedOtr", "DeliveryMedium", "EventType", });
        internal__static_ClientVersion__Descriptor = Descriptor.MessageTypes[37];
        internal__static_ClientVersion__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ClientVersion, global::Hangups.Proto.ClientVersion.Builder>(internal__static_ClientVersion__Descriptor,
                new string[] { "ClientId", "BuildType", "MajorVersion", "VersionTimestamp", "DeviceOsVersion", "DeviceHardware", });
        internal__static_RequestHeader__Descriptor = Descriptor.MessageTypes[38];
        internal__static_RequestHeader__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RequestHeader, global::Hangups.Proto.RequestHeader.Builder>(internal__static_RequestHeader__Descriptor,
                new string[] { "ClientVersion", "ClientIdentifier", "LanguageCode", });
        internal__static_ResponseHeader__Descriptor = Descriptor.MessageTypes[39];
        internal__static_ResponseHeader__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ResponseHeader, global::Hangups.Proto.ResponseHeader.Builder>(internal__static_ResponseHeader__Descriptor,
                new string[] { "Status", "ErrorDescription", "DebugUrl", "RequestTraceId", "CurrentServerTime", });
        internal__static_Entity__Descriptor = Descriptor.MessageTypes[40];
        internal__static_Entity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Entity, global::Hangups.Proto.Entity.Builder>(internal__static_Entity__Descriptor,
                new string[] { "Id", "Presence", "Properties", "EntityType", "HadPastHangoutState", });
        internal__static_EntityProperties__Descriptor = Descriptor.MessageTypes[41];
        internal__static_EntityProperties__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EntityProperties, global::Hangups.Proto.EntityProperties.Builder>(internal__static_EntityProperties__Descriptor,
                new string[] { "Type", "DisplayName", "FirstName", "PhotoUrl", "Email", "Phone", "InUsersDomain", "Gender", "PhotoUrlStatus", "CanonicalEmail", });
        internal__static_ConversationState__Descriptor = Descriptor.MessageTypes[42];
        internal__static_ConversationState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationState, global::Hangups.Proto.ConversationState.Builder>(internal__static_ConversationState__Descriptor,
                new string[] { "ConversationId", "Conversation", "Event", "EventContinuationToken", });
        internal__static_EventContinuationToken__Descriptor = Descriptor.MessageTypes[43];
        internal__static_EventContinuationToken__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventContinuationToken, global::Hangups.Proto.EventContinuationToken.Builder>(internal__static_EventContinuationToken__Descriptor,
                new string[] { "EventId", "StorageContinuationToken", "EventTimestamp", });
        internal__static_EntityLookupSpec__Descriptor = Descriptor.MessageTypes[44];
        internal__static_EntityLookupSpec__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EntityLookupSpec, global::Hangups.Proto.EntityLookupSpec.Builder>(internal__static_EntityLookupSpec__Descriptor,
                new string[] { "GaiaId", });
        internal__static_ConfigurationBit__Descriptor = Descriptor.MessageTypes[45];
        internal__static_ConfigurationBit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConfigurationBit, global::Hangups.Proto.ConfigurationBit.Builder>(internal__static_ConfigurationBit__Descriptor,
                new string[] { "ConfigurationBitType", "Value", });
        internal__static_RichPresenceState__Descriptor = Descriptor.MessageTypes[46];
        internal__static_RichPresenceState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RichPresenceState, global::Hangups.Proto.RichPresenceState.Builder>(internal__static_RichPresenceState__Descriptor,
                new string[] { "GetRichPresenceEnabledState", });
        internal__static_RichPresenceEnabledState__Descriptor = Descriptor.MessageTypes[47];
        internal__static_RichPresenceEnabledState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RichPresenceEnabledState, global::Hangups.Proto.RichPresenceEnabledState.Builder>(internal__static_RichPresenceEnabledState__Descriptor,
                new string[] { "Type", "Enabled", });
        internal__static_DesktopOffSetting__Descriptor = Descriptor.MessageTypes[48];
        internal__static_DesktopOffSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DesktopOffSetting, global::Hangups.Proto.DesktopOffSetting.Builder>(internal__static_DesktopOffSetting__Descriptor,
                new string[] { "DesktopOff", });
        internal__static_DesktopOffState__Descriptor = Descriptor.MessageTypes[49];
        internal__static_DesktopOffState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DesktopOffState, global::Hangups.Proto.DesktopOffState.Builder>(internal__static_DesktopOffState__Descriptor,
                new string[] { "DesktopOff", "Version", });
        internal__static_DndSetting__Descriptor = Descriptor.MessageTypes[50];
        internal__static_DndSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DndSetting, global::Hangups.Proto.DndSetting.Builder>(internal__static_DndSetting__Descriptor,
                new string[] { "DoNotDisturb", "TimeoutSecs", });
        internal__static_PresenceStateSetting__Descriptor = Descriptor.MessageTypes[51];
        internal__static_PresenceStateSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PresenceStateSetting, global::Hangups.Proto.PresenceStateSetting.Builder>(internal__static_PresenceStateSetting__Descriptor,
                new string[] { "TimeoutSecs", "Type", });
        internal__static_MoodMessage__Descriptor = Descriptor.MessageTypes[52];
        internal__static_MoodMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodMessage, global::Hangups.Proto.MoodMessage.Builder>(internal__static_MoodMessage__Descriptor,
                new string[] { "MoodContent", });
        internal__static_MoodContent__Descriptor = Descriptor.MessageTypes[53];
        internal__static_MoodContent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodContent, global::Hangups.Proto.MoodContent.Builder>(internal__static_MoodContent__Descriptor,
                new string[] { "Segment", });
        internal__static_MoodSetting__Descriptor = Descriptor.MessageTypes[54];
        internal__static_MoodSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodSetting, global::Hangups.Proto.MoodSetting.Builder>(internal__static_MoodSetting__Descriptor,
                new string[] { "MoodMessage", });
        internal__static_MoodState__Descriptor = Descriptor.MessageTypes[55];
        internal__static_MoodState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.MoodState, global::Hangups.Proto.MoodState.Builder>(internal__static_MoodState__Descriptor,
                new string[] { "MoodSetting", });
        internal__static_DeleteAction__Descriptor = Descriptor.MessageTypes[56];
        internal__static_DeleteAction__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteAction, global::Hangups.Proto.DeleteAction.Builder>(internal__static_DeleteAction__Descriptor,
                new string[] { "DeleteActionTimestamp", "DeleteUpperBoundTimestamp", "DeleteType", });
        internal__static_InviteeID__Descriptor = Descriptor.MessageTypes[57];
        internal__static_InviteeID__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.InviteeID, global::Hangups.Proto.InviteeID.Builder>(internal__static_InviteeID__Descriptor,
                new string[] { "GaiaId", "FallbackName", });
        internal__static_Country__Descriptor = Descriptor.MessageTypes[58];
        internal__static_Country__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Country, global::Hangups.Proto.Country.Builder>(internal__static_Country__Descriptor,
                new string[] { "RegionCode", "CountryCode", });
        internal__static_DesktopSoundSetting__Descriptor = Descriptor.MessageTypes[59];
        internal__static_DesktopSoundSetting__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DesktopSoundSetting, global::Hangups.Proto.DesktopSoundSetting.Builder>(internal__static_DesktopSoundSetting__Descriptor,
                new string[] { "DesktopSoundState", "DesktopRingSoundState", });
        internal__static_PhoneData__Descriptor = Descriptor.MessageTypes[60];
        internal__static_PhoneData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PhoneData, global::Hangups.Proto.PhoneData.Builder>(internal__static_PhoneData__Descriptor,
                new string[] { "Phone", "CallerIdSettingsMask", });
        internal__static_Phone__Descriptor = Descriptor.MessageTypes[61];
        internal__static_Phone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.Phone, global::Hangups.Proto.Phone.Builder>(internal__static_Phone__Descriptor,
                new string[] { "PhoneNumber", "GoogleVoice", "VerificationStatus", "Discoverable", "DiscoverabilityStatus", "Primary", });
        internal__static_I18nData__Descriptor = Descriptor.MessageTypes[62];
        internal__static_I18nData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.I18nData, global::Hangups.Proto.I18nData.Builder>(internal__static_I18nData__Descriptor,
                new string[] { "NationalNumber", "InternationalNumber", "CountryCode", "RegionCode", "IsValid", "ValidationResult", });
        internal__static_PhoneNumber__Descriptor = Descriptor.MessageTypes[63];
        internal__static_PhoneNumber__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PhoneNumber, global::Hangups.Proto.PhoneNumber.Builder>(internal__static_PhoneNumber__Descriptor,
                new string[] { "E164", "I18NData", });
        internal__static_SuggestedContactGroupHash__Descriptor = Descriptor.MessageTypes[64];
        internal__static_SuggestedContactGroupHash__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SuggestedContactGroupHash, global::Hangups.Proto.SuggestedContactGroupHash.Builder>(internal__static_SuggestedContactGroupHash__Descriptor,
                new string[] { "MaxResults", "Hash", });
        internal__static_SuggestedContact__Descriptor = Descriptor.MessageTypes[65];
        internal__static_SuggestedContact__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SuggestedContact, global::Hangups.Proto.SuggestedContact.Builder>(internal__static_SuggestedContact__Descriptor,
                new string[] { "Entity", "InvitationStatus", });
        internal__static_SuggestedContactGroup__Descriptor = Descriptor.MessageTypes[66];
        internal__static_SuggestedContactGroup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SuggestedContactGroup, global::Hangups.Proto.SuggestedContactGroup.Builder>(internal__static_SuggestedContactGroup__Descriptor,
                new string[] { "HashMatched", "Hash", "Contact", });
        internal__static_StateUpdateHeader__Descriptor = Descriptor.MessageTypes[67];
        internal__static_StateUpdateHeader__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.StateUpdateHeader, global::Hangups.Proto.StateUpdateHeader.Builder>(internal__static_StateUpdateHeader__Descriptor,
                new string[] { "ActiveClientState", "RequestTraceId", "NotificationSettings", "CurrentServerTime", });
        internal__static_EventNotification__Descriptor = Descriptor.MessageTypes[68];
        internal__static_EventNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EventNotification, global::Hangups.Proto.EventNotification.Builder>(internal__static_EventNotification__Descriptor,
                new string[] { "Event", });
        internal__static_SetFocusNotification__Descriptor = Descriptor.MessageTypes[69];
        internal__static_SetFocusNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetFocusNotification, global::Hangups.Proto.SetFocusNotification.Builder>(internal__static_SetFocusNotification__Descriptor,
                new string[] { "ConversationId", "SenderId", "Timestamp", "Type", "Device", });
        internal__static_SetTypingNotification__Descriptor = Descriptor.MessageTypes[70];
        internal__static_SetTypingNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetTypingNotification, global::Hangups.Proto.SetTypingNotification.Builder>(internal__static_SetTypingNotification__Descriptor,
                new string[] { "ConversationId", "SenderId", "Timestamp", "Type", });
        internal__static_SetConversationNotificationLevelNotification__Descriptor = Descriptor.MessageTypes[71];
        internal__static_SetConversationNotificationLevelNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationNotificationLevelNotification, global::Hangups.Proto.SetConversationNotificationLevelNotification.Builder>(internal__static_SetConversationNotificationLevelNotification__Descriptor,
                new string[] { "ConversationId", "Level", "Timestamp", });
        internal__static_ReplyToInviteNotification__Descriptor = Descriptor.MessageTypes[72];
        internal__static_ReplyToInviteNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ReplyToInviteNotification, global::Hangups.Proto.ReplyToInviteNotification.Builder>(internal__static_ReplyToInviteNotification__Descriptor,
                new string[] { "ConversationId", "Type", });
        internal__static_WatermarkNotification__Descriptor = Descriptor.MessageTypes[73];
        internal__static_WatermarkNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.WatermarkNotification, global::Hangups.Proto.WatermarkNotification.Builder>(internal__static_WatermarkNotification__Descriptor,
                new string[] { "SenderId", "ConversationId", "LatestReadTimestamp", });
        internal__static_ConversationViewModification__Descriptor = Descriptor.MessageTypes[74];
        internal__static_ConversationViewModification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationViewModification, global::Hangups.Proto.ConversationViewModification.Builder>(internal__static_ConversationViewModification__Descriptor,
                new string[] { "ConversationId", "OldView", "NewView", });
        internal__static_EasterEggNotification__Descriptor = Descriptor.MessageTypes[75];
        internal__static_EasterEggNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEggNotification, global::Hangups.Proto.EasterEggNotification.Builder>(internal__static_EasterEggNotification__Descriptor,
                new string[] { "SenderId", "ConversationId", "EasterEgg", });
        internal__static_SelfPresenceNotification__Descriptor = Descriptor.MessageTypes[76];
        internal__static_SelfPresenceNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SelfPresenceNotification, global::Hangups.Proto.SelfPresenceNotification.Builder>(internal__static_SelfPresenceNotification__Descriptor,
                new string[] { "ClientPresenceState", "DoNotDisturbSetting", "DesktopOffSetting", "DesktopOffState", "MoodState", });
        internal__static_DeleteActionNotification__Descriptor = Descriptor.MessageTypes[77];
        internal__static_DeleteActionNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteActionNotification, global::Hangups.Proto.DeleteActionNotification.Builder>(internal__static_DeleteActionNotification__Descriptor,
                new string[] { "ConversationId", "DeleteAction", });
        internal__static_PresenceNotification__Descriptor = Descriptor.MessageTypes[78];
        internal__static_PresenceNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.PresenceNotification, global::Hangups.Proto.PresenceNotification.Builder>(internal__static_PresenceNotification__Descriptor,
                new string[] { "Presence", });
        internal__static_BlockNotification__Descriptor = Descriptor.MessageTypes[79];
        internal__static_BlockNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.BlockNotification, global::Hangups.Proto.BlockNotification.Builder>(internal__static_BlockNotification__Descriptor,
                new string[] { "BlockStateChange", });
        internal__static_SetNotificationSettingNotification__Descriptor = Descriptor.MessageTypes[80];
        internal__static_SetNotificationSettingNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetNotificationSettingNotification, global::Hangups.Proto.SetNotificationSettingNotification.Builder>(internal__static_SetNotificationSettingNotification__Descriptor,
                new string[] { "DesktopSoundSetting", });
        internal__static_RichPresenceEnabledStateNotification__Descriptor = Descriptor.MessageTypes[81];
        internal__static_RichPresenceEnabledStateNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RichPresenceEnabledStateNotification, global::Hangups.Proto.RichPresenceEnabledStateNotification.Builder>(internal__static_RichPresenceEnabledStateNotification__Descriptor,
                new string[] { "RichPresenceEnabledState", });
        internal__static_ConversationSpec__Descriptor = Descriptor.MessageTypes[82];
        internal__static_ConversationSpec__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.ConversationSpec, global::Hangups.Proto.ConversationSpec.Builder>(internal__static_ConversationSpec__Descriptor,
                new string[] { "ConversationId", });
        internal__static_AddUserRequest__Descriptor = Descriptor.MessageTypes[83];
        internal__static_AddUserRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.AddUserRequest, global::Hangups.Proto.AddUserRequest.Builder>(internal__static_AddUserRequest__Descriptor,
                new string[] { "RequestHeader", "InviteeId", "EventRequestHeader", });
        internal__static_AddUserResponse__Descriptor = Descriptor.MessageTypes[84];
        internal__static_AddUserResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.AddUserResponse, global::Hangups.Proto.AddUserResponse.Builder>(internal__static_AddUserResponse__Descriptor,
                new string[] { "ResponseHeader", "CreatedEvent", });
        internal__static_CreateConversationRequest__Descriptor = Descriptor.MessageTypes[85];
        internal__static_CreateConversationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.CreateConversationRequest, global::Hangups.Proto.CreateConversationRequest.Builder>(internal__static_CreateConversationRequest__Descriptor,
                new string[] { "RequestHeader", "Type", "ClientGeneratedId", "Name", "InviteeId", });
        internal__static_CreateConversationResponse__Descriptor = Descriptor.MessageTypes[86];
        internal__static_CreateConversationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.CreateConversationResponse, global::Hangups.Proto.CreateConversationResponse.Builder>(internal__static_CreateConversationResponse__Descriptor,
                new string[] { "ResponseHeader", "Conversation", "NewConversationCreated", });
        internal__static_DeleteConversationRequest__Descriptor = Descriptor.MessageTypes[87];
        internal__static_DeleteConversationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteConversationRequest, global::Hangups.Proto.DeleteConversationRequest.Builder>(internal__static_DeleteConversationRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationId", "DeleteUpperBoundTimestamp", });
        internal__static_DeleteConversationResponse__Descriptor = Descriptor.MessageTypes[88];
        internal__static_DeleteConversationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.DeleteConversationResponse, global::Hangups.Proto.DeleteConversationResponse.Builder>(internal__static_DeleteConversationResponse__Descriptor,
                new string[] { "ResponseHeader", "DeleteAction", });
        internal__static_EasterEggRequest__Descriptor = Descriptor.MessageTypes[89];
        internal__static_EasterEggRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEggRequest, global::Hangups.Proto.EasterEggRequest.Builder>(internal__static_EasterEggRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationId", "EasterEgg", });
        internal__static_EasterEggResponse__Descriptor = Descriptor.MessageTypes[90];
        internal__static_EasterEggResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.EasterEggResponse, global::Hangups.Proto.EasterEggResponse.Builder>(internal__static_EasterEggResponse__Descriptor,
                new string[] { "ResponseHeader", "Timestamp", });
        internal__static_GetConversationRequest__Descriptor = Descriptor.MessageTypes[91];
        internal__static_GetConversationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetConversationRequest, global::Hangups.Proto.GetConversationRequest.Builder>(internal__static_GetConversationRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationSpec", "IncludeEvent", "MaxEventsPerConversation", "EventContinuationToken", });
        internal__static_GetConversationResponse__Descriptor = Descriptor.MessageTypes[92];
        internal__static_GetConversationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetConversationResponse, global::Hangups.Proto.GetConversationResponse.Builder>(internal__static_GetConversationResponse__Descriptor,
                new string[] { "ResponseHeader", "ConversationState", });
        internal__static_GetEntityByIdRequest__Descriptor = Descriptor.MessageTypes[93];
        internal__static_GetEntityByIdRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetEntityByIdRequest, global::Hangups.Proto.GetEntityByIdRequest.Builder>(internal__static_GetEntityByIdRequest__Descriptor,
                new string[] { "RequestHeader", "BatchLookupSpec", });
        internal__static_GetEntityByIdResponse__Descriptor = Descriptor.MessageTypes[94];
        internal__static_GetEntityByIdResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetEntityByIdResponse, global::Hangups.Proto.GetEntityByIdResponse.Builder>(internal__static_GetEntityByIdResponse__Descriptor,
                new string[] { "ResponseHeader", "Entity", });
        internal__static_GetSuggestedEntitiesRequest__Descriptor = Descriptor.MessageTypes[95];
        internal__static_GetSuggestedEntitiesRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSuggestedEntitiesRequest, global::Hangups.Proto.GetSuggestedEntitiesRequest.Builder>(internal__static_GetSuggestedEntitiesRequest__Descriptor,
                new string[] { "RequestHeader", "Favorites", "ContactsYouHangoutWith", "OtherContactsOnHangouts", "OtherContacts", "DismissedContacts", "PinnedFavorites", });
        internal__static_GetSuggestedEntitiesResponse__Descriptor = Descriptor.MessageTypes[96];
        internal__static_GetSuggestedEntitiesResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSuggestedEntitiesResponse, global::Hangups.Proto.GetSuggestedEntitiesResponse.Builder>(internal__static_GetSuggestedEntitiesResponse__Descriptor,
                new string[] { "ResponseHeader", "Entity", "Favorites", "ContactsYouHangoutWith", "OtherContactsOnHangouts", "OtherContacts", "DismissedContacts", "PinnedFavorites", });
        internal__static_GetSelfInfoRequest__Descriptor = Descriptor.MessageTypes[97];
        internal__static_GetSelfInfoRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSelfInfoRequest, global::Hangups.Proto.GetSelfInfoRequest.Builder>(internal__static_GetSelfInfoRequest__Descriptor,
                new string[] { "RequestHeader", });
        internal__static_GetSelfInfoResponse__Descriptor = Descriptor.MessageTypes[98];
        internal__static_GetSelfInfoResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.GetSelfInfoResponse, global::Hangups.Proto.GetSelfInfoResponse.Builder>(internal__static_GetSelfInfoResponse__Descriptor,
                new string[] { "ResponseHeader", "SelfEntity", "IsKnownMinor", "DndState", "DesktopOffSetting", "PhoneData", "ConfigurationBit", "DesktopOffState", "GooglePlusUser", "DesktopSoundSetting", "RichPresenceState", "DefaultCountry", });
        internal__static_QueryPresenceRequest__Descriptor = Descriptor.MessageTypes[99];
        internal__static_QueryPresenceRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.QueryPresenceRequest, global::Hangups.Proto.QueryPresenceRequest.Builder>(internal__static_QueryPresenceRequest__Descriptor,
                new string[] { "RequestHeader", "ParticipantId", "FieldMask", });
        internal__static_QueryPresenceResponse__Descriptor = Descriptor.MessageTypes[100];
        internal__static_QueryPresenceResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.QueryPresenceResponse, global::Hangups.Proto.QueryPresenceResponse.Builder>(internal__static_QueryPresenceResponse__Descriptor,
                new string[] { "ResponseHeader", "PresenceResult", });
        internal__static_RemoveUserRequest__Descriptor = Descriptor.MessageTypes[101];
        internal__static_RemoveUserRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RemoveUserRequest, global::Hangups.Proto.RemoveUserRequest.Builder>(internal__static_RemoveUserRequest__Descriptor,
                new string[] { "RequestHeader", "EventRequestHeader", });
        internal__static_RemoveUserResponse__Descriptor = Descriptor.MessageTypes[102];
        internal__static_RemoveUserResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RemoveUserResponse, global::Hangups.Proto.RemoveUserResponse.Builder>(internal__static_RemoveUserResponse__Descriptor,
                new string[] { "ResponseHeader", "CreatedEvent", });
        internal__static_RenameConversationRequest__Descriptor = Descriptor.MessageTypes[103];
        internal__static_RenameConversationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RenameConversationRequest, global::Hangups.Proto.RenameConversationRequest.Builder>(internal__static_RenameConversationRequest__Descriptor,
                new string[] { "RequestHeader", "NewName", "EventRequestHeader", });
        internal__static_RenameConversationResponse__Descriptor = Descriptor.MessageTypes[104];
        internal__static_RenameConversationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.RenameConversationResponse, global::Hangups.Proto.RenameConversationResponse.Builder>(internal__static_RenameConversationResponse__Descriptor,
                new string[] { "ResponseHeader", "CreatedEvent", });
        internal__static_SearchEntitiesRequest__Descriptor = Descriptor.MessageTypes[105];
        internal__static_SearchEntitiesRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SearchEntitiesRequest, global::Hangups.Proto.SearchEntitiesRequest.Builder>(internal__static_SearchEntitiesRequest__Descriptor,
                new string[] { "RequestHeader", "Query", "MaxCount", });
        internal__static_SearchEntitiesResponse__Descriptor = Descriptor.MessageTypes[106];
        internal__static_SearchEntitiesResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SearchEntitiesResponse, global::Hangups.Proto.SearchEntitiesResponse.Builder>(internal__static_SearchEntitiesResponse__Descriptor,
                new string[] { "ResponseHeader", "Entity", });
        internal__static_SendChatMessageRequest__Descriptor = Descriptor.MessageTypes[107];
        internal__static_SendChatMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SendChatMessageRequest, global::Hangups.Proto.SendChatMessageRequest.Builder>(internal__static_SendChatMessageRequest__Descriptor,
                new string[] { "RequestHeader", "Annotation", "MessageContent", "ExistingMedia", "EventRequestHeader", });
        internal__static_SendChatMessageResponse__Descriptor = Descriptor.MessageTypes[108];
        internal__static_SendChatMessageResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SendChatMessageResponse, global::Hangups.Proto.SendChatMessageResponse.Builder>(internal__static_SendChatMessageResponse__Descriptor,
                new string[] { "ResponseHeader", "CreatedEvent", });
        internal__static_SetActiveClientRequest__Descriptor = Descriptor.MessageTypes[109];
        internal__static_SetActiveClientRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetActiveClientRequest, global::Hangups.Proto.SetActiveClientRequest.Builder>(internal__static_SetActiveClientRequest__Descriptor,
                new string[] { "RequestHeader", "IsActive", "FullJid", "TimeoutSecs", });
        internal__static_SetActiveClientResponse__Descriptor = Descriptor.MessageTypes[110];
        internal__static_SetActiveClientResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetActiveClientResponse, global::Hangups.Proto.SetActiveClientResponse.Builder>(internal__static_SetActiveClientResponse__Descriptor,
                new string[] { "ResponseHeader", });
        internal__static_SetConversationLevelRequest__Descriptor = Descriptor.MessageTypes[111];
        internal__static_SetConversationLevelRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationLevelRequest, global::Hangups.Proto.SetConversationLevelRequest.Builder>(internal__static_SetConversationLevelRequest__Descriptor,
                new string[] { "RequestHeader", });
        internal__static_SetConversationLevelResponse__Descriptor = Descriptor.MessageTypes[112];
        internal__static_SetConversationLevelResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationLevelResponse, global::Hangups.Proto.SetConversationLevelResponse.Builder>(internal__static_SetConversationLevelResponse__Descriptor,
                new string[] { "ResponseHeader", });
        internal__static_SetConversationNotificationLevelRequest__Descriptor = Descriptor.MessageTypes[113];
        internal__static_SetConversationNotificationLevelRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationNotificationLevelRequest, global::Hangups.Proto.SetConversationNotificationLevelRequest.Builder>(internal__static_SetConversationNotificationLevelRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationId", "Level", });
        internal__static_SetConversationNotificationLevelResponse__Descriptor = Descriptor.MessageTypes[114];
        internal__static_SetConversationNotificationLevelResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetConversationNotificationLevelResponse, global::Hangups.Proto.SetConversationNotificationLevelResponse.Builder>(internal__static_SetConversationNotificationLevelResponse__Descriptor,
                new string[] { "ResponseHeader", "Timestamp", });
        internal__static_SetFocusRequest__Descriptor = Descriptor.MessageTypes[115];
        internal__static_SetFocusRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetFocusRequest, global::Hangups.Proto.SetFocusRequest.Builder>(internal__static_SetFocusRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationId", "Type", "TimeoutSecs", });
        internal__static_SetFocusResponse__Descriptor = Descriptor.MessageTypes[116];
        internal__static_SetFocusResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetFocusResponse, global::Hangups.Proto.SetFocusResponse.Builder>(internal__static_SetFocusResponse__Descriptor,
                new string[] { "ResponseHeader", "Timestamp", });
        internal__static_SetPresenceRequest__Descriptor = Descriptor.MessageTypes[117];
        internal__static_SetPresenceRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetPresenceRequest, global::Hangups.Proto.SetPresenceRequest.Builder>(internal__static_SetPresenceRequest__Descriptor,
                new string[] { "RequestHeader", "PresenceStateSetting", "DndSetting", "DesktopOffSetting", "MoodSetting", });
        internal__static_SetPresenceResponse__Descriptor = Descriptor.MessageTypes[118];
        internal__static_SetPresenceResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetPresenceResponse, global::Hangups.Proto.SetPresenceResponse.Builder>(internal__static_SetPresenceResponse__Descriptor,
                new string[] { "ResponseHeader", });
        internal__static_SetTypingRequest__Descriptor = Descriptor.MessageTypes[119];
        internal__static_SetTypingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetTypingRequest, global::Hangups.Proto.SetTypingRequest.Builder>(internal__static_SetTypingRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationId", "Type", });
        internal__static_SetTypingResponse__Descriptor = Descriptor.MessageTypes[120];
        internal__static_SetTypingResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SetTypingResponse, global::Hangups.Proto.SetTypingResponse.Builder>(internal__static_SetTypingResponse__Descriptor,
                new string[] { "ResponseHeader", "Timestamp", });
        internal__static_SyncAllNewEventsRequest__Descriptor = Descriptor.MessageTypes[121];
        internal__static_SyncAllNewEventsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncAllNewEventsRequest, global::Hangups.Proto.SyncAllNewEventsRequest.Builder>(internal__static_SyncAllNewEventsRequest__Descriptor,
                new string[] { "RequestHeader", "LastSyncTimestamp", "MaxResponseSizeBytes", });
        internal__static_SyncAllNewEventsResponse__Descriptor = Descriptor.MessageTypes[122];
        internal__static_SyncAllNewEventsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncAllNewEventsResponse, global::Hangups.Proto.SyncAllNewEventsResponse.Builder>(internal__static_SyncAllNewEventsResponse__Descriptor,
                new string[] { "ResponseHeader", "SyncTimestamp", "ConversationState", });
        internal__static_SyncRecentConversationsRequest__Descriptor = Descriptor.MessageTypes[123];
        internal__static_SyncRecentConversationsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncRecentConversationsRequest, global::Hangups.Proto.SyncRecentConversationsRequest.Builder>(internal__static_SyncRecentConversationsRequest__Descriptor,
                new string[] { "RequestHeader", "MaxConversations", "MaxEventsPerConversation", "SyncFilter", });
        internal__static_SyncRecentConversationsResponse__Descriptor = Descriptor.MessageTypes[124];
        internal__static_SyncRecentConversationsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.SyncRecentConversationsResponse, global::Hangups.Proto.SyncRecentConversationsResponse.Builder>(internal__static_SyncRecentConversationsResponse__Descriptor,
                new string[] { "ResponseHeader", "SyncTimestamp", "ConversationState", });
        internal__static_UpdateWatermarkRequest__Descriptor = Descriptor.MessageTypes[125];
        internal__static_UpdateWatermarkRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UpdateWatermarkRequest, global::Hangups.Proto.UpdateWatermarkRequest.Builder>(internal__static_UpdateWatermarkRequest__Descriptor,
                new string[] { "RequestHeader", "ConversationId", "LastReadTimestamp", });
        internal__static_UpdateWatermarkResponse__Descriptor = Descriptor.MessageTypes[126];
        internal__static_UpdateWatermarkResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Hangups.Proto.UpdateWatermarkResponse, global::Hangups.Proto.UpdateWatermarkResponse.Builder>(internal__static_UpdateWatermarkResponse__Descriptor,
                new string[] { "ResponseHeader", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum ActiveClientState {
    ACTIVE_CLIENT_STATE_NO_ACTIVE = 0,
    ACTIVE_CLIENT_STATE_IS_ACTIVE = 1,
    ACTIVE_CLIENT_STATE_OTHER_ACTIVE = 2,
  }
  
  public enum FocusType {
    FOCUS_TYPE_UNKNOWN = 0,
    FOCUS_TYPE_FOCUSED = 1,
    FOCUS_TYPE_UNFOCUSED = 2,
  }
  
  public enum FocusDevice {
    FOCUS_DEVICE_UNSPECIFIED = 0,
    FOCUS_DEVICE_DESKTOP = 20,
    FOCUS_DEVICE_MOBILE = 300,
  }
  
  public enum TypingType {
    TYPING_TYPE_UNKNOWN = 0,
    TYPING_TYPE_STARTED = 1,
    TYPING_TYPE_PAUSED = 2,
    TYPING_TYPE_STOPPED = 3,
  }
  
  public enum ClientPresenceStateType {
    CLIENT_PRESENCE_STATE_UNKNOWN = 0,
    CLIENT_PRESENCE_STATE_NONE = 1,
    CLIENT_PRESENCE_STATE_DESKTOP_IDLE = 30,
    CLIENT_PRESENCE_STATE_DESKTOP_ACTIVE = 40,
  }
  
  public enum NotificationLevel {
    NOTIFICATION_LEVEL_UNKNOWN = 0,
    NOTIFICATION_LEVEL_QUIET = 10,
    NOTIFICATION_LEVEL_RING = 30,
  }
  
  public enum SegmentType {
    SEGMENT_TYPE_TEXT = 0,
    SEGMENT_TYPE_LINE_BREAK = 1,
    SEGMENT_TYPE_LINK = 2,
  }
  
  public enum ItemType {
    ITEM_TYPE_THING = 0,
    ITEM_TYPE_PLUS_PHOTO = 249,
    ITEM_TYPE_PLACE = 335,
    ITEM_TYPE_PLACE_V2 = 340,
  }
  
  public enum MembershipChangeType {
    MEMBERSHIP_CHANGE_TYPE_JOIN = 1,
    MEMBERSHIP_CHANGE_TYPE_LEAVE = 2,
  }
  
  public enum HangoutEventType {
    HANGOUT_EVENT_TYPE_UNKNOWN = 0,
    HANGOUT_EVENT_TYPE_START = 1,
    HANGOUT_EVENT_TYPE_END = 2,
    HANGOUT_EVENT_TYPE_JOIN = 3,
    HANGOUT_EVENT_TYPE_LEAVE = 4,
    HANGOUT_EVENT_TYPE_COMING_SOON = 5,
    HANGOUT_EVENT_TYPE_ONGOING = 6,
  }
  
  public enum OffTheRecordToggle {
    OFF_THE_RECORD_TOGGLE_UNKNOWN = 0,
    OFF_THE_RECORD_TOGGLE_ENABLED = 1,
    OFF_THE_RECORD_TOGGLE_DISABLED = 2,
  }
  
  public enum OffTheRecordStatus {
    OFF_THE_RECORD_STATUS_UNKNOWN = 0,
    OFF_THE_RECORD_STATUS_OFF_THE_RECORD = 1,
    OFF_THE_RECORD_STATUS_ON_THE_RECORD = 2,
  }
  
  public enum SourceType {
    SOURCE_TYPE_UNKNOWN = 0,
  }
  
  public enum EventType {
    EVENT_TYPE_UNKNOWN = 0,
    EVENT_TYPE_REGULAR_CHAT_MESSAGE = 1,
    EVENT_TYPE_SMS = 2,
    EVENT_TYPE_VOICEMAIL = 3,
    EVENT_TYPE_ADD_USER = 4,
    EVENT_TYPE_REMOVE_USER = 5,
    EVENT_TYPE_CONVERSATION_RENAME = 6,
    EVENT_TYPE_HANGOUT = 7,
    EVENT_TYPE_PHONE_CALL = 8,
    EVENT_TYPE_OTR_MODIFICATION = 9,
    EVENT_TYPE_PLAN_MUTATION = 10,
    EVENT_TYPE_MMS = 11,
    EVENT_TYPE_DEPRECATED_12 = 12,
  }
  
  public enum ConversationType {
    CONVERSATION_TYPE_UNKNOWN = 0,
    CONVERSATION_TYPE_ONE_TO_ONE = 1,
    CONVERSATION_TYPE_GROUP = 2,
  }
  
  public enum ConversationStatus {
    CONVERSATION_STATUS_UNKNOWN = 0,
    CONVERSATION_STATUS_INVITED = 1,
    CONVERSATION_STATUS_ACTIVE = 2,
    CONVERSATION_STATUS_LEFT = 3,
  }
  
  public enum ConversationView {
    CONVERSATION_VIEW_UNKNOWN = 0,
    CONVERSATION_VIEW_INBOX = 1,
    CONVERSATION_VIEW_ARCHIVED = 2,
  }
  
  public enum DeliveryMediumType {
    DELIVERY_MEDIUM_UNKNOWN = 0,
    DELIVERY_MEDIUM_BABEL = 1,
    DELIVERY_MEDIUM_GOOGLE_VOICE = 2,
    DELIVERY_MEDIUM_LOCAL_SMS = 3,
  }
  
  public enum ParticipantType {
    PARTICIPANT_TYPE_UNKNOWN = 0,
    PARTICIPANT_TYPE_GAIA = 2,
  }
  
  public enum InvitationStatus {
    INVITATION_STATUS_UNKNOWN = 0,
    INVITATION_STATUS_PENDING = 1,
    INVITATION_STATUS_ACCEPTED = 2,
  }
  
  public enum ForceHistory {
    FORCE_HISTORY_UNKNOWN = 0,
    FORCE_HISTORY_NO = 1,
  }
  
  public enum NetworkType {
    NETWORK_TYPE_UNKNOWN = 0,
    NETWORK_TYPE_BABEL = 1,
  }
  
  public enum BlockState {
    BLOCK_STATE_UNKNOWN = 0,
    BLOCK_STATE_BLOCK = 1,
    BLOCK_STATE_UNBLOCK = 2,
  }
  
  public enum ReplyToInviteType {
    REPLY_TO_INVITE_TYPE_UNKNOWN = 0,
    REPLY_TO_INVITE_TYPE_ACCEPT = 1,
    REPLY_TO_INVITE_TYPE_DECLINE = 2,
  }
  
  public enum ClientId {
    CLIENT_ID_UNKNOWN = 0,
    CLIENT_ID_ANDROID = 1,
    CLIENT_ID_IOS = 2,
    CLIENT_ID_CHROME = 3,
    CLIENT_ID_WEB_GPLUS = 5,
    CLIENT_ID_WEB_GMAIL = 6,
    CLIENT_ID_ULTRAVIOLET = 13,
  }
  
  public enum ClientBuildType {
    BUILD_TYPE_UNKNOWN = 0,
    BUILD_TYPE_PRODUCTION_WEB = 1,
    BUILD_TYPE_PRODUCTION_APP = 3,
  }
  
  public enum ResponseStatus {
    RESPONSE_STATUS_UNKNOWN = 0,
    RESPONSE_STATUS_OK = 1,
    RESPONSE_STATUS_UNEXPECTED_ERROR = 3,
    RESPONSE_STATUS_INVALID_REQUEST = 4,
  }
  
  public enum PhotoUrlStatus {
    PHOTO_URL_STATUS_UNKNOWN = 0,
    PHOTO_URL_STATUS_PLACEHOLDER = 1,
    PHOTO_URL_STATUS_USER_PHOTO = 2,
  }
  
  public enum Gender {
    GENDER_UNKNOWN = 0,
    GENDER_MALE = 1,
    GENDER_FEMALE = 2,
  }
  
  public enum ProfileType {
    PROFILE_TYPE_NONE = 0,
    PROFILE_TYPE_ES_USER = 1,
  }
  
  public enum ConfigurationBitType {
    CONFIGURATION_BIT_TYPE_UNKNOWN = 0,
    CONFIGURATION_BIT_TYPE_UNKNOWN_1 = 1,
    CONFIGURATION_BIT_TYPE_UNKNOWN_2 = 2,
    CONFIGURATION_BIT_TYPE_UNKNOWN_3 = 3,
    CONFIGURATION_BIT_TYPE_UNKNOWN_4 = 4,
    CONFIGURATION_BIT_TYPE_UNKNOWN_5 = 5,
    CONFIGURATION_BIT_TYPE_UNKNOWN_6 = 6,
    CONFIGURATION_BIT_TYPE_UNKNOWN_7 = 7,
    CONFIGURATION_BIT_TYPE_UNKNOWN_8 = 8,
    CONFIGURATION_BIT_TYPE_UNKNOWN_9 = 9,
    CONFIGURATION_BIT_TYPE_UNKNOWN_10 = 10,
    CONFIGURATION_BIT_TYPE_UNKNOWN_11 = 11,
    CONFIGURATION_BIT_TYPE_UNKNOWN_12 = 12,
    CONFIGURATION_BIT_TYPE_UNKNOWN_13 = 13,
    CONFIGURATION_BIT_TYPE_UNKNOWN_14 = 14,
    CONFIGURATION_BIT_TYPE_UNKNOWN_15 = 15,
    CONFIGURATION_BIT_TYPE_UNKNOWN_16 = 16,
    CONFIGURATION_BIT_TYPE_UNKNOWN_17 = 17,
    CONFIGURATION_BIT_TYPE_UNKNOWN_18 = 18,
    CONFIGURATION_BIT_TYPE_UNKNOWN_19 = 19,
    CONFIGURATION_BIT_TYPE_UNKNOWN_20 = 20,
    CONFIGURATION_BIT_TYPE_UNKNOWN_21 = 21,
    CONFIGURATION_BIT_TYPE_UNKNOWN_22 = 22,
    CONFIGURATION_BIT_TYPE_UNKNOWN_23 = 23,
    CONFIGURATION_BIT_TYPE_UNKNOWN_24 = 24,
    CONFIGURATION_BIT_TYPE_UNKNOWN_25 = 25,
    CONFIGURATION_BIT_TYPE_UNKNOWN_26 = 26,
    CONFIGURATION_BIT_TYPE_UNKNOWN_27 = 27,
    CONFIGURATION_BIT_TYPE_UNKNOWN_28 = 28,
    CONFIGURATION_BIT_TYPE_UNKNOWN_29 = 29,
    CONFIGURATION_BIT_TYPE_UNKNOWN_30 = 30,
    CONFIGURATION_BIT_TYPE_UNKNOWN_31 = 31,
    CONFIGURATION_BIT_TYPE_UNKNOWN_32 = 32,
    CONFIGURATION_BIT_TYPE_UNKNOWN_33 = 33,
    CONFIGURATION_BIT_TYPE_UNKNOWN_34 = 34,
    CONFIGURATION_BIT_TYPE_UNKNOWN_35 = 35,
    CONFIGURATION_BIT_TYPE_UNKNOWN_36 = 36,
  }
  
  public enum RichPresenceType {
    RICH_PRESENCE_TYPE_UNKNOWN = 0,
    RICH_PRESENCE_TYPE_IN_CALL_STATE = 1,
    RICH_PRESENCE_TYPE_UNKNOWN_3 = 3,
    RICH_PRESENCE_TYPE_UNKNOWN_4 = 4,
    RICH_PRESENCE_TYPE_UNKNOWN_5 = 5,
    RICH_PRESENCE_TYPE_DEVICE = 2,
    RICH_PRESENCE_TYPE_LAST_SEEN = 6,
  }
  
  public enum FieldMask {
    FIELD_MASK_REACHABLE = 1,
    FIELD_MASK_AVAILABLE = 2,
    FIELD_MASK_DEVICE = 7,
  }
  
  public enum DeleteType {
    DELETE_TYPE_UNKNOWN = 0,
    DELETE_TYPE_UPPER_BOUND = 1,
  }
  
  public enum SyncFilter {
    SYNC_FILTER_UNKNOWN = 0,
    SYNC_FILTER_INBOX = 1,
    SYNC_FILTER_ARCHIVED = 2,
  }
  
  public enum SoundState {
    SOUND_STATE_UNKNOWN = 0,
    SOUND_STATE_ON = 1,
    SOUND_STATE_OFF = 2,
  }
  
  public enum CallerIdSettingsMask {
    CALLER_ID_SETTINGS_MASK_UNKNOWN = 0,
    CALLER_ID_SETTINGS_MASK_PROVIDED = 1,
  }
  
  public enum PhoneVerificationStatus {
    PHONE_VERIFICATION_STATUS_UNKNOWN = 0,
    PHONE_VERIFICATION_STATUS_VERIFIED = 1,
  }
  
  public enum PhoneDiscoverabilityStatus {
    PHONE_DISCOVERABILITY_STATUS_UNKNOWN = 0,
    PHONE_DISCOVERABILITY_STATUS_OPTED_IN_BUT_NOT_DISCOVERABLE = 2,
  }
  
  public enum PhoneValidationResult {
    PHONE_VALIDATION_RESULT_IS_POSSIBLE = 0,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DoNotDisturbSetting : pb::GeneratedMessage<DoNotDisturbSetting, DoNotDisturbSetting.Builder> {
    private DoNotDisturbSetting() { }
    private static readonly DoNotDisturbSetting defaultInstance = new DoNotDisturbSetting().MakeReadOnly();
    private static readonly string[] _doNotDisturbSettingFieldNames = new string[] { "do_not_disturb", "expiration_timestamp", "version" };
    private static readonly uint[] _doNotDisturbSettingFieldTags = new uint[] { 8, 16, 24 };
    public static DoNotDisturbSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DoNotDisturbSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DoNotDisturbSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DoNotDisturbSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DoNotDisturbSetting, DoNotDisturbSetting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DoNotDisturbSetting__FieldAccessorTable; }
    }
    
    public const int DoNotDisturbFieldNumber = 1;
    private bool hasDoNotDisturb;
    private bool doNotDisturb_;
    public bool HasDoNotDisturb {
      get { return hasDoNotDisturb; }
    }
    public bool DoNotDisturb {
      get { return doNotDisturb_; }
    }
    
    public const int ExpirationTimestampFieldNumber = 2;
    private bool hasExpirationTimestamp;
    private ulong expirationTimestamp_;
    public bool HasExpirationTimestamp {
      get { return hasExpirationTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ExpirationTimestamp {
      get { return expirationTimestamp_; }
    }
    
    public const int VersionFieldNumber = 3;
    private bool hasVersion;
    private ulong version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _doNotDisturbSettingFieldNames;
      if (hasDoNotDisturb) {
        output.WriteBool(1, field_names[0], DoNotDisturb);
      }
      if (hasExpirationTimestamp) {
        output.WriteUInt64(2, field_names[1], ExpirationTimestamp);
      }
      if (hasVersion) {
        output.WriteUInt64(3, field_names[2], Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDoNotDisturb) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, DoNotDisturb);
      }
      if (hasExpirationTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ExpirationTimestamp);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, Version);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DoNotDisturbSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DoNotDisturbSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DoNotDisturbSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DoNotDisturbSetting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DoNotDisturbSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DoNotDisturbSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DoNotDisturbSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DoNotDisturbSetting result;
      
      private DoNotDisturbSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          DoNotDisturbSetting original = result;
          result = new DoNotDisturbSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DoNotDisturbSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DoNotDisturbSetting.Descriptor; }
      }
      
      public override DoNotDisturbSetting DefaultInstanceForType {
        get { return global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance; }
      }
      
      public override DoNotDisturbSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DoNotDisturbSetting) {
          return MergeFrom((DoNotDisturbSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DoNotDisturbSetting other) {
        if (other == global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDoNotDisturb) {
          DoNotDisturb = other.DoNotDisturb;
        }
        if (other.HasExpirationTimestamp) {
          ExpirationTimestamp = other.ExpirationTimestamp;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_doNotDisturbSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _doNotDisturbSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDoNotDisturb = input.ReadBool(ref result.doNotDisturb_);
              break;
            }
            case 16: {
              result.hasExpirationTimestamp = input.ReadUInt64(ref result.expirationTimestamp_);
              break;
            }
            case 24: {
              result.hasVersion = input.ReadUInt64(ref result.version_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDoNotDisturb {
        get { return result.hasDoNotDisturb; }
      }
      public bool DoNotDisturb {
        get { return result.DoNotDisturb; }
        set { SetDoNotDisturb(value); }
      }
      public Builder SetDoNotDisturb(bool value) {
        PrepareBuilder();
        result.hasDoNotDisturb = true;
        result.doNotDisturb_ = value;
        return this;
      }
      public Builder ClearDoNotDisturb() {
        PrepareBuilder();
        result.hasDoNotDisturb = false;
        result.doNotDisturb_ = false;
        return this;
      }
      
      public bool HasExpirationTimestamp {
        get { return result.hasExpirationTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ExpirationTimestamp {
        get { return result.ExpirationTimestamp; }
        set { SetExpirationTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetExpirationTimestamp(ulong value) {
        PrepareBuilder();
        result.hasExpirationTimestamp = true;
        result.expirationTimestamp_ = value;
        return this;
      }
      public Builder ClearExpirationTimestamp() {
        PrepareBuilder();
        result.hasExpirationTimestamp = false;
        result.expirationTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersion(ulong value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0UL;
        return this;
      }
    }
    static DoNotDisturbSetting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NotificationSettings : pb::GeneratedMessage<NotificationSettings, NotificationSettings.Builder> {
    private NotificationSettings() { }
    private static readonly NotificationSettings defaultInstance = new NotificationSettings().MakeReadOnly();
    private static readonly string[] _notificationSettingsFieldNames = new string[] { "dnd_settings" };
    private static readonly uint[] _notificationSettingsFieldTags = new uint[] { 10 };
    public static NotificationSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NotificationSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NotificationSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_NotificationSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NotificationSettings, NotificationSettings.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_NotificationSettings__FieldAccessorTable; }
    }
    
    public const int DndSettingsFieldNumber = 1;
    private bool hasDndSettings;
    private global::Hangups.Proto.DoNotDisturbSetting dndSettings_;
    public bool HasDndSettings {
      get { return hasDndSettings; }
    }
    public global::Hangups.Proto.DoNotDisturbSetting DndSettings {
      get { return dndSettings_ ?? global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _notificationSettingsFieldNames;
      if (hasDndSettings) {
        output.WriteMessage(1, field_names[0], DndSettings);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDndSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, DndSettings);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NotificationSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NotificationSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NotificationSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NotificationSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NotificationSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NotificationSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NotificationSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NotificationSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NotificationSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NotificationSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NotificationSettings MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NotificationSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NotificationSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NotificationSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NotificationSettings result;
      
      private NotificationSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          NotificationSettings original = result;
          result = new NotificationSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NotificationSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.NotificationSettings.Descriptor; }
      }
      
      public override NotificationSettings DefaultInstanceForType {
        get { return global::Hangups.Proto.NotificationSettings.DefaultInstance; }
      }
      
      public override NotificationSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NotificationSettings) {
          return MergeFrom((NotificationSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NotificationSettings other) {
        if (other == global::Hangups.Proto.NotificationSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDndSettings) {
          MergeDndSettings(other.DndSettings);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_notificationSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _notificationSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.DoNotDisturbSetting.Builder subBuilder = global::Hangups.Proto.DoNotDisturbSetting.CreateBuilder();
              if (result.hasDndSettings) {
                subBuilder.MergeFrom(DndSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DndSettings = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDndSettings {
       get { return result.hasDndSettings; }
      }
      public global::Hangups.Proto.DoNotDisturbSetting DndSettings {
        get { return result.DndSettings; }
        set { SetDndSettings(value); }
      }
      public Builder SetDndSettings(global::Hangups.Proto.DoNotDisturbSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDndSettings = true;
        result.dndSettings_ = value;
        return this;
      }
      public Builder SetDndSettings(global::Hangups.Proto.DoNotDisturbSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDndSettings = true;
        result.dndSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDndSettings(global::Hangups.Proto.DoNotDisturbSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDndSettings &&
            result.dndSettings_ != global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance) {
            result.dndSettings_ = global::Hangups.Proto.DoNotDisturbSetting.CreateBuilder(result.dndSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.dndSettings_ = value;
        }
        result.hasDndSettings = true;
        return this;
      }
      public Builder ClearDndSettings() {
        PrepareBuilder();
        result.hasDndSettings = false;
        result.dndSettings_ = null;
        return this;
      }
    }
    static NotificationSettings() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationId : pb::GeneratedMessage<ConversationId, ConversationId.Builder> {
    private ConversationId() { }
    private static readonly ConversationId defaultInstance = new ConversationId().MakeReadOnly();
    private static readonly string[] _conversationIdFieldNames = new string[] { "id" };
    private static readonly uint[] _conversationIdFieldTags = new uint[] { 10 };
    public static ConversationId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConversationId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConversationId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConversationId, ConversationId.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationId__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationIdFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConversationId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConversationId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConversationId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConversationId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConversationId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConversationId prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConversationId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConversationId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConversationId result;
      
      private ConversationId PrepareBuilder() {
        if (resultIsReadOnly) {
          ConversationId original = result;
          result = new ConversationId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConversationId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConversationId.Descriptor; }
      }
      
      public override ConversationId DefaultInstanceForType {
        get { return global::Hangups.Proto.ConversationId.DefaultInstance; }
      }
      
      public override ConversationId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConversationId) {
          return MergeFrom((ConversationId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConversationId other) {
        if (other == global::Hangups.Proto.ConversationId.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static ConversationId() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ParticipantId : pb::GeneratedMessage<ParticipantId, ParticipantId.Builder> {
    private ParticipantId() { }
    private static readonly ParticipantId defaultInstance = new ParticipantId().MakeReadOnly();
    private static readonly string[] _participantIdFieldNames = new string[] { "chat_id", "gaia_id" };
    private static readonly uint[] _participantIdFieldTags = new uint[] { 18, 10 };
    public static ParticipantId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ParticipantId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ParticipantId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ParticipantId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ParticipantId, ParticipantId.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ParticipantId__FieldAccessorTable; }
    }
    
    public const int GaiaIdFieldNumber = 1;
    private bool hasGaiaId;
    private string gaiaId_ = "";
    public bool HasGaiaId {
      get { return hasGaiaId; }
    }
    public string GaiaId {
      get { return gaiaId_; }
    }
    
    public const int ChatIdFieldNumber = 2;
    private bool hasChatId;
    private string chatId_ = "";
    public bool HasChatId {
      get { return hasChatId; }
    }
    public string ChatId {
      get { return chatId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _participantIdFieldNames;
      if (hasGaiaId) {
        output.WriteString(1, field_names[1], GaiaId);
      }
      if (hasChatId) {
        output.WriteString(2, field_names[0], ChatId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGaiaId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GaiaId);
      }
      if (hasChatId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ChatId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ParticipantId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParticipantId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParticipantId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ParticipantId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ParticipantId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParticipantId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ParticipantId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ParticipantId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ParticipantId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ParticipantId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ParticipantId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ParticipantId prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ParticipantId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ParticipantId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ParticipantId result;
      
      private ParticipantId PrepareBuilder() {
        if (resultIsReadOnly) {
          ParticipantId original = result;
          result = new ParticipantId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ParticipantId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ParticipantId.Descriptor; }
      }
      
      public override ParticipantId DefaultInstanceForType {
        get { return global::Hangups.Proto.ParticipantId.DefaultInstance; }
      }
      
      public override ParticipantId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ParticipantId) {
          return MergeFrom((ParticipantId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ParticipantId other) {
        if (other == global::Hangups.Proto.ParticipantId.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGaiaId) {
          GaiaId = other.GaiaId;
        }
        if (other.HasChatId) {
          ChatId = other.ChatId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_participantIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _participantIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGaiaId = input.ReadString(ref result.gaiaId_);
              break;
            }
            case 18: {
              result.hasChatId = input.ReadString(ref result.chatId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGaiaId {
        get { return result.hasGaiaId; }
      }
      public string GaiaId {
        get { return result.GaiaId; }
        set { SetGaiaId(value); }
      }
      public Builder SetGaiaId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGaiaId = true;
        result.gaiaId_ = value;
        return this;
      }
      public Builder ClearGaiaId() {
        PrepareBuilder();
        result.hasGaiaId = false;
        result.gaiaId_ = "";
        return this;
      }
      
      public bool HasChatId {
        get { return result.hasChatId; }
      }
      public string ChatId {
        get { return result.ChatId; }
        set { SetChatId(value); }
      }
      public Builder SetChatId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChatId = true;
        result.chatId_ = value;
        return this;
      }
      public Builder ClearChatId() {
        PrepareBuilder();
        result.hasChatId = false;
        result.chatId_ = "";
        return this;
      }
    }
    static ParticipantId() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeviceStatus : pb::GeneratedMessage<DeviceStatus, DeviceStatus.Builder> {
    private DeviceStatus() { }
    private static readonly DeviceStatus defaultInstance = new DeviceStatus().MakeReadOnly();
    private static readonly string[] _deviceStatusFieldNames = new string[] { "desktop", "mobile", "tablet" };
    private static readonly uint[] _deviceStatusFieldTags = new uint[] { 16, 8, 24 };
    public static DeviceStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeviceStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeviceStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeviceStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeviceStatus, DeviceStatus.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeviceStatus__FieldAccessorTable; }
    }
    
    public const int MobileFieldNumber = 1;
    private bool hasMobile;
    private bool mobile_;
    public bool HasMobile {
      get { return hasMobile; }
    }
    public bool Mobile {
      get { return mobile_; }
    }
    
    public const int DesktopFieldNumber = 2;
    private bool hasDesktop;
    private bool desktop_;
    public bool HasDesktop {
      get { return hasDesktop; }
    }
    public bool Desktop {
      get { return desktop_; }
    }
    
    public const int TabletFieldNumber = 3;
    private bool hasTablet;
    private bool tablet_;
    public bool HasTablet {
      get { return hasTablet; }
    }
    public bool Tablet {
      get { return tablet_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deviceStatusFieldNames;
      if (hasMobile) {
        output.WriteBool(1, field_names[1], Mobile);
      }
      if (hasDesktop) {
        output.WriteBool(2, field_names[0], Desktop);
      }
      if (hasTablet) {
        output.WriteBool(3, field_names[2], Tablet);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMobile) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Mobile);
      }
      if (hasDesktop) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Desktop);
      }
      if (hasTablet) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, Tablet);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeviceStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeviceStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeviceStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeviceStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeviceStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeviceStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeviceStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeviceStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeviceStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeviceStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeviceStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeviceStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeviceStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeviceStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeviceStatus result;
      
      private DeviceStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          DeviceStatus original = result;
          result = new DeviceStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeviceStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeviceStatus.Descriptor; }
      }
      
      public override DeviceStatus DefaultInstanceForType {
        get { return global::Hangups.Proto.DeviceStatus.DefaultInstance; }
      }
      
      public override DeviceStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeviceStatus) {
          return MergeFrom((DeviceStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeviceStatus other) {
        if (other == global::Hangups.Proto.DeviceStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMobile) {
          Mobile = other.Mobile;
        }
        if (other.HasDesktop) {
          Desktop = other.Desktop;
        }
        if (other.HasTablet) {
          Tablet = other.Tablet;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deviceStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deviceStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMobile = input.ReadBool(ref result.mobile_);
              break;
            }
            case 16: {
              result.hasDesktop = input.ReadBool(ref result.desktop_);
              break;
            }
            case 24: {
              result.hasTablet = input.ReadBool(ref result.tablet_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMobile {
        get { return result.hasMobile; }
      }
      public bool Mobile {
        get { return result.Mobile; }
        set { SetMobile(value); }
      }
      public Builder SetMobile(bool value) {
        PrepareBuilder();
        result.hasMobile = true;
        result.mobile_ = value;
        return this;
      }
      public Builder ClearMobile() {
        PrepareBuilder();
        result.hasMobile = false;
        result.mobile_ = false;
        return this;
      }
      
      public bool HasDesktop {
        get { return result.hasDesktop; }
      }
      public bool Desktop {
        get { return result.Desktop; }
        set { SetDesktop(value); }
      }
      public Builder SetDesktop(bool value) {
        PrepareBuilder();
        result.hasDesktop = true;
        result.desktop_ = value;
        return this;
      }
      public Builder ClearDesktop() {
        PrepareBuilder();
        result.hasDesktop = false;
        result.desktop_ = false;
        return this;
      }
      
      public bool HasTablet {
        get { return result.hasTablet; }
      }
      public bool Tablet {
        get { return result.Tablet; }
        set { SetTablet(value); }
      }
      public Builder SetTablet(bool value) {
        PrepareBuilder();
        result.hasTablet = true;
        result.tablet_ = value;
        return this;
      }
      public Builder ClearTablet() {
        PrepareBuilder();
        result.hasTablet = false;
        result.tablet_ = false;
        return this;
      }
    }
    static DeviceStatus() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Presence : pb::GeneratedMessage<Presence, Presence.Builder> {
    private Presence() { }
    private static readonly Presence defaultInstance = new Presence().MakeReadOnly();
    private static readonly string[] _presenceFieldNames = new string[] { "available", "device_status", "mood_setting", "reachable" };
    private static readonly uint[] _presenceFieldTags = new uint[] { 16, 50, 74, 8 };
    public static Presence DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Presence DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Presence ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Presence__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Presence, Presence.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Presence__FieldAccessorTable; }
    }
    
    public const int ReachableFieldNumber = 1;
    private bool hasReachable;
    private bool reachable_;
    public bool HasReachable {
      get { return hasReachable; }
    }
    public bool Reachable {
      get { return reachable_; }
    }
    
    public const int AvailableFieldNumber = 2;
    private bool hasAvailable;
    private bool available_;
    public bool HasAvailable {
      get { return hasAvailable; }
    }
    public bool Available {
      get { return available_; }
    }
    
    public const int DeviceStatusFieldNumber = 6;
    private bool hasDeviceStatus;
    private global::Hangups.Proto.DeviceStatus deviceStatus_;
    public bool HasDeviceStatus {
      get { return hasDeviceStatus; }
    }
    public global::Hangups.Proto.DeviceStatus DeviceStatus {
      get { return deviceStatus_ ?? global::Hangups.Proto.DeviceStatus.DefaultInstance; }
    }
    
    public const int MoodSettingFieldNumber = 9;
    private bool hasMoodSetting;
    private global::Hangups.Proto.MoodSetting moodSetting_;
    public bool HasMoodSetting {
      get { return hasMoodSetting; }
    }
    public global::Hangups.Proto.MoodSetting MoodSetting {
      get { return moodSetting_ ?? global::Hangups.Proto.MoodSetting.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMoodSetting) {
          if (!MoodSetting.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _presenceFieldNames;
      if (hasReachable) {
        output.WriteBool(1, field_names[3], Reachable);
      }
      if (hasAvailable) {
        output.WriteBool(2, field_names[0], Available);
      }
      if (hasDeviceStatus) {
        output.WriteMessage(6, field_names[1], DeviceStatus);
      }
      if (hasMoodSetting) {
        output.WriteMessage(9, field_names[2], MoodSetting);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReachable) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Reachable);
      }
      if (hasAvailable) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Available);
      }
      if (hasDeviceStatus) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, DeviceStatus);
      }
      if (hasMoodSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, MoodSetting);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Presence ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Presence ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Presence ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Presence ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Presence ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Presence ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Presence ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Presence ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Presence ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Presence ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Presence MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Presence prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Presence, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Presence cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Presence result;
      
      private Presence PrepareBuilder() {
        if (resultIsReadOnly) {
          Presence original = result;
          result = new Presence();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Presence MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Presence.Descriptor; }
      }
      
      public override Presence DefaultInstanceForType {
        get { return global::Hangups.Proto.Presence.DefaultInstance; }
      }
      
      public override Presence BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Presence) {
          return MergeFrom((Presence) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Presence other) {
        if (other == global::Hangups.Proto.Presence.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReachable) {
          Reachable = other.Reachable;
        }
        if (other.HasAvailable) {
          Available = other.Available;
        }
        if (other.HasDeviceStatus) {
          MergeDeviceStatus(other.DeviceStatus);
        }
        if (other.HasMoodSetting) {
          MergeMoodSetting(other.MoodSetting);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_presenceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _presenceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasReachable = input.ReadBool(ref result.reachable_);
              break;
            }
            case 16: {
              result.hasAvailable = input.ReadBool(ref result.available_);
              break;
            }
            case 50: {
              global::Hangups.Proto.DeviceStatus.Builder subBuilder = global::Hangups.Proto.DeviceStatus.CreateBuilder();
              if (result.hasDeviceStatus) {
                subBuilder.MergeFrom(DeviceStatus);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DeviceStatus = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::Hangups.Proto.MoodSetting.Builder subBuilder = global::Hangups.Proto.MoodSetting.CreateBuilder();
              if (result.hasMoodSetting) {
                subBuilder.MergeFrom(MoodSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MoodSetting = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReachable {
        get { return result.hasReachable; }
      }
      public bool Reachable {
        get { return result.Reachable; }
        set { SetReachable(value); }
      }
      public Builder SetReachable(bool value) {
        PrepareBuilder();
        result.hasReachable = true;
        result.reachable_ = value;
        return this;
      }
      public Builder ClearReachable() {
        PrepareBuilder();
        result.hasReachable = false;
        result.reachable_ = false;
        return this;
      }
      
      public bool HasAvailable {
        get { return result.hasAvailable; }
      }
      public bool Available {
        get { return result.Available; }
        set { SetAvailable(value); }
      }
      public Builder SetAvailable(bool value) {
        PrepareBuilder();
        result.hasAvailable = true;
        result.available_ = value;
        return this;
      }
      public Builder ClearAvailable() {
        PrepareBuilder();
        result.hasAvailable = false;
        result.available_ = false;
        return this;
      }
      
      public bool HasDeviceStatus {
       get { return result.hasDeviceStatus; }
      }
      public global::Hangups.Proto.DeviceStatus DeviceStatus {
        get { return result.DeviceStatus; }
        set { SetDeviceStatus(value); }
      }
      public Builder SetDeviceStatus(global::Hangups.Proto.DeviceStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceStatus = true;
        result.deviceStatus_ = value;
        return this;
      }
      public Builder SetDeviceStatus(global::Hangups.Proto.DeviceStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDeviceStatus = true;
        result.deviceStatus_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDeviceStatus(global::Hangups.Proto.DeviceStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDeviceStatus &&
            result.deviceStatus_ != global::Hangups.Proto.DeviceStatus.DefaultInstance) {
            result.deviceStatus_ = global::Hangups.Proto.DeviceStatus.CreateBuilder(result.deviceStatus_).MergeFrom(value).BuildPartial();
        } else {
          result.deviceStatus_ = value;
        }
        result.hasDeviceStatus = true;
        return this;
      }
      public Builder ClearDeviceStatus() {
        PrepareBuilder();
        result.hasDeviceStatus = false;
        result.deviceStatus_ = null;
        return this;
      }
      
      public bool HasMoodSetting {
       get { return result.hasMoodSetting; }
      }
      public global::Hangups.Proto.MoodSetting MoodSetting {
        get { return result.MoodSetting; }
        set { SetMoodSetting(value); }
      }
      public Builder SetMoodSetting(global::Hangups.Proto.MoodSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMoodSetting = true;
        result.moodSetting_ = value;
        return this;
      }
      public Builder SetMoodSetting(global::Hangups.Proto.MoodSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMoodSetting = true;
        result.moodSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMoodSetting(global::Hangups.Proto.MoodSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMoodSetting &&
            result.moodSetting_ != global::Hangups.Proto.MoodSetting.DefaultInstance) {
            result.moodSetting_ = global::Hangups.Proto.MoodSetting.CreateBuilder(result.moodSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.moodSetting_ = value;
        }
        result.hasMoodSetting = true;
        return this;
      }
      public Builder ClearMoodSetting() {
        PrepareBuilder();
        result.hasMoodSetting = false;
        result.moodSetting_ = null;
        return this;
      }
    }
    static Presence() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PresenceResult : pb::GeneratedMessage<PresenceResult, PresenceResult.Builder> {
    private PresenceResult() { }
    private static readonly PresenceResult defaultInstance = new PresenceResult().MakeReadOnly();
    private static readonly string[] _presenceResultFieldNames = new string[] { "presence", "user_id" };
    private static readonly uint[] _presenceResultFieldTags = new uint[] { 18, 10 };
    public static PresenceResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PresenceResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PresenceResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_PresenceResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PresenceResult, PresenceResult.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_PresenceResult__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private global::Hangups.Proto.ParticipantId userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public global::Hangups.Proto.ParticipantId UserId {
      get { return userId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int PresenceFieldNumber = 2;
    private bool hasPresence;
    private global::Hangups.Proto.Presence presence_;
    public bool HasPresence {
      get { return hasPresence; }
    }
    public global::Hangups.Proto.Presence Presence {
      get { return presence_ ?? global::Hangups.Proto.Presence.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasPresence) {
          if (!Presence.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _presenceResultFieldNames;
      if (hasUserId) {
        output.WriteMessage(1, field_names[1], UserId);
      }
      if (hasPresence) {
        output.WriteMessage(2, field_names[0], Presence);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserId);
      }
      if (hasPresence) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Presence);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PresenceResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PresenceResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PresenceResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PresenceResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PresenceResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PresenceResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PresenceResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PresenceResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PresenceResult result;
      
      private PresenceResult PrepareBuilder() {
        if (resultIsReadOnly) {
          PresenceResult original = result;
          result = new PresenceResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PresenceResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.PresenceResult.Descriptor; }
      }
      
      public override PresenceResult DefaultInstanceForType {
        get { return global::Hangups.Proto.PresenceResult.DefaultInstance; }
      }
      
      public override PresenceResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PresenceResult) {
          return MergeFrom((PresenceResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PresenceResult other) {
        if (other == global::Hangups.Proto.PresenceResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          MergeUserId(other.UserId);
        }
        if (other.HasPresence) {
          MergePresence(other.Presence);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_presenceResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _presenceResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasUserId) {
                subBuilder.MergeFrom(UserId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.Presence.Builder subBuilder = global::Hangups.Proto.Presence.CreateBuilder();
              if (result.hasPresence) {
                subBuilder.MergeFrom(Presence);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Presence = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
       get { return result.hasUserId; }
      }
      public global::Hangups.Proto.ParticipantId UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder SetUserId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserId &&
            result.userId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.userId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.userId_).MergeFrom(value).BuildPartial();
        } else {
          result.userId_ = value;
        }
        result.hasUserId = true;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = null;
        return this;
      }
      
      public bool HasPresence {
       get { return result.hasPresence; }
      }
      public global::Hangups.Proto.Presence Presence {
        get { return result.Presence; }
        set { SetPresence(value); }
      }
      public Builder SetPresence(global::Hangups.Proto.Presence value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPresence = true;
        result.presence_ = value;
        return this;
      }
      public Builder SetPresence(global::Hangups.Proto.Presence.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPresence = true;
        result.presence_ = builderForValue.Build();
        return this;
      }
      public Builder MergePresence(global::Hangups.Proto.Presence value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPresence &&
            result.presence_ != global::Hangups.Proto.Presence.DefaultInstance) {
            result.presence_ = global::Hangups.Proto.Presence.CreateBuilder(result.presence_).MergeFrom(value).BuildPartial();
        } else {
          result.presence_ = value;
        }
        result.hasPresence = true;
        return this;
      }
      public Builder ClearPresence() {
        PrepareBuilder();
        result.hasPresence = false;
        result.presence_ = null;
        return this;
      }
    }
    static PresenceResult() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientIdentifier : pb::GeneratedMessage<ClientIdentifier, ClientIdentifier.Builder> {
    private ClientIdentifier() { }
    private static readonly ClientIdentifier defaultInstance = new ClientIdentifier().MakeReadOnly();
    private static readonly string[] _clientIdentifierFieldNames = new string[] { "header_id", "resource" };
    private static readonly uint[] _clientIdentifierFieldTags = new uint[] { 18, 10 };
    public static ClientIdentifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClientIdentifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClientIdentifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ClientIdentifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClientIdentifier, ClientIdentifier.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ClientIdentifier__FieldAccessorTable; }
    }
    
    public const int ResourceFieldNumber = 1;
    private bool hasResource;
    private string resource_ = "";
    public bool HasResource {
      get { return hasResource; }
    }
    public string Resource {
      get { return resource_; }
    }
    
    public const int HeaderIdFieldNumber = 2;
    private bool hasHeaderId;
    private string headerId_ = "";
    public bool HasHeaderId {
      get { return hasHeaderId; }
    }
    public string HeaderId {
      get { return headerId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _clientIdentifierFieldNames;
      if (hasResource) {
        output.WriteString(1, field_names[1], Resource);
      }
      if (hasHeaderId) {
        output.WriteString(2, field_names[0], HeaderId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResource) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Resource);
      }
      if (hasHeaderId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, HeaderId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ClientIdentifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClientIdentifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClientIdentifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientIdentifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClientIdentifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClientIdentifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ClientIdentifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClientIdentifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClientIdentifier result;
      
      private ClientIdentifier PrepareBuilder() {
        if (resultIsReadOnly) {
          ClientIdentifier original = result;
          result = new ClientIdentifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClientIdentifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ClientIdentifier.Descriptor; }
      }
      
      public override ClientIdentifier DefaultInstanceForType {
        get { return global::Hangups.Proto.ClientIdentifier.DefaultInstance; }
      }
      
      public override ClientIdentifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClientIdentifier) {
          return MergeFrom((ClientIdentifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClientIdentifier other) {
        if (other == global::Hangups.Proto.ClientIdentifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResource) {
          Resource = other.Resource;
        }
        if (other.HasHeaderId) {
          HeaderId = other.HeaderId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clientIdentifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clientIdentifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasResource = input.ReadString(ref result.resource_);
              break;
            }
            case 18: {
              result.hasHeaderId = input.ReadString(ref result.headerId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResource {
        get { return result.hasResource; }
      }
      public string Resource {
        get { return result.Resource; }
        set { SetResource(value); }
      }
      public Builder SetResource(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResource = true;
        result.resource_ = value;
        return this;
      }
      public Builder ClearResource() {
        PrepareBuilder();
        result.hasResource = false;
        result.resource_ = "";
        return this;
      }
      
      public bool HasHeaderId {
        get { return result.hasHeaderId; }
      }
      public string HeaderId {
        get { return result.HeaderId; }
        set { SetHeaderId(value); }
      }
      public Builder SetHeaderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHeaderId = true;
        result.headerId_ = value;
        return this;
      }
      public Builder ClearHeaderId() {
        PrepareBuilder();
        result.hasHeaderId = false;
        result.headerId_ = "";
        return this;
      }
    }
    static ClientIdentifier() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientPresenceState : pb::GeneratedMessage<ClientPresenceState, ClientPresenceState.Builder> {
    private ClientPresenceState() { }
    private static readonly ClientPresenceState defaultInstance = new ClientPresenceState().MakeReadOnly();
    private static readonly string[] _clientPresenceStateFieldNames = new string[] { "identifier", "state" };
    private static readonly uint[] _clientPresenceStateFieldTags = new uint[] { 10, 16 };
    public static ClientPresenceState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClientPresenceState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClientPresenceState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ClientPresenceState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClientPresenceState, ClientPresenceState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ClientPresenceState__FieldAccessorTable; }
    }
    
    public const int IdentifierFieldNumber = 1;
    private bool hasIdentifier;
    private global::Hangups.Proto.ClientIdentifier identifier_;
    public bool HasIdentifier {
      get { return hasIdentifier; }
    }
    public global::Hangups.Proto.ClientIdentifier Identifier {
      get { return identifier_ ?? global::Hangups.Proto.ClientIdentifier.DefaultInstance; }
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private global::Hangups.Proto.ClientPresenceStateType state_ = global::Hangups.Proto.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN;
    public bool HasState {
      get { return hasState; }
    }
    public global::Hangups.Proto.ClientPresenceStateType State {
      get { return state_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _clientPresenceStateFieldNames;
      if (hasIdentifier) {
        output.WriteMessage(1, field_names[0], Identifier);
      }
      if (hasState) {
        output.WriteEnum(2, field_names[1], (int) State, State);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIdentifier) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Identifier);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) State);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ClientPresenceState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClientPresenceState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClientPresenceState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientPresenceState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClientPresenceState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClientPresenceState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ClientPresenceState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClientPresenceState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClientPresenceState result;
      
      private ClientPresenceState PrepareBuilder() {
        if (resultIsReadOnly) {
          ClientPresenceState original = result;
          result = new ClientPresenceState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClientPresenceState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ClientPresenceState.Descriptor; }
      }
      
      public override ClientPresenceState DefaultInstanceForType {
        get { return global::Hangups.Proto.ClientPresenceState.DefaultInstance; }
      }
      
      public override ClientPresenceState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClientPresenceState) {
          return MergeFrom((ClientPresenceState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClientPresenceState other) {
        if (other == global::Hangups.Proto.ClientPresenceState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIdentifier) {
          MergeIdentifier(other.Identifier);
        }
        if (other.HasState) {
          State = other.State;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clientPresenceStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clientPresenceStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ClientIdentifier.Builder subBuilder = global::Hangups.Proto.ClientIdentifier.CreateBuilder();
              if (result.hasIdentifier) {
                subBuilder.MergeFrom(Identifier);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Identifier = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.state_, out unknown)) {
                result.hasState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIdentifier {
       get { return result.hasIdentifier; }
      }
      public global::Hangups.Proto.ClientIdentifier Identifier {
        get { return result.Identifier; }
        set { SetIdentifier(value); }
      }
      public Builder SetIdentifier(global::Hangups.Proto.ClientIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIdentifier = true;
        result.identifier_ = value;
        return this;
      }
      public Builder SetIdentifier(global::Hangups.Proto.ClientIdentifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIdentifier = true;
        result.identifier_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIdentifier(global::Hangups.Proto.ClientIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIdentifier &&
            result.identifier_ != global::Hangups.Proto.ClientIdentifier.DefaultInstance) {
            result.identifier_ = global::Hangups.Proto.ClientIdentifier.CreateBuilder(result.identifier_).MergeFrom(value).BuildPartial();
        } else {
          result.identifier_ = value;
        }
        result.hasIdentifier = true;
        return this;
      }
      public Builder ClearIdentifier() {
        PrepareBuilder();
        result.hasIdentifier = false;
        result.identifier_ = null;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::Hangups.Proto.ClientPresenceStateType State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::Hangups.Proto.ClientPresenceStateType value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = global::Hangups.Proto.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN;
        return this;
      }
    }
    static ClientPresenceState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserEventState : pb::GeneratedMessage<UserEventState, UserEventState.Builder> {
    private UserEventState() { }
    private static readonly UserEventState defaultInstance = new UserEventState().MakeReadOnly();
    private static readonly string[] _userEventStateFieldNames = new string[] { "client_generated_id", "notification_level", "user_id" };
    private static readonly uint[] _userEventStateFieldTags = new uint[] { 18, 24, 10 };
    public static UserEventState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserEventState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserEventState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_UserEventState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserEventState, UserEventState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_UserEventState__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private global::Hangups.Proto.ParticipantId userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public global::Hangups.Proto.ParticipantId UserId {
      get { return userId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int ClientGeneratedIdFieldNumber = 2;
    private bool hasClientGeneratedId;
    private string clientGeneratedId_ = "";
    public bool HasClientGeneratedId {
      get { return hasClientGeneratedId; }
    }
    public string ClientGeneratedId {
      get { return clientGeneratedId_; }
    }
    
    public const int NotificationLevelFieldNumber = 3;
    private bool hasNotificationLevel;
    private global::Hangups.Proto.NotificationLevel notificationLevel_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public bool HasNotificationLevel {
      get { return hasNotificationLevel; }
    }
    public global::Hangups.Proto.NotificationLevel NotificationLevel {
      get { return notificationLevel_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userEventStateFieldNames;
      if (hasUserId) {
        output.WriteMessage(1, field_names[2], UserId);
      }
      if (hasClientGeneratedId) {
        output.WriteString(2, field_names[0], ClientGeneratedId);
      }
      if (hasNotificationLevel) {
        output.WriteEnum(3, field_names[1], (int) NotificationLevel, NotificationLevel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, UserId);
      }
      if (hasClientGeneratedId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientGeneratedId);
      }
      if (hasNotificationLevel) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) NotificationLevel);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserEventState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserEventState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserEventState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserEventState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserEventState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserEventState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserEventState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserEventState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserEventState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserEventState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserEventState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserEventState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserEventState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserEventState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserEventState result;
      
      private UserEventState PrepareBuilder() {
        if (resultIsReadOnly) {
          UserEventState original = result;
          result = new UserEventState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserEventState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.UserEventState.Descriptor; }
      }
      
      public override UserEventState DefaultInstanceForType {
        get { return global::Hangups.Proto.UserEventState.DefaultInstance; }
      }
      
      public override UserEventState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserEventState) {
          return MergeFrom((UserEventState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserEventState other) {
        if (other == global::Hangups.Proto.UserEventState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          MergeUserId(other.UserId);
        }
        if (other.HasClientGeneratedId) {
          ClientGeneratedId = other.ClientGeneratedId;
        }
        if (other.HasNotificationLevel) {
          NotificationLevel = other.NotificationLevel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userEventStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userEventStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasUserId) {
                subBuilder.MergeFrom(UserId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasClientGeneratedId = input.ReadString(ref result.clientGeneratedId_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.notificationLevel_, out unknown)) {
                result.hasNotificationLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
       get { return result.hasUserId; }
      }
      public global::Hangups.Proto.ParticipantId UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder SetUserId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserId &&
            result.userId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.userId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.userId_).MergeFrom(value).BuildPartial();
        } else {
          result.userId_ = value;
        }
        result.hasUserId = true;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = null;
        return this;
      }
      
      public bool HasClientGeneratedId {
        get { return result.hasClientGeneratedId; }
      }
      public string ClientGeneratedId {
        get { return result.ClientGeneratedId; }
        set { SetClientGeneratedId(value); }
      }
      public Builder SetClientGeneratedId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientGeneratedId = true;
        result.clientGeneratedId_ = value;
        return this;
      }
      public Builder ClearClientGeneratedId() {
        PrepareBuilder();
        result.hasClientGeneratedId = false;
        result.clientGeneratedId_ = "";
        return this;
      }
      
      public bool HasNotificationLevel {
       get { return result.hasNotificationLevel; }
      }
      public global::Hangups.Proto.NotificationLevel NotificationLevel {
        get { return result.NotificationLevel; }
        set { SetNotificationLevel(value); }
      }
      public Builder SetNotificationLevel(global::Hangups.Proto.NotificationLevel value) {
        PrepareBuilder();
        result.hasNotificationLevel = true;
        result.notificationLevel_ = value;
        return this;
      }
      public Builder ClearNotificationLevel() {
        PrepareBuilder();
        result.hasNotificationLevel = false;
        result.notificationLevel_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
        return this;
      }
    }
    static UserEventState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Formatting : pb::GeneratedMessage<Formatting, Formatting.Builder> {
    private Formatting() { }
    private static readonly Formatting defaultInstance = new Formatting().MakeReadOnly();
    private static readonly string[] _formattingFieldNames = new string[] { "bold", "italic", "strikethrough", "underline" };
    private static readonly uint[] _formattingFieldTags = new uint[] { 8, 16, 24, 32 };
    public static Formatting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Formatting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Formatting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Formatting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Formatting, Formatting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Formatting__FieldAccessorTable; }
    }
    
    public const int BoldFieldNumber = 1;
    private bool hasBold;
    private bool bold_;
    public bool HasBold {
      get { return hasBold; }
    }
    public bool Bold {
      get { return bold_; }
    }
    
    public const int ItalicFieldNumber = 2;
    private bool hasItalic;
    private bool italic_;
    public bool HasItalic {
      get { return hasItalic; }
    }
    public bool Italic {
      get { return italic_; }
    }
    
    public const int StrikethroughFieldNumber = 3;
    private bool hasStrikethrough;
    private bool strikethrough_;
    public bool HasStrikethrough {
      get { return hasStrikethrough; }
    }
    public bool Strikethrough {
      get { return strikethrough_; }
    }
    
    public const int UnderlineFieldNumber = 4;
    private bool hasUnderline;
    private bool underline_;
    public bool HasUnderline {
      get { return hasUnderline; }
    }
    public bool Underline {
      get { return underline_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _formattingFieldNames;
      if (hasBold) {
        output.WriteBool(1, field_names[0], Bold);
      }
      if (hasItalic) {
        output.WriteBool(2, field_names[1], Italic);
      }
      if (hasStrikethrough) {
        output.WriteBool(3, field_names[2], Strikethrough);
      }
      if (hasUnderline) {
        output.WriteBool(4, field_names[3], Underline);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBold) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Bold);
      }
      if (hasItalic) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Italic);
      }
      if (hasStrikethrough) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, Strikethrough);
      }
      if (hasUnderline) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, Underline);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Formatting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Formatting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Formatting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Formatting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Formatting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Formatting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Formatting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Formatting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Formatting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Formatting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Formatting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Formatting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Formatting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Formatting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Formatting result;
      
      private Formatting PrepareBuilder() {
        if (resultIsReadOnly) {
          Formatting original = result;
          result = new Formatting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Formatting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Formatting.Descriptor; }
      }
      
      public override Formatting DefaultInstanceForType {
        get { return global::Hangups.Proto.Formatting.DefaultInstance; }
      }
      
      public override Formatting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Formatting) {
          return MergeFrom((Formatting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Formatting other) {
        if (other == global::Hangups.Proto.Formatting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBold) {
          Bold = other.Bold;
        }
        if (other.HasItalic) {
          Italic = other.Italic;
        }
        if (other.HasStrikethrough) {
          Strikethrough = other.Strikethrough;
        }
        if (other.HasUnderline) {
          Underline = other.Underline;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_formattingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _formattingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBold = input.ReadBool(ref result.bold_);
              break;
            }
            case 16: {
              result.hasItalic = input.ReadBool(ref result.italic_);
              break;
            }
            case 24: {
              result.hasStrikethrough = input.ReadBool(ref result.strikethrough_);
              break;
            }
            case 32: {
              result.hasUnderline = input.ReadBool(ref result.underline_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBold {
        get { return result.hasBold; }
      }
      public bool Bold {
        get { return result.Bold; }
        set { SetBold(value); }
      }
      public Builder SetBold(bool value) {
        PrepareBuilder();
        result.hasBold = true;
        result.bold_ = value;
        return this;
      }
      public Builder ClearBold() {
        PrepareBuilder();
        result.hasBold = false;
        result.bold_ = false;
        return this;
      }
      
      public bool HasItalic {
        get { return result.hasItalic; }
      }
      public bool Italic {
        get { return result.Italic; }
        set { SetItalic(value); }
      }
      public Builder SetItalic(bool value) {
        PrepareBuilder();
        result.hasItalic = true;
        result.italic_ = value;
        return this;
      }
      public Builder ClearItalic() {
        PrepareBuilder();
        result.hasItalic = false;
        result.italic_ = false;
        return this;
      }
      
      public bool HasStrikethrough {
        get { return result.hasStrikethrough; }
      }
      public bool Strikethrough {
        get { return result.Strikethrough; }
        set { SetStrikethrough(value); }
      }
      public Builder SetStrikethrough(bool value) {
        PrepareBuilder();
        result.hasStrikethrough = true;
        result.strikethrough_ = value;
        return this;
      }
      public Builder ClearStrikethrough() {
        PrepareBuilder();
        result.hasStrikethrough = false;
        result.strikethrough_ = false;
        return this;
      }
      
      public bool HasUnderline {
        get { return result.hasUnderline; }
      }
      public bool Underline {
        get { return result.Underline; }
        set { SetUnderline(value); }
      }
      public Builder SetUnderline(bool value) {
        PrepareBuilder();
        result.hasUnderline = true;
        result.underline_ = value;
        return this;
      }
      public Builder ClearUnderline() {
        PrepareBuilder();
        result.hasUnderline = false;
        result.underline_ = false;
        return this;
      }
    }
    static Formatting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LinkData : pb::GeneratedMessage<LinkData, LinkData.Builder> {
    private LinkData() { }
    private static readonly LinkData defaultInstance = new LinkData().MakeReadOnly();
    private static readonly string[] _linkDataFieldNames = new string[] { "link_target" };
    private static readonly uint[] _linkDataFieldTags = new uint[] { 10 };
    public static LinkData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LinkData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LinkData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_LinkData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LinkData, LinkData.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_LinkData__FieldAccessorTable; }
    }
    
    public const int LinkTargetFieldNumber = 1;
    private bool hasLinkTarget;
    private string linkTarget_ = "";
    public bool HasLinkTarget {
      get { return hasLinkTarget; }
    }
    public string LinkTarget {
      get { return linkTarget_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _linkDataFieldNames;
      if (hasLinkTarget) {
        output.WriteString(1, field_names[0], LinkTarget);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLinkTarget) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LinkTarget);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LinkData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LinkData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LinkData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LinkData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LinkData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LinkData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LinkData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LinkData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LinkData result;
      
      private LinkData PrepareBuilder() {
        if (resultIsReadOnly) {
          LinkData original = result;
          result = new LinkData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LinkData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.LinkData.Descriptor; }
      }
      
      public override LinkData DefaultInstanceForType {
        get { return global::Hangups.Proto.LinkData.DefaultInstance; }
      }
      
      public override LinkData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LinkData) {
          return MergeFrom((LinkData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LinkData other) {
        if (other == global::Hangups.Proto.LinkData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLinkTarget) {
          LinkTarget = other.LinkTarget;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_linkDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _linkDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLinkTarget = input.ReadString(ref result.linkTarget_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLinkTarget {
        get { return result.hasLinkTarget; }
      }
      public string LinkTarget {
        get { return result.LinkTarget; }
        set { SetLinkTarget(value); }
      }
      public Builder SetLinkTarget(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLinkTarget = true;
        result.linkTarget_ = value;
        return this;
      }
      public Builder ClearLinkTarget() {
        PrepareBuilder();
        result.hasLinkTarget = false;
        result.linkTarget_ = "";
        return this;
      }
    }
    static LinkData() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Segment : pb::GeneratedMessage<Segment, Segment.Builder> {
    private Segment() { }
    private static readonly Segment defaultInstance = new Segment().MakeReadOnly();
    private static readonly string[] _segmentFieldNames = new string[] { "formatting", "link_data", "text", "type" };
    private static readonly uint[] _segmentFieldTags = new uint[] { 26, 34, 18, 8 };
    public static Segment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Segment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Segment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Segment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Segment, Segment.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Segment__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::Hangups.Proto.SegmentType type_ = global::Hangups.Proto.SegmentType.SEGMENT_TYPE_TEXT;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.SegmentType Type {
      get { return type_; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int FormattingFieldNumber = 3;
    private bool hasFormatting;
    private global::Hangups.Proto.Formatting formatting_;
    public bool HasFormatting {
      get { return hasFormatting; }
    }
    public global::Hangups.Proto.Formatting Formatting {
      get { return formatting_ ?? global::Hangups.Proto.Formatting.DefaultInstance; }
    }
    
    public const int LinkDataFieldNumber = 4;
    private bool hasLinkData;
    private global::Hangups.Proto.LinkData linkData_;
    public bool HasLinkData {
      get { return hasLinkData; }
    }
    public global::Hangups.Proto.LinkData LinkData {
      get { return linkData_ ?? global::Hangups.Proto.LinkData.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _segmentFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[3], (int) Type, Type);
      }
      if (hasText) {
        output.WriteString(2, field_names[2], Text);
      }
      if (hasFormatting) {
        output.WriteMessage(3, field_names[0], Formatting);
      }
      if (hasLinkData) {
        output.WriteMessage(4, field_names[1], LinkData);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      if (hasFormatting) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Formatting);
      }
      if (hasLinkData) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, LinkData);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Segment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Segment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Segment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Segment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Segment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Segment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Segment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Segment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Segment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Segment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Segment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Segment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Segment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Segment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Segment result;
      
      private Segment PrepareBuilder() {
        if (resultIsReadOnly) {
          Segment original = result;
          result = new Segment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Segment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Segment.Descriptor; }
      }
      
      public override Segment DefaultInstanceForType {
        get { return global::Hangups.Proto.Segment.DefaultInstance; }
      }
      
      public override Segment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Segment) {
          return MergeFrom((Segment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Segment other) {
        if (other == global::Hangups.Proto.Segment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasFormatting) {
          MergeFormatting(other.Formatting);
        }
        if (other.HasLinkData) {
          MergeLinkData(other.LinkData);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_segmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _segmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 26: {
              global::Hangups.Proto.Formatting.Builder subBuilder = global::Hangups.Proto.Formatting.CreateBuilder();
              if (result.hasFormatting) {
                subBuilder.MergeFrom(Formatting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Formatting = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::Hangups.Proto.LinkData.Builder subBuilder = global::Hangups.Proto.LinkData.CreateBuilder();
              if (result.hasLinkData) {
                subBuilder.MergeFrom(LinkData);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LinkData = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.SegmentType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.SegmentType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.SegmentType.SEGMENT_TYPE_TEXT;
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasFormatting {
       get { return result.hasFormatting; }
      }
      public global::Hangups.Proto.Formatting Formatting {
        get { return result.Formatting; }
        set { SetFormatting(value); }
      }
      public Builder SetFormatting(global::Hangups.Proto.Formatting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFormatting = true;
        result.formatting_ = value;
        return this;
      }
      public Builder SetFormatting(global::Hangups.Proto.Formatting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFormatting = true;
        result.formatting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFormatting(global::Hangups.Proto.Formatting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFormatting &&
            result.formatting_ != global::Hangups.Proto.Formatting.DefaultInstance) {
            result.formatting_ = global::Hangups.Proto.Formatting.CreateBuilder(result.formatting_).MergeFrom(value).BuildPartial();
        } else {
          result.formatting_ = value;
        }
        result.hasFormatting = true;
        return this;
      }
      public Builder ClearFormatting() {
        PrepareBuilder();
        result.hasFormatting = false;
        result.formatting_ = null;
        return this;
      }
      
      public bool HasLinkData {
       get { return result.hasLinkData; }
      }
      public global::Hangups.Proto.LinkData LinkData {
        get { return result.LinkData; }
        set { SetLinkData(value); }
      }
      public Builder SetLinkData(global::Hangups.Proto.LinkData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLinkData = true;
        result.linkData_ = value;
        return this;
      }
      public Builder SetLinkData(global::Hangups.Proto.LinkData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLinkData = true;
        result.linkData_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLinkData(global::Hangups.Proto.LinkData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLinkData &&
            result.linkData_ != global::Hangups.Proto.LinkData.DefaultInstance) {
            result.linkData_ = global::Hangups.Proto.LinkData.CreateBuilder(result.linkData_).MergeFrom(value).BuildPartial();
        } else {
          result.linkData_ = value;
        }
        result.hasLinkData = true;
        return this;
      }
      public Builder ClearLinkData() {
        PrepareBuilder();
        result.hasLinkData = false;
        result.linkData_ = null;
        return this;
      }
    }
    static Segment() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PlusPhoto : pb::GeneratedMessage<PlusPhoto, PlusPhoto.Builder> {
    private PlusPhoto() { }
    private static readonly PlusPhoto defaultInstance = new PlusPhoto().MakeReadOnly();
    private static readonly string[] _plusPhotoFieldNames = new string[] { "album_id", "media_type", "original_content_url", "owner_obfuscated_id", "photo_id", "stream_id", "thumbnail", "url" };
    private static readonly uint[] _plusPhotoFieldTags = new uint[] { 26, 104, 82, 18, 34, 114, 10, 50 };
    public static PlusPhoto DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlusPhoto DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlusPhoto ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_PlusPhoto__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlusPhoto, PlusPhoto.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_PlusPhoto__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MediaType {
        MEDIA_TYPE_UNKNOWN = 0,
        MEDIA_TYPE_PHOTO = 1,
        MEDIA_TYPE_ANIMATED_PHOTO = 4,
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Thumbnail : pb::GeneratedMessage<Thumbnail, Thumbnail.Builder> {
        private Thumbnail() { }
        private static readonly Thumbnail defaultInstance = new Thumbnail().MakeReadOnly();
        private static readonly string[] _thumbnailFieldNames = new string[] { "height_px", "image_url", "url", "width_px" };
        private static readonly uint[] _thumbnailFieldTags = new uint[] { 88, 34, 10, 80 };
        public static Thumbnail DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Thumbnail DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Thumbnail ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Hangups.Proto.Hangouts.internal__static_PlusPhoto_Thumbnail__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Thumbnail, Thumbnail.Builder> InternalFieldAccessors {
          get { return global::Hangups.Proto.Hangouts.internal__static_PlusPhoto_Thumbnail__FieldAccessorTable; }
        }
        
        public const int UrlFieldNumber = 1;
        private bool hasUrl;
        private string url_ = "";
        public bool HasUrl {
          get { return hasUrl; }
        }
        public string Url {
          get { return url_; }
        }
        
        public const int ImageUrlFieldNumber = 4;
        private bool hasImageUrl;
        private string imageUrl_ = "";
        public bool HasImageUrl {
          get { return hasImageUrl; }
        }
        public string ImageUrl {
          get { return imageUrl_; }
        }
        
        public const int WidthPxFieldNumber = 10;
        private bool hasWidthPx;
        private ulong widthPx_;
        public bool HasWidthPx {
          get { return hasWidthPx; }
        }
        [global::System.CLSCompliant(false)]
        public ulong WidthPx {
          get { return widthPx_; }
        }
        
        public const int HeightPxFieldNumber = 11;
        private bool hasHeightPx;
        private ulong heightPx_;
        public bool HasHeightPx {
          get { return hasHeightPx; }
        }
        [global::System.CLSCompliant(false)]
        public ulong HeightPx {
          get { return heightPx_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _thumbnailFieldNames;
          if (hasUrl) {
            output.WriteString(1, field_names[2], Url);
          }
          if (hasImageUrl) {
            output.WriteString(4, field_names[1], ImageUrl);
          }
          if (hasWidthPx) {
            output.WriteUInt64(10, field_names[3], WidthPx);
          }
          if (hasHeightPx) {
            output.WriteUInt64(11, field_names[0], HeightPx);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasUrl) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Url);
          }
          if (hasImageUrl) {
            size += pb::CodedOutputStream.ComputeStringSize(4, ImageUrl);
          }
          if (hasWidthPx) {
            size += pb::CodedOutputStream.ComputeUInt64Size(10, WidthPx);
          }
          if (hasHeightPx) {
            size += pb::CodedOutputStream.ComputeUInt64Size(11, HeightPx);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Thumbnail ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Thumbnail ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Thumbnail ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Thumbnail ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Thumbnail ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Thumbnail ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Thumbnail ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Thumbnail ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Thumbnail ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Thumbnail ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Thumbnail MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Thumbnail prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Thumbnail, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Thumbnail cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Thumbnail result;
          
          private Thumbnail PrepareBuilder() {
            if (resultIsReadOnly) {
              Thumbnail original = result;
              result = new Thumbnail();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Thumbnail MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Hangups.Proto.PlusPhoto.Types.Thumbnail.Descriptor; }
          }
          
          public override Thumbnail DefaultInstanceForType {
            get { return global::Hangups.Proto.PlusPhoto.Types.Thumbnail.DefaultInstance; }
          }
          
          public override Thumbnail BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Thumbnail) {
              return MergeFrom((Thumbnail) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Thumbnail other) {
            if (other == global::Hangups.Proto.PlusPhoto.Types.Thumbnail.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasUrl) {
              Url = other.Url;
            }
            if (other.HasImageUrl) {
              ImageUrl = other.ImageUrl;
            }
            if (other.HasWidthPx) {
              WidthPx = other.WidthPx;
            }
            if (other.HasHeightPx) {
              HeightPx = other.HeightPx;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_thumbnailFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _thumbnailFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasUrl = input.ReadString(ref result.url_);
                  break;
                }
                case 34: {
                  result.hasImageUrl = input.ReadString(ref result.imageUrl_);
                  break;
                }
                case 80: {
                  result.hasWidthPx = input.ReadUInt64(ref result.widthPx_);
                  break;
                }
                case 88: {
                  result.hasHeightPx = input.ReadUInt64(ref result.heightPx_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasUrl {
            get { return result.hasUrl; }
          }
          public string Url {
            get { return result.Url; }
            set { SetUrl(value); }
          }
          public Builder SetUrl(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasUrl = true;
            result.url_ = value;
            return this;
          }
          public Builder ClearUrl() {
            PrepareBuilder();
            result.hasUrl = false;
            result.url_ = "";
            return this;
          }
          
          public bool HasImageUrl {
            get { return result.hasImageUrl; }
          }
          public string ImageUrl {
            get { return result.ImageUrl; }
            set { SetImageUrl(value); }
          }
          public Builder SetImageUrl(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasImageUrl = true;
            result.imageUrl_ = value;
            return this;
          }
          public Builder ClearImageUrl() {
            PrepareBuilder();
            result.hasImageUrl = false;
            result.imageUrl_ = "";
            return this;
          }
          
          public bool HasWidthPx {
            get { return result.hasWidthPx; }
          }
          [global::System.CLSCompliant(false)]
          public ulong WidthPx {
            get { return result.WidthPx; }
            set { SetWidthPx(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetWidthPx(ulong value) {
            PrepareBuilder();
            result.hasWidthPx = true;
            result.widthPx_ = value;
            return this;
          }
          public Builder ClearWidthPx() {
            PrepareBuilder();
            result.hasWidthPx = false;
            result.widthPx_ = 0UL;
            return this;
          }
          
          public bool HasHeightPx {
            get { return result.hasHeightPx; }
          }
          [global::System.CLSCompliant(false)]
          public ulong HeightPx {
            get { return result.HeightPx; }
            set { SetHeightPx(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetHeightPx(ulong value) {
            PrepareBuilder();
            result.hasHeightPx = true;
            result.heightPx_ = value;
            return this;
          }
          public Builder ClearHeightPx() {
            PrepareBuilder();
            result.hasHeightPx = false;
            result.heightPx_ = 0UL;
            return this;
          }
        }
        static Thumbnail() {
          object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int ThumbnailFieldNumber = 1;
    private bool hasThumbnail;
    private global::Hangups.Proto.PlusPhoto.Types.Thumbnail thumbnail_;
    public bool HasThumbnail {
      get { return hasThumbnail; }
    }
    public global::Hangups.Proto.PlusPhoto.Types.Thumbnail Thumbnail {
      get { return thumbnail_ ?? global::Hangups.Proto.PlusPhoto.Types.Thumbnail.DefaultInstance; }
    }
    
    public const int OwnerObfuscatedIdFieldNumber = 2;
    private bool hasOwnerObfuscatedId;
    private string ownerObfuscatedId_ = "";
    public bool HasOwnerObfuscatedId {
      get { return hasOwnerObfuscatedId; }
    }
    public string OwnerObfuscatedId {
      get { return ownerObfuscatedId_; }
    }
    
    public const int AlbumIdFieldNumber = 3;
    private bool hasAlbumId;
    private string albumId_ = "";
    public bool HasAlbumId {
      get { return hasAlbumId; }
    }
    public string AlbumId {
      get { return albumId_; }
    }
    
    public const int PhotoIdFieldNumber = 4;
    private bool hasPhotoId;
    private string photoId_ = "";
    public bool HasPhotoId {
      get { return hasPhotoId; }
    }
    public string PhotoId {
      get { return photoId_; }
    }
    
    public const int UrlFieldNumber = 6;
    private bool hasUrl;
    private string url_ = "";
    public bool HasUrl {
      get { return hasUrl; }
    }
    public string Url {
      get { return url_; }
    }
    
    public const int OriginalContentUrlFieldNumber = 10;
    private bool hasOriginalContentUrl;
    private string originalContentUrl_ = "";
    public bool HasOriginalContentUrl {
      get { return hasOriginalContentUrl; }
    }
    public string OriginalContentUrl {
      get { return originalContentUrl_; }
    }
    
    public const int MediaTypeFieldNumber = 13;
    private bool hasMediaType;
    private global::Hangups.Proto.PlusPhoto.Types.MediaType mediaType_ = global::Hangups.Proto.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN;
    public bool HasMediaType {
      get { return hasMediaType; }
    }
    public global::Hangups.Proto.PlusPhoto.Types.MediaType MediaType {
      get { return mediaType_; }
    }
    
    public const int StreamIdFieldNumber = 14;
    private pbc::PopsicleList<string> streamId_ = new pbc::PopsicleList<string>();
    public scg::IList<string> StreamIdList {
      get { return pbc::Lists.AsReadOnly(streamId_); }
    }
    public int StreamIdCount {
      get { return streamId_.Count; }
    }
    public string GetStreamId(int index) {
      return streamId_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _plusPhotoFieldNames;
      if (hasThumbnail) {
        output.WriteMessage(1, field_names[6], Thumbnail);
      }
      if (hasOwnerObfuscatedId) {
        output.WriteString(2, field_names[3], OwnerObfuscatedId);
      }
      if (hasAlbumId) {
        output.WriteString(3, field_names[0], AlbumId);
      }
      if (hasPhotoId) {
        output.WriteString(4, field_names[4], PhotoId);
      }
      if (hasUrl) {
        output.WriteString(6, field_names[7], Url);
      }
      if (hasOriginalContentUrl) {
        output.WriteString(10, field_names[2], OriginalContentUrl);
      }
      if (hasMediaType) {
        output.WriteEnum(13, field_names[1], (int) MediaType, MediaType);
      }
      if (streamId_.Count > 0) {
        output.WriteStringArray(14, field_names[5], streamId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasThumbnail) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Thumbnail);
      }
      if (hasOwnerObfuscatedId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OwnerObfuscatedId);
      }
      if (hasAlbumId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, AlbumId);
      }
      if (hasPhotoId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, PhotoId);
      }
      if (hasUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(6, Url);
      }
      if (hasOriginalContentUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(10, OriginalContentUrl);
      }
      if (hasMediaType) {
        size += pb::CodedOutputStream.ComputeEnumSize(13, (int) MediaType);
      }
      {
        int dataSize = 0;
        foreach (string element in StreamIdList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * streamId_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PlusPhoto ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlusPhoto ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlusPhoto ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlusPhoto ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlusPhoto ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlusPhoto ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlusPhoto ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlusPhoto ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlusPhoto ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlusPhoto ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlusPhoto MakeReadOnly() {
      streamId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlusPhoto prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PlusPhoto, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlusPhoto cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlusPhoto result;
      
      private PlusPhoto PrepareBuilder() {
        if (resultIsReadOnly) {
          PlusPhoto original = result;
          result = new PlusPhoto();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlusPhoto MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.PlusPhoto.Descriptor; }
      }
      
      public override PlusPhoto DefaultInstanceForType {
        get { return global::Hangups.Proto.PlusPhoto.DefaultInstance; }
      }
      
      public override PlusPhoto BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlusPhoto) {
          return MergeFrom((PlusPhoto) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlusPhoto other) {
        if (other == global::Hangups.Proto.PlusPhoto.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasThumbnail) {
          MergeThumbnail(other.Thumbnail);
        }
        if (other.HasOwnerObfuscatedId) {
          OwnerObfuscatedId = other.OwnerObfuscatedId;
        }
        if (other.HasAlbumId) {
          AlbumId = other.AlbumId;
        }
        if (other.HasPhotoId) {
          PhotoId = other.PhotoId;
        }
        if (other.HasUrl) {
          Url = other.Url;
        }
        if (other.HasOriginalContentUrl) {
          OriginalContentUrl = other.OriginalContentUrl;
        }
        if (other.HasMediaType) {
          MediaType = other.MediaType;
        }
        if (other.streamId_.Count != 0) {
          result.streamId_.Add(other.streamId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_plusPhotoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _plusPhotoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.PlusPhoto.Types.Thumbnail.Builder subBuilder = global::Hangups.Proto.PlusPhoto.Types.Thumbnail.CreateBuilder();
              if (result.hasThumbnail) {
                subBuilder.MergeFrom(Thumbnail);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Thumbnail = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasOwnerObfuscatedId = input.ReadString(ref result.ownerObfuscatedId_);
              break;
            }
            case 26: {
              result.hasAlbumId = input.ReadString(ref result.albumId_);
              break;
            }
            case 34: {
              result.hasPhotoId = input.ReadString(ref result.photoId_);
              break;
            }
            case 50: {
              result.hasUrl = input.ReadString(ref result.url_);
              break;
            }
            case 82: {
              result.hasOriginalContentUrl = input.ReadString(ref result.originalContentUrl_);
              break;
            }
            case 104: {
              object unknown;
              if(input.ReadEnum(ref result.mediaType_, out unknown)) {
                result.hasMediaType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(13, (ulong)(int)unknown);
              }
              break;
            }
            case 114: {
              input.ReadStringArray(tag, field_name, result.streamId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasThumbnail {
       get { return result.hasThumbnail; }
      }
      public global::Hangups.Proto.PlusPhoto.Types.Thumbnail Thumbnail {
        get { return result.Thumbnail; }
        set { SetThumbnail(value); }
      }
      public Builder SetThumbnail(global::Hangups.Proto.PlusPhoto.Types.Thumbnail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasThumbnail = true;
        result.thumbnail_ = value;
        return this;
      }
      public Builder SetThumbnail(global::Hangups.Proto.PlusPhoto.Types.Thumbnail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasThumbnail = true;
        result.thumbnail_ = builderForValue.Build();
        return this;
      }
      public Builder MergeThumbnail(global::Hangups.Proto.PlusPhoto.Types.Thumbnail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasThumbnail &&
            result.thumbnail_ != global::Hangups.Proto.PlusPhoto.Types.Thumbnail.DefaultInstance) {
            result.thumbnail_ = global::Hangups.Proto.PlusPhoto.Types.Thumbnail.CreateBuilder(result.thumbnail_).MergeFrom(value).BuildPartial();
        } else {
          result.thumbnail_ = value;
        }
        result.hasThumbnail = true;
        return this;
      }
      public Builder ClearThumbnail() {
        PrepareBuilder();
        result.hasThumbnail = false;
        result.thumbnail_ = null;
        return this;
      }
      
      public bool HasOwnerObfuscatedId {
        get { return result.hasOwnerObfuscatedId; }
      }
      public string OwnerObfuscatedId {
        get { return result.OwnerObfuscatedId; }
        set { SetOwnerObfuscatedId(value); }
      }
      public Builder SetOwnerObfuscatedId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOwnerObfuscatedId = true;
        result.ownerObfuscatedId_ = value;
        return this;
      }
      public Builder ClearOwnerObfuscatedId() {
        PrepareBuilder();
        result.hasOwnerObfuscatedId = false;
        result.ownerObfuscatedId_ = "";
        return this;
      }
      
      public bool HasAlbumId {
        get { return result.hasAlbumId; }
      }
      public string AlbumId {
        get { return result.AlbumId; }
        set { SetAlbumId(value); }
      }
      public Builder SetAlbumId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAlbumId = true;
        result.albumId_ = value;
        return this;
      }
      public Builder ClearAlbumId() {
        PrepareBuilder();
        result.hasAlbumId = false;
        result.albumId_ = "";
        return this;
      }
      
      public bool HasPhotoId {
        get { return result.hasPhotoId; }
      }
      public string PhotoId {
        get { return result.PhotoId; }
        set { SetPhotoId(value); }
      }
      public Builder SetPhotoId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhotoId = true;
        result.photoId_ = value;
        return this;
      }
      public Builder ClearPhotoId() {
        PrepareBuilder();
        result.hasPhotoId = false;
        result.photoId_ = "";
        return this;
      }
      
      public bool HasUrl {
        get { return result.hasUrl; }
      }
      public string Url {
        get { return result.Url; }
        set { SetUrl(value); }
      }
      public Builder SetUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder ClearUrl() {
        PrepareBuilder();
        result.hasUrl = false;
        result.url_ = "";
        return this;
      }
      
      public bool HasOriginalContentUrl {
        get { return result.hasOriginalContentUrl; }
      }
      public string OriginalContentUrl {
        get { return result.OriginalContentUrl; }
        set { SetOriginalContentUrl(value); }
      }
      public Builder SetOriginalContentUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalContentUrl = true;
        result.originalContentUrl_ = value;
        return this;
      }
      public Builder ClearOriginalContentUrl() {
        PrepareBuilder();
        result.hasOriginalContentUrl = false;
        result.originalContentUrl_ = "";
        return this;
      }
      
      public bool HasMediaType {
       get { return result.hasMediaType; }
      }
      public global::Hangups.Proto.PlusPhoto.Types.MediaType MediaType {
        get { return result.MediaType; }
        set { SetMediaType(value); }
      }
      public Builder SetMediaType(global::Hangups.Proto.PlusPhoto.Types.MediaType value) {
        PrepareBuilder();
        result.hasMediaType = true;
        result.mediaType_ = value;
        return this;
      }
      public Builder ClearMediaType() {
        PrepareBuilder();
        result.hasMediaType = false;
        result.mediaType_ = global::Hangups.Proto.PlusPhoto.Types.MediaType.MEDIA_TYPE_UNKNOWN;
        return this;
      }
      
      public pbc::IPopsicleList<string> StreamIdList {
        get { return PrepareBuilder().streamId_; }
      }
      public int StreamIdCount {
        get { return result.StreamIdCount; }
      }
      public string GetStreamId(int index) {
        return result.GetStreamId(index);
      }
      public Builder SetStreamId(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streamId_[index] = value;
        return this;
      }
      public Builder AddStreamId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.streamId_.Add(value);
        return this;
      }
      public Builder AddRangeStreamId(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.streamId_.Add(values);
        return this;
      }
      public Builder ClearStreamId() {
        PrepareBuilder();
        result.streamId_.Clear();
        return this;
      }
    }
    static PlusPhoto() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Place : pb::GeneratedMessage<Place, Place.Builder> {
    private Place() { }
    private static readonly Place defaultInstance = new Place().MakeReadOnly();
    private static readonly string[] _placeFieldNames = new string[] { "name", "representative_image", "url" };
    private static readonly uint[] _placeFieldTags = new uint[] { 26, 1482, 10 };
    public static Place DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Place DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Place ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Place__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Place, Place.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Place__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RepresentativeImage : pb::GeneratedMessage<RepresentativeImage, RepresentativeImage.Builder> {
        private RepresentativeImage() { }
        private static readonly RepresentativeImage defaultInstance = new RepresentativeImage().MakeReadOnly();
        private static readonly string[] _representativeImageFieldNames = new string[] { "url" };
        private static readonly uint[] _representativeImageFieldTags = new uint[] { 18 };
        public static RepresentativeImage DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override RepresentativeImage DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override RepresentativeImage ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::Hangups.Proto.Hangouts.internal__static_Place_RepresentativeImage__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<RepresentativeImage, RepresentativeImage.Builder> InternalFieldAccessors {
          get { return global::Hangups.Proto.Hangouts.internal__static_Place_RepresentativeImage__FieldAccessorTable; }
        }
        
        public const int UrlFieldNumber = 2;
        private bool hasUrl;
        private string url_ = "";
        public bool HasUrl {
          get { return hasUrl; }
        }
        public string Url {
          get { return url_; }
        }
        
        public override bool IsInitialized {
          get {
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _representativeImageFieldNames;
          if (hasUrl) {
            output.WriteString(2, field_names[0], Url);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasUrl) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Url);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static RepresentativeImage ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static RepresentativeImage ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static RepresentativeImage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static RepresentativeImage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private RepresentativeImage MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(RepresentativeImage prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<RepresentativeImage, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(RepresentativeImage cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private RepresentativeImage result;
          
          private RepresentativeImage PrepareBuilder() {
            if (resultIsReadOnly) {
              RepresentativeImage original = result;
              result = new RepresentativeImage();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override RepresentativeImage MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::Hangups.Proto.Place.Types.RepresentativeImage.Descriptor; }
          }
          
          public override RepresentativeImage DefaultInstanceForType {
            get { return global::Hangups.Proto.Place.Types.RepresentativeImage.DefaultInstance; }
          }
          
          public override RepresentativeImage BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is RepresentativeImage) {
              return MergeFrom((RepresentativeImage) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(RepresentativeImage other) {
            if (other == global::Hangups.Proto.Place.Types.RepresentativeImage.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasUrl) {
              Url = other.Url;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_representativeImageFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _representativeImageFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 18: {
                  result.hasUrl = input.ReadString(ref result.url_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasUrl {
            get { return result.hasUrl; }
          }
          public string Url {
            get { return result.Url; }
            set { SetUrl(value); }
          }
          public Builder SetUrl(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasUrl = true;
            result.url_ = value;
            return this;
          }
          public Builder ClearUrl() {
            PrepareBuilder();
            result.hasUrl = false;
            result.url_ = "";
            return this;
          }
        }
        static RepresentativeImage() {
          object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int UrlFieldNumber = 1;
    private bool hasUrl;
    private string url_ = "";
    public bool HasUrl {
      get { return hasUrl; }
    }
    public string Url {
      get { return url_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int RepresentativeImageFieldNumber = 185;
    private bool hasRepresentativeImage;
    private global::Hangups.Proto.Place.Types.RepresentativeImage representativeImage_;
    public bool HasRepresentativeImage {
      get { return hasRepresentativeImage; }
    }
    public global::Hangups.Proto.Place.Types.RepresentativeImage RepresentativeImage {
      get { return representativeImage_ ?? global::Hangups.Proto.Place.Types.RepresentativeImage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _placeFieldNames;
      if (hasUrl) {
        output.WriteString(1, field_names[2], Url);
      }
      if (hasName) {
        output.WriteString(3, field_names[0], Name);
      }
      if (hasRepresentativeImage) {
        output.WriteMessage(185, field_names[1], RepresentativeImage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Url);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Name);
      }
      if (hasRepresentativeImage) {
        size += pb::CodedOutputStream.ComputeMessageSize(185, RepresentativeImage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Place ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Place ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Place ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Place ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Place ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Place ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Place ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Place ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Place ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Place ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Place MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Place prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Place, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Place cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Place result;
      
      private Place PrepareBuilder() {
        if (resultIsReadOnly) {
          Place original = result;
          result = new Place();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Place MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Place.Descriptor; }
      }
      
      public override Place DefaultInstanceForType {
        get { return global::Hangups.Proto.Place.DefaultInstance; }
      }
      
      public override Place BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Place) {
          return MergeFrom((Place) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Place other) {
        if (other == global::Hangups.Proto.Place.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUrl) {
          Url = other.Url;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasRepresentativeImage) {
          MergeRepresentativeImage(other.RepresentativeImage);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUrl = input.ReadString(ref result.url_);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 1482: {
              global::Hangups.Proto.Place.Types.RepresentativeImage.Builder subBuilder = global::Hangups.Proto.Place.Types.RepresentativeImage.CreateBuilder();
              if (result.hasRepresentativeImage) {
                subBuilder.MergeFrom(RepresentativeImage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RepresentativeImage = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUrl {
        get { return result.hasUrl; }
      }
      public string Url {
        get { return result.Url; }
        set { SetUrl(value); }
      }
      public Builder SetUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder ClearUrl() {
        PrepareBuilder();
        result.hasUrl = false;
        result.url_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasRepresentativeImage {
       get { return result.hasRepresentativeImage; }
      }
      public global::Hangups.Proto.Place.Types.RepresentativeImage RepresentativeImage {
        get { return result.RepresentativeImage; }
        set { SetRepresentativeImage(value); }
      }
      public Builder SetRepresentativeImage(global::Hangups.Proto.Place.Types.RepresentativeImage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRepresentativeImage = true;
        result.representativeImage_ = value;
        return this;
      }
      public Builder SetRepresentativeImage(global::Hangups.Proto.Place.Types.RepresentativeImage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRepresentativeImage = true;
        result.representativeImage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRepresentativeImage(global::Hangups.Proto.Place.Types.RepresentativeImage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRepresentativeImage &&
            result.representativeImage_ != global::Hangups.Proto.Place.Types.RepresentativeImage.DefaultInstance) {
            result.representativeImage_ = global::Hangups.Proto.Place.Types.RepresentativeImage.CreateBuilder(result.representativeImage_).MergeFrom(value).BuildPartial();
        } else {
          result.representativeImage_ = value;
        }
        result.hasRepresentativeImage = true;
        return this;
      }
      public Builder ClearRepresentativeImage() {
        PrepareBuilder();
        result.hasRepresentativeImage = false;
        result.representativeImage_ = null;
        return this;
      }
    }
    static Place() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EmbedItem : pb::GeneratedMessage<EmbedItem, EmbedItem.Builder> {
    private EmbedItem() { }
    private static readonly EmbedItem defaultInstance = new EmbedItem().MakeReadOnly();
    private static readonly string[] _embedItemFieldNames = new string[] { "id", "place", "plus_photo", "type" };
    private static readonly uint[] _embedItemFieldTags = new uint[] { 18, 286605122, 221119658, 8 };
    public static EmbedItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EmbedItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EmbedItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EmbedItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EmbedItem, EmbedItem.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EmbedItem__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.ItemType> type_ = new pbc::PopsicleList<global::Hangups.Proto.ItemType>();
    public scg::IList<global::Hangups.Proto.ItemType> TypeList {
      get { return pbc::Lists.AsReadOnly(type_); }
    }
    public int TypeCount {
      get { return type_.Count; }
    }
    public global::Hangups.Proto.ItemType GetType(int index) {
      return type_[index];
    }
    
    public const int IdFieldNumber = 2;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int PlusPhotoFieldNumber = 27639957;
    private bool hasPlusPhoto;
    private global::Hangups.Proto.PlusPhoto plusPhoto_;
    public bool HasPlusPhoto {
      get { return hasPlusPhoto; }
    }
    public global::Hangups.Proto.PlusPhoto PlusPhoto {
      get { return plusPhoto_ ?? global::Hangups.Proto.PlusPhoto.DefaultInstance; }
    }
    
    public const int PlaceFieldNumber = 35825640;
    private bool hasPlace;
    private global::Hangups.Proto.Place place_;
    public bool HasPlace {
      get { return hasPlace; }
    }
    public global::Hangups.Proto.Place Place {
      get { return place_ ?? global::Hangups.Proto.Place.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _embedItemFieldNames;
      if (type_.Count > 0) {
        output.WriteEnumArray(1, field_names[3], type_);
      }
      if (hasId) {
        output.WriteString(2, field_names[0], Id);
      }
      if (hasPlusPhoto) {
        output.WriteMessage(27639957, field_names[2], PlusPhoto);
      }
      if (hasPlace) {
        output.WriteMessage(35825640, field_names[1], Place);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        if (type_.Count > 0) {
          foreach (global::Hangups.Proto.ItemType element in type_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 1 * type_.Count;
        }
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Id);
      }
      if (hasPlusPhoto) {
        size += pb::CodedOutputStream.ComputeMessageSize(27639957, PlusPhoto);
      }
      if (hasPlace) {
        size += pb::CodedOutputStream.ComputeMessageSize(35825640, Place);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EmbedItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EmbedItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EmbedItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EmbedItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EmbedItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EmbedItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EmbedItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EmbedItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EmbedItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EmbedItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EmbedItem MakeReadOnly() {
      type_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EmbedItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EmbedItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EmbedItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EmbedItem result;
      
      private EmbedItem PrepareBuilder() {
        if (resultIsReadOnly) {
          EmbedItem original = result;
          result = new EmbedItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EmbedItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EmbedItem.Descriptor; }
      }
      
      public override EmbedItem DefaultInstanceForType {
        get { return global::Hangups.Proto.EmbedItem.DefaultInstance; }
      }
      
      public override EmbedItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EmbedItem) {
          return MergeFrom((EmbedItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EmbedItem other) {
        if (other == global::Hangups.Proto.EmbedItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.type_.Count != 0) {
          result.type_.Add(other.type_);
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasPlusPhoto) {
          MergePlusPhoto(other.PlusPhoto);
        }
        if (other.HasPlace) {
          MergePlace(other.Place);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_embedItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _embedItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              scg::ICollection<object> unknownItems;
              input.ReadEnumArray<global::Hangups.Proto.ItemType>(tag, field_name, result.type_, out unknownItems);
              if (unknownItems != null) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                foreach (object rawValue in unknownItems)
                  if (rawValue is int)
                    unknownFields.MergeVarintField(1, (ulong)(int)rawValue);
              }
              break;
            }
            case 18: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 221119658: {
              global::Hangups.Proto.PlusPhoto.Builder subBuilder = global::Hangups.Proto.PlusPhoto.CreateBuilder();
              if (result.hasPlusPhoto) {
                subBuilder.MergeFrom(PlusPhoto);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PlusPhoto = subBuilder.BuildPartial();
              break;
            }
            case 286605122: {
              global::Hangups.Proto.Place.Builder subBuilder = global::Hangups.Proto.Place.CreateBuilder();
              if (result.hasPlace) {
                subBuilder.MergeFrom(Place);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Place = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.ItemType> TypeList {
        get { return PrepareBuilder().type_; }
      }
      public int TypeCount {
        get { return result.TypeCount; }
      }
      public global::Hangups.Proto.ItemType GetType(int index) {
        return result.GetType(index);
      }
      public Builder SetType(int index, global::Hangups.Proto.ItemType value) {
        PrepareBuilder();
        result.type_[index] = value;
        return this;
      }
      public Builder AddType(global::Hangups.Proto.ItemType value) {
        PrepareBuilder();
        result.type_.Add(value);
        return this;
      }
      public Builder AddRangeType(scg::IEnumerable<global::Hangups.Proto.ItemType> values) {
        PrepareBuilder();
        result.type_.Add(values);
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.type_.Clear();
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasPlusPhoto {
       get { return result.hasPlusPhoto; }
      }
      public global::Hangups.Proto.PlusPhoto PlusPhoto {
        get { return result.PlusPhoto; }
        set { SetPlusPhoto(value); }
      }
      public Builder SetPlusPhoto(global::Hangups.Proto.PlusPhoto value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlusPhoto = true;
        result.plusPhoto_ = value;
        return this;
      }
      public Builder SetPlusPhoto(global::Hangups.Proto.PlusPhoto.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPlusPhoto = true;
        result.plusPhoto_ = builderForValue.Build();
        return this;
      }
      public Builder MergePlusPhoto(global::Hangups.Proto.PlusPhoto value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPlusPhoto &&
            result.plusPhoto_ != global::Hangups.Proto.PlusPhoto.DefaultInstance) {
            result.plusPhoto_ = global::Hangups.Proto.PlusPhoto.CreateBuilder(result.plusPhoto_).MergeFrom(value).BuildPartial();
        } else {
          result.plusPhoto_ = value;
        }
        result.hasPlusPhoto = true;
        return this;
      }
      public Builder ClearPlusPhoto() {
        PrepareBuilder();
        result.hasPlusPhoto = false;
        result.plusPhoto_ = null;
        return this;
      }
      
      public bool HasPlace {
       get { return result.hasPlace; }
      }
      public global::Hangups.Proto.Place Place {
        get { return result.Place; }
        set { SetPlace(value); }
      }
      public Builder SetPlace(global::Hangups.Proto.Place value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlace = true;
        result.place_ = value;
        return this;
      }
      public Builder SetPlace(global::Hangups.Proto.Place.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPlace = true;
        result.place_ = builderForValue.Build();
        return this;
      }
      public Builder MergePlace(global::Hangups.Proto.Place value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPlace &&
            result.place_ != global::Hangups.Proto.Place.DefaultInstance) {
            result.place_ = global::Hangups.Proto.Place.CreateBuilder(result.place_).MergeFrom(value).BuildPartial();
        } else {
          result.place_ = value;
        }
        result.hasPlace = true;
        return this;
      }
      public Builder ClearPlace() {
        PrepareBuilder();
        result.hasPlace = false;
        result.place_ = null;
        return this;
      }
    }
    static EmbedItem() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Attachment : pb::GeneratedMessage<Attachment, Attachment.Builder> {
    private Attachment() { }
    private static readonly Attachment defaultInstance = new Attachment().MakeReadOnly();
    private static readonly string[] _attachmentFieldNames = new string[] { "embed_item" };
    private static readonly uint[] _attachmentFieldTags = new uint[] { 10 };
    public static Attachment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Attachment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Attachment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Attachment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Attachment, Attachment.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Attachment__FieldAccessorTable; }
    }
    
    public const int EmbedItemFieldNumber = 1;
    private bool hasEmbedItem;
    private global::Hangups.Proto.EmbedItem embedItem_;
    public bool HasEmbedItem {
      get { return hasEmbedItem; }
    }
    public global::Hangups.Proto.EmbedItem EmbedItem {
      get { return embedItem_ ?? global::Hangups.Proto.EmbedItem.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _attachmentFieldNames;
      if (hasEmbedItem) {
        output.WriteMessage(1, field_names[0], EmbedItem);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEmbedItem) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, EmbedItem);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Attachment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Attachment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Attachment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Attachment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Attachment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Attachment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Attachment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Attachment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Attachment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Attachment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Attachment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Attachment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Attachment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Attachment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Attachment result;
      
      private Attachment PrepareBuilder() {
        if (resultIsReadOnly) {
          Attachment original = result;
          result = new Attachment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Attachment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Attachment.Descriptor; }
      }
      
      public override Attachment DefaultInstanceForType {
        get { return global::Hangups.Proto.Attachment.DefaultInstance; }
      }
      
      public override Attachment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Attachment) {
          return MergeFrom((Attachment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Attachment other) {
        if (other == global::Hangups.Proto.Attachment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEmbedItem) {
          MergeEmbedItem(other.EmbedItem);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_attachmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _attachmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.EmbedItem.Builder subBuilder = global::Hangups.Proto.EmbedItem.CreateBuilder();
              if (result.hasEmbedItem) {
                subBuilder.MergeFrom(EmbedItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EmbedItem = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEmbedItem {
       get { return result.hasEmbedItem; }
      }
      public global::Hangups.Proto.EmbedItem EmbedItem {
        get { return result.EmbedItem; }
        set { SetEmbedItem(value); }
      }
      public Builder SetEmbedItem(global::Hangups.Proto.EmbedItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmbedItem = true;
        result.embedItem_ = value;
        return this;
      }
      public Builder SetEmbedItem(global::Hangups.Proto.EmbedItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEmbedItem = true;
        result.embedItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEmbedItem(global::Hangups.Proto.EmbedItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEmbedItem &&
            result.embedItem_ != global::Hangups.Proto.EmbedItem.DefaultInstance) {
            result.embedItem_ = global::Hangups.Proto.EmbedItem.CreateBuilder(result.embedItem_).MergeFrom(value).BuildPartial();
        } else {
          result.embedItem_ = value;
        }
        result.hasEmbedItem = true;
        return this;
      }
      public Builder ClearEmbedItem() {
        PrepareBuilder();
        result.hasEmbedItem = false;
        result.embedItem_ = null;
        return this;
      }
    }
    static Attachment() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MessageContent : pb::GeneratedMessage<MessageContent, MessageContent.Builder> {
    private MessageContent() { }
    private static readonly MessageContent defaultInstance = new MessageContent().MakeReadOnly();
    private static readonly string[] _messageContentFieldNames = new string[] { "attachment", "segment" };
    private static readonly uint[] _messageContentFieldTags = new uint[] { 18, 10 };
    public static MessageContent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MessageContent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MessageContent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_MessageContent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MessageContent, MessageContent.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_MessageContent__FieldAccessorTable; }
    }
    
    public const int SegmentFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.Segment> segment_ = new pbc::PopsicleList<global::Hangups.Proto.Segment>();
    public scg::IList<global::Hangups.Proto.Segment> SegmentList {
      get { return segment_; }
    }
    public int SegmentCount {
      get { return segment_.Count; }
    }
    public global::Hangups.Proto.Segment GetSegment(int index) {
      return segment_[index];
    }
    
    public const int AttachmentFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.Attachment> attachment_ = new pbc::PopsicleList<global::Hangups.Proto.Attachment>();
    public scg::IList<global::Hangups.Proto.Attachment> AttachmentList {
      get { return attachment_; }
    }
    public int AttachmentCount {
      get { return attachment_.Count; }
    }
    public global::Hangups.Proto.Attachment GetAttachment(int index) {
      return attachment_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.Segment element in SegmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _messageContentFieldNames;
      if (segment_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], segment_);
      }
      if (attachment_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], attachment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.Segment element in SegmentList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::Hangups.Proto.Attachment element in AttachmentList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MessageContent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MessageContent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MessageContent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MessageContent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MessageContent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MessageContent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MessageContent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MessageContent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MessageContent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MessageContent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MessageContent MakeReadOnly() {
      segment_.MakeReadOnly();
      attachment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MessageContent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MessageContent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MessageContent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MessageContent result;
      
      private MessageContent PrepareBuilder() {
        if (resultIsReadOnly) {
          MessageContent original = result;
          result = new MessageContent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MessageContent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.MessageContent.Descriptor; }
      }
      
      public override MessageContent DefaultInstanceForType {
        get { return global::Hangups.Proto.MessageContent.DefaultInstance; }
      }
      
      public override MessageContent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MessageContent) {
          return MergeFrom((MessageContent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MessageContent other) {
        if (other == global::Hangups.Proto.MessageContent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.segment_.Count != 0) {
          result.segment_.Add(other.segment_);
        }
        if (other.attachment_.Count != 0) {
          result.attachment_.Add(other.attachment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messageContentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messageContentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.segment_, global::Hangups.Proto.Segment.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.attachment_, global::Hangups.Proto.Attachment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.Segment> SegmentList {
        get { return PrepareBuilder().segment_; }
      }
      public int SegmentCount {
        get { return result.SegmentCount; }
      }
      public global::Hangups.Proto.Segment GetSegment(int index) {
        return result.GetSegment(index);
      }
      public Builder SetSegment(int index, global::Hangups.Proto.Segment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.segment_[index] = value;
        return this;
      }
      public Builder SetSegment(int index, global::Hangups.Proto.Segment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.segment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSegment(global::Hangups.Proto.Segment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.segment_.Add(value);
        return this;
      }
      public Builder AddSegment(global::Hangups.Proto.Segment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.segment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSegment(scg::IEnumerable<global::Hangups.Proto.Segment> values) {
        PrepareBuilder();
        result.segment_.Add(values);
        return this;
      }
      public Builder ClearSegment() {
        PrepareBuilder();
        result.segment_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.Attachment> AttachmentList {
        get { return PrepareBuilder().attachment_; }
      }
      public int AttachmentCount {
        get { return result.AttachmentCount; }
      }
      public global::Hangups.Proto.Attachment GetAttachment(int index) {
        return result.GetAttachment(index);
      }
      public Builder SetAttachment(int index, global::Hangups.Proto.Attachment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attachment_[index] = value;
        return this;
      }
      public Builder SetAttachment(int index, global::Hangups.Proto.Attachment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attachment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttachment(global::Hangups.Proto.Attachment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attachment_.Add(value);
        return this;
      }
      public Builder AddAttachment(global::Hangups.Proto.Attachment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attachment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttachment(scg::IEnumerable<global::Hangups.Proto.Attachment> values) {
        PrepareBuilder();
        result.attachment_.Add(values);
        return this;
      }
      public Builder ClearAttachment() {
        PrepareBuilder();
        result.attachment_.Clear();
        return this;
      }
    }
    static MessageContent() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventAnnotation : pb::GeneratedMessage<EventAnnotation, EventAnnotation.Builder> {
    private EventAnnotation() { }
    private static readonly EventAnnotation defaultInstance = new EventAnnotation().MakeReadOnly();
    private static readonly string[] _eventAnnotationFieldNames = new string[] { "type", "value" };
    private static readonly uint[] _eventAnnotationFieldTags = new uint[] { 8, 18 };
    public static EventAnnotation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EventAnnotation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EventAnnotation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventAnnotation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EventAnnotation, EventAnnotation.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventAnnotation__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private int type_;
    public bool HasType {
      get { return hasType; }
    }
    public int Type {
      get { return type_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eventAnnotationFieldNames;
      if (hasType) {
        output.WriteInt32(1, field_names[0], Type);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EventAnnotation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventAnnotation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventAnnotation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventAnnotation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventAnnotation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventAnnotation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EventAnnotation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EventAnnotation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EventAnnotation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventAnnotation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EventAnnotation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EventAnnotation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EventAnnotation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EventAnnotation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EventAnnotation result;
      
      private EventAnnotation PrepareBuilder() {
        if (resultIsReadOnly) {
          EventAnnotation original = result;
          result = new EventAnnotation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EventAnnotation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EventAnnotation.Descriptor; }
      }
      
      public override EventAnnotation DefaultInstanceForType {
        get { return global::Hangups.Proto.EventAnnotation.DefaultInstance; }
      }
      
      public override EventAnnotation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EventAnnotation) {
          return MergeFrom((EventAnnotation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EventAnnotation other) {
        if (other == global::Hangups.Proto.EventAnnotation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eventAnnotationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eventAnnotationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasType = input.ReadInt32(ref result.type_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      public int Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(int value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    static EventAnnotation() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatMessage : pb::GeneratedMessage<ChatMessage, ChatMessage.Builder> {
    private ChatMessage() { }
    private static readonly ChatMessage defaultInstance = new ChatMessage().MakeReadOnly();
    private static readonly string[] _chatMessageFieldNames = new string[] { "annotation", "message_content" };
    private static readonly uint[] _chatMessageFieldTags = new uint[] { 18, 26 };
    public static ChatMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ChatMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatMessage, ChatMessage.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ChatMessage__FieldAccessorTable; }
    }
    
    public const int AnnotationFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.EventAnnotation> annotation_ = new pbc::PopsicleList<global::Hangups.Proto.EventAnnotation>();
    public scg::IList<global::Hangups.Proto.EventAnnotation> AnnotationList {
      get { return annotation_; }
    }
    public int AnnotationCount {
      get { return annotation_.Count; }
    }
    public global::Hangups.Proto.EventAnnotation GetAnnotation(int index) {
      return annotation_[index];
    }
    
    public const int MessageContentFieldNumber = 3;
    private bool hasMessageContent;
    private global::Hangups.Proto.MessageContent messageContent_;
    public bool HasMessageContent {
      get { return hasMessageContent; }
    }
    public global::Hangups.Proto.MessageContent MessageContent {
      get { return messageContent_ ?? global::Hangups.Proto.MessageContent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMessageContent) {
          if (!MessageContent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatMessageFieldNames;
      if (annotation_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], annotation_);
      }
      if (hasMessageContent) {
        output.WriteMessage(3, field_names[1], MessageContent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.EventAnnotation element in AnnotationList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasMessageContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, MessageContent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatMessage MakeReadOnly() {
      annotation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatMessage result;
      
      private ChatMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatMessage original = result;
          result = new ChatMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ChatMessage.Descriptor; }
      }
      
      public override ChatMessage DefaultInstanceForType {
        get { return global::Hangups.Proto.ChatMessage.DefaultInstance; }
      }
      
      public override ChatMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatMessage) {
          return MergeFrom((ChatMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatMessage other) {
        if (other == global::Hangups.Proto.ChatMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.annotation_.Count != 0) {
          result.annotation_.Add(other.annotation_);
        }
        if (other.HasMessageContent) {
          MergeMessageContent(other.MessageContent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.annotation_, global::Hangups.Proto.EventAnnotation.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::Hangups.Proto.MessageContent.Builder subBuilder = global::Hangups.Proto.MessageContent.CreateBuilder();
              if (result.hasMessageContent) {
                subBuilder.MergeFrom(MessageContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageContent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.EventAnnotation> AnnotationList {
        get { return PrepareBuilder().annotation_; }
      }
      public int AnnotationCount {
        get { return result.AnnotationCount; }
      }
      public global::Hangups.Proto.EventAnnotation GetAnnotation(int index) {
        return result.GetAnnotation(index);
      }
      public Builder SetAnnotation(int index, global::Hangups.Proto.EventAnnotation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.annotation_[index] = value;
        return this;
      }
      public Builder SetAnnotation(int index, global::Hangups.Proto.EventAnnotation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.annotation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAnnotation(global::Hangups.Proto.EventAnnotation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.annotation_.Add(value);
        return this;
      }
      public Builder AddAnnotation(global::Hangups.Proto.EventAnnotation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.annotation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAnnotation(scg::IEnumerable<global::Hangups.Proto.EventAnnotation> values) {
        PrepareBuilder();
        result.annotation_.Add(values);
        return this;
      }
      public Builder ClearAnnotation() {
        PrepareBuilder();
        result.annotation_.Clear();
        return this;
      }
      
      public bool HasMessageContent {
       get { return result.hasMessageContent; }
      }
      public global::Hangups.Proto.MessageContent MessageContent {
        get { return result.MessageContent; }
        set { SetMessageContent(value); }
      }
      public Builder SetMessageContent(global::Hangups.Proto.MessageContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageContent = true;
        result.messageContent_ = value;
        return this;
      }
      public Builder SetMessageContent(global::Hangups.Proto.MessageContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageContent = true;
        result.messageContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageContent(global::Hangups.Proto.MessageContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageContent &&
            result.messageContent_ != global::Hangups.Proto.MessageContent.DefaultInstance) {
            result.messageContent_ = global::Hangups.Proto.MessageContent.CreateBuilder(result.messageContent_).MergeFrom(value).BuildPartial();
        } else {
          result.messageContent_ = value;
        }
        result.hasMessageContent = true;
        return this;
      }
      public Builder ClearMessageContent() {
        PrepareBuilder();
        result.hasMessageContent = false;
        result.messageContent_ = null;
        return this;
      }
    }
    static ChatMessage() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MembershipChange : pb::GeneratedMessage<MembershipChange, MembershipChange.Builder> {
    private MembershipChange() { }
    private static readonly MembershipChange defaultInstance = new MembershipChange().MakeReadOnly();
    private static readonly string[] _membershipChangeFieldNames = new string[] { "participant_ids", "type" };
    private static readonly uint[] _membershipChangeFieldTags = new uint[] { 26, 8 };
    public static MembershipChange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MembershipChange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MembershipChange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_MembershipChange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MembershipChange, MembershipChange.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_MembershipChange__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::Hangups.Proto.MembershipChangeType type_ = global::Hangups.Proto.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_JOIN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.MembershipChangeType Type {
      get { return type_; }
    }
    
    public const int ParticipantIdsFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.ParticipantId> participantIds_ = new pbc::PopsicleList<global::Hangups.Proto.ParticipantId>();
    public scg::IList<global::Hangups.Proto.ParticipantId> ParticipantIdsList {
      get { return participantIds_; }
    }
    public int ParticipantIdsCount {
      get { return participantIds_.Count; }
    }
    public global::Hangups.Proto.ParticipantId GetParticipantIds(int index) {
      return participantIds_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _membershipChangeFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (participantIds_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], participantIds_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      foreach (global::Hangups.Proto.ParticipantId element in ParticipantIdsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MembershipChange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MembershipChange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MembershipChange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MembershipChange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MembershipChange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MembershipChange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MembershipChange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MembershipChange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MembershipChange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MembershipChange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MembershipChange MakeReadOnly() {
      participantIds_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MembershipChange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MembershipChange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MembershipChange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MembershipChange result;
      
      private MembershipChange PrepareBuilder() {
        if (resultIsReadOnly) {
          MembershipChange original = result;
          result = new MembershipChange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MembershipChange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.MembershipChange.Descriptor; }
      }
      
      public override MembershipChange DefaultInstanceForType {
        get { return global::Hangups.Proto.MembershipChange.DefaultInstance; }
      }
      
      public override MembershipChange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MembershipChange) {
          return MergeFrom((MembershipChange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MembershipChange other) {
        if (other == global::Hangups.Proto.MembershipChange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.participantIds_.Count != 0) {
          result.participantIds_.Add(other.participantIds_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_membershipChangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _membershipChangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.participantIds_, global::Hangups.Proto.ParticipantId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.MembershipChangeType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.MembershipChangeType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.MembershipChangeType.MEMBERSHIP_CHANGE_TYPE_JOIN;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ParticipantId> ParticipantIdsList {
        get { return PrepareBuilder().participantIds_; }
      }
      public int ParticipantIdsCount {
        get { return result.ParticipantIdsCount; }
      }
      public global::Hangups.Proto.ParticipantId GetParticipantIds(int index) {
        return result.GetParticipantIds(index);
      }
      public Builder SetParticipantIds(int index, global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantIds_[index] = value;
        return this;
      }
      public Builder SetParticipantIds(int index, global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantIds_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParticipantIds(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantIds_.Add(value);
        return this;
      }
      public Builder AddParticipantIds(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantIds_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParticipantIds(scg::IEnumerable<global::Hangups.Proto.ParticipantId> values) {
        PrepareBuilder();
        result.participantIds_.Add(values);
        return this;
      }
      public Builder ClearParticipantIds() {
        PrepareBuilder();
        result.participantIds_.Clear();
        return this;
      }
    }
    static MembershipChange() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationRename : pb::GeneratedMessage<ConversationRename, ConversationRename.Builder> {
    private ConversationRename() { }
    private static readonly ConversationRename defaultInstance = new ConversationRename().MakeReadOnly();
    private static readonly string[] _conversationRenameFieldNames = new string[] { "new_name", "old_name" };
    private static readonly uint[] _conversationRenameFieldTags = new uint[] { 10, 18 };
    public static ConversationRename DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConversationRename DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConversationRename ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationRename__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConversationRename, ConversationRename.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationRename__FieldAccessorTable; }
    }
    
    public const int NewNameFieldNumber = 1;
    private bool hasNewName;
    private string newName_ = "";
    public bool HasNewName {
      get { return hasNewName; }
    }
    public string NewName {
      get { return newName_; }
    }
    
    public const int OldNameFieldNumber = 2;
    private bool hasOldName;
    private string oldName_ = "";
    public bool HasOldName {
      get { return hasOldName; }
    }
    public string OldName {
      get { return oldName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationRenameFieldNames;
      if (hasNewName) {
        output.WriteString(1, field_names[0], NewName);
      }
      if (hasOldName) {
        output.WriteString(2, field_names[1], OldName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNewName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, NewName);
      }
      if (hasOldName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OldName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConversationRename ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationRename ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationRename ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationRename ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationRename ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationRename ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConversationRename ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConversationRename ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConversationRename ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationRename ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConversationRename MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConversationRename prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConversationRename, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConversationRename cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConversationRename result;
      
      private ConversationRename PrepareBuilder() {
        if (resultIsReadOnly) {
          ConversationRename original = result;
          result = new ConversationRename();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConversationRename MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConversationRename.Descriptor; }
      }
      
      public override ConversationRename DefaultInstanceForType {
        get { return global::Hangups.Proto.ConversationRename.DefaultInstance; }
      }
      
      public override ConversationRename BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConversationRename) {
          return MergeFrom((ConversationRename) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConversationRename other) {
        if (other == global::Hangups.Proto.ConversationRename.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNewName) {
          NewName = other.NewName;
        }
        if (other.HasOldName) {
          OldName = other.OldName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationRenameFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationRenameFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNewName = input.ReadString(ref result.newName_);
              break;
            }
            case 18: {
              result.hasOldName = input.ReadString(ref result.oldName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNewName {
        get { return result.hasNewName; }
      }
      public string NewName {
        get { return result.NewName; }
        set { SetNewName(value); }
      }
      public Builder SetNewName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewName = true;
        result.newName_ = value;
        return this;
      }
      public Builder ClearNewName() {
        PrepareBuilder();
        result.hasNewName = false;
        result.newName_ = "";
        return this;
      }
      
      public bool HasOldName {
        get { return result.hasOldName; }
      }
      public string OldName {
        get { return result.OldName; }
        set { SetOldName(value); }
      }
      public Builder SetOldName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOldName = true;
        result.oldName_ = value;
        return this;
      }
      public Builder ClearOldName() {
        PrepareBuilder();
        result.hasOldName = false;
        result.oldName_ = "";
        return this;
      }
    }
    static ConversationRename() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HangoutEvent : pb::GeneratedMessage<HangoutEvent, HangoutEvent.Builder> {
    private HangoutEvent() { }
    private static readonly HangoutEvent defaultInstance = new HangoutEvent().MakeReadOnly();
    private static readonly string[] _hangoutEventFieldNames = new string[] { "event_type", "participant_id" };
    private static readonly uint[] _hangoutEventFieldTags = new uint[] { 8, 18 };
    public static HangoutEvent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HangoutEvent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HangoutEvent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_HangoutEvent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HangoutEvent, HangoutEvent.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_HangoutEvent__FieldAccessorTable; }
    }
    
    public const int EventTypeFieldNumber = 1;
    private bool hasEventType;
    private global::Hangups.Proto.HangoutEventType eventType_ = global::Hangups.Proto.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN;
    public bool HasEventType {
      get { return hasEventType; }
    }
    public global::Hangups.Proto.HangoutEventType EventType {
      get { return eventType_; }
    }
    
    public const int ParticipantIdFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.ParticipantId> participantId_ = new pbc::PopsicleList<global::Hangups.Proto.ParticipantId>();
    public scg::IList<global::Hangups.Proto.ParticipantId> ParticipantIdList {
      get { return participantId_; }
    }
    public int ParticipantIdCount {
      get { return participantId_.Count; }
    }
    public global::Hangups.Proto.ParticipantId GetParticipantId(int index) {
      return participantId_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _hangoutEventFieldNames;
      if (hasEventType) {
        output.WriteEnum(1, field_names[0], (int) EventType, EventType);
      }
      if (participantId_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], participantId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEventType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) EventType);
      }
      foreach (global::Hangups.Proto.ParticipantId element in ParticipantIdList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HangoutEvent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HangoutEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HangoutEvent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HangoutEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HangoutEvent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HangoutEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HangoutEvent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HangoutEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HangoutEvent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HangoutEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HangoutEvent MakeReadOnly() {
      participantId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HangoutEvent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HangoutEvent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HangoutEvent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HangoutEvent result;
      
      private HangoutEvent PrepareBuilder() {
        if (resultIsReadOnly) {
          HangoutEvent original = result;
          result = new HangoutEvent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HangoutEvent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.HangoutEvent.Descriptor; }
      }
      
      public override HangoutEvent DefaultInstanceForType {
        get { return global::Hangups.Proto.HangoutEvent.DefaultInstance; }
      }
      
      public override HangoutEvent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HangoutEvent) {
          return MergeFrom((HangoutEvent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HangoutEvent other) {
        if (other == global::Hangups.Proto.HangoutEvent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEventType) {
          EventType = other.EventType;
        }
        if (other.participantId_.Count != 0) {
          result.participantId_.Add(other.participantId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_hangoutEventFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _hangoutEventFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.eventType_, out unknown)) {
                result.hasEventType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.participantId_, global::Hangups.Proto.ParticipantId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEventType {
       get { return result.hasEventType; }
      }
      public global::Hangups.Proto.HangoutEventType EventType {
        get { return result.EventType; }
        set { SetEventType(value); }
      }
      public Builder SetEventType(global::Hangups.Proto.HangoutEventType value) {
        PrepareBuilder();
        result.hasEventType = true;
        result.eventType_ = value;
        return this;
      }
      public Builder ClearEventType() {
        PrepareBuilder();
        result.hasEventType = false;
        result.eventType_ = global::Hangups.Proto.HangoutEventType.HANGOUT_EVENT_TYPE_UNKNOWN;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ParticipantId> ParticipantIdList {
        get { return PrepareBuilder().participantId_; }
      }
      public int ParticipantIdCount {
        get { return result.ParticipantIdCount; }
      }
      public global::Hangups.Proto.ParticipantId GetParticipantId(int index) {
        return result.GetParticipantId(index);
      }
      public Builder SetParticipantId(int index, global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantId_[index] = value;
        return this;
      }
      public Builder SetParticipantId(int index, global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParticipantId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantId_.Add(value);
        return this;
      }
      public Builder AddParticipantId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParticipantId(scg::IEnumerable<global::Hangups.Proto.ParticipantId> values) {
        PrepareBuilder();
        result.participantId_.Add(values);
        return this;
      }
      public Builder ClearParticipantId() {
        PrepareBuilder();
        result.participantId_.Clear();
        return this;
      }
    }
    static HangoutEvent() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OTRModification : pb::GeneratedMessage<OTRModification, OTRModification.Builder> {
    private OTRModification() { }
    private static readonly OTRModification defaultInstance = new OTRModification().MakeReadOnly();
    private static readonly string[] _oTRModificationFieldNames = new string[] { "new_otr_status", "new_otr_toggle", "old_otr_status", "old_otr_toggle" };
    private static readonly uint[] _oTRModificationFieldTags = new uint[] { 16, 32, 8, 24 };
    public static OTRModification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OTRModification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OTRModification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_OTRModification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OTRModification, OTRModification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_OTRModification__FieldAccessorTable; }
    }
    
    public const int OldOtrStatusFieldNumber = 1;
    private bool hasOldOtrStatus;
    private global::Hangups.Proto.OffTheRecordStatus oldOtrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public bool HasOldOtrStatus {
      get { return hasOldOtrStatus; }
    }
    public global::Hangups.Proto.OffTheRecordStatus OldOtrStatus {
      get { return oldOtrStatus_; }
    }
    
    public const int NewOtrStatusFieldNumber = 2;
    private bool hasNewOtrStatus;
    private global::Hangups.Proto.OffTheRecordStatus newOtrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public bool HasNewOtrStatus {
      get { return hasNewOtrStatus; }
    }
    public global::Hangups.Proto.OffTheRecordStatus NewOtrStatus {
      get { return newOtrStatus_; }
    }
    
    public const int OldOtrToggleFieldNumber = 3;
    private bool hasOldOtrToggle;
    private global::Hangups.Proto.OffTheRecordToggle oldOtrToggle_ = global::Hangups.Proto.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
    public bool HasOldOtrToggle {
      get { return hasOldOtrToggle; }
    }
    public global::Hangups.Proto.OffTheRecordToggle OldOtrToggle {
      get { return oldOtrToggle_; }
    }
    
    public const int NewOtrToggleFieldNumber = 4;
    private bool hasNewOtrToggle;
    private global::Hangups.Proto.OffTheRecordToggle newOtrToggle_ = global::Hangups.Proto.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
    public bool HasNewOtrToggle {
      get { return hasNewOtrToggle; }
    }
    public global::Hangups.Proto.OffTheRecordToggle NewOtrToggle {
      get { return newOtrToggle_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _oTRModificationFieldNames;
      if (hasOldOtrStatus) {
        output.WriteEnum(1, field_names[2], (int) OldOtrStatus, OldOtrStatus);
      }
      if (hasNewOtrStatus) {
        output.WriteEnum(2, field_names[0], (int) NewOtrStatus, NewOtrStatus);
      }
      if (hasOldOtrToggle) {
        output.WriteEnum(3, field_names[3], (int) OldOtrToggle, OldOtrToggle);
      }
      if (hasNewOtrToggle) {
        output.WriteEnum(4, field_names[1], (int) NewOtrToggle, NewOtrToggle);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOldOtrStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) OldOtrStatus);
      }
      if (hasNewOtrStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) NewOtrStatus);
      }
      if (hasOldOtrToggle) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) OldOtrToggle);
      }
      if (hasNewOtrToggle) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) NewOtrToggle);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OTRModification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OTRModification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OTRModification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OTRModification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OTRModification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OTRModification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OTRModification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OTRModification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OTRModification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OTRModification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OTRModification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OTRModification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OTRModification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OTRModification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OTRModification result;
      
      private OTRModification PrepareBuilder() {
        if (resultIsReadOnly) {
          OTRModification original = result;
          result = new OTRModification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OTRModification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.OTRModification.Descriptor; }
      }
      
      public override OTRModification DefaultInstanceForType {
        get { return global::Hangups.Proto.OTRModification.DefaultInstance; }
      }
      
      public override OTRModification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OTRModification) {
          return MergeFrom((OTRModification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OTRModification other) {
        if (other == global::Hangups.Proto.OTRModification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOldOtrStatus) {
          OldOtrStatus = other.OldOtrStatus;
        }
        if (other.HasNewOtrStatus) {
          NewOtrStatus = other.NewOtrStatus;
        }
        if (other.HasOldOtrToggle) {
          OldOtrToggle = other.OldOtrToggle;
        }
        if (other.HasNewOtrToggle) {
          NewOtrToggle = other.NewOtrToggle;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_oTRModificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _oTRModificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.oldOtrStatus_, out unknown)) {
                result.hasOldOtrStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.newOtrStatus_, out unknown)) {
                result.hasNewOtrStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.oldOtrToggle_, out unknown)) {
                result.hasOldOtrToggle = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.newOtrToggle_, out unknown)) {
                result.hasNewOtrToggle = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOldOtrStatus {
       get { return result.hasOldOtrStatus; }
      }
      public global::Hangups.Proto.OffTheRecordStatus OldOtrStatus {
        get { return result.OldOtrStatus; }
        set { SetOldOtrStatus(value); }
      }
      public Builder SetOldOtrStatus(global::Hangups.Proto.OffTheRecordStatus value) {
        PrepareBuilder();
        result.hasOldOtrStatus = true;
        result.oldOtrStatus_ = value;
        return this;
      }
      public Builder ClearOldOtrStatus() {
        PrepareBuilder();
        result.hasOldOtrStatus = false;
        result.oldOtrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasNewOtrStatus {
       get { return result.hasNewOtrStatus; }
      }
      public global::Hangups.Proto.OffTheRecordStatus NewOtrStatus {
        get { return result.NewOtrStatus; }
        set { SetNewOtrStatus(value); }
      }
      public Builder SetNewOtrStatus(global::Hangups.Proto.OffTheRecordStatus value) {
        PrepareBuilder();
        result.hasNewOtrStatus = true;
        result.newOtrStatus_ = value;
        return this;
      }
      public Builder ClearNewOtrStatus() {
        PrepareBuilder();
        result.hasNewOtrStatus = false;
        result.newOtrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasOldOtrToggle {
       get { return result.hasOldOtrToggle; }
      }
      public global::Hangups.Proto.OffTheRecordToggle OldOtrToggle {
        get { return result.OldOtrToggle; }
        set { SetOldOtrToggle(value); }
      }
      public Builder SetOldOtrToggle(global::Hangups.Proto.OffTheRecordToggle value) {
        PrepareBuilder();
        result.hasOldOtrToggle = true;
        result.oldOtrToggle_ = value;
        return this;
      }
      public Builder ClearOldOtrToggle() {
        PrepareBuilder();
        result.hasOldOtrToggle = false;
        result.oldOtrToggle_ = global::Hangups.Proto.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
        return this;
      }
      
      public bool HasNewOtrToggle {
       get { return result.hasNewOtrToggle; }
      }
      public global::Hangups.Proto.OffTheRecordToggle NewOtrToggle {
        get { return result.NewOtrToggle; }
        set { SetNewOtrToggle(value); }
      }
      public Builder SetNewOtrToggle(global::Hangups.Proto.OffTheRecordToggle value) {
        PrepareBuilder();
        result.hasNewOtrToggle = true;
        result.newOtrToggle_ = value;
        return this;
      }
      public Builder ClearNewOtrToggle() {
        PrepareBuilder();
        result.hasNewOtrToggle = false;
        result.newOtrToggle_ = global::Hangups.Proto.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
        return this;
      }
    }
    static OTRModification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HashModifier : pb::GeneratedMessage<HashModifier, HashModifier.Builder> {
    private HashModifier() { }
    private static readonly HashModifier defaultInstance = new HashModifier().MakeReadOnly();
    private static readonly string[] _hashModifierFieldNames = new string[] { "hash_diff", "update_id", "version" };
    private static readonly uint[] _hashModifierFieldTags = new uint[] { 16, 10, 32 };
    public static HashModifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HashModifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HashModifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_HashModifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HashModifier, HashModifier.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_HashModifier__FieldAccessorTable; }
    }
    
    public const int UpdateIdFieldNumber = 1;
    private bool hasUpdateId;
    private string updateId_ = "";
    public bool HasUpdateId {
      get { return hasUpdateId; }
    }
    public string UpdateId {
      get { return updateId_; }
    }
    
    public const int HashDiffFieldNumber = 2;
    private bool hasHashDiff;
    private ulong hashDiff_;
    public bool HasHashDiff {
      get { return hasHashDiff; }
    }
    [global::System.CLSCompliant(false)]
    public ulong HashDiff {
      get { return hashDiff_; }
    }
    
    public const int VersionFieldNumber = 4;
    private bool hasVersion;
    private ulong version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _hashModifierFieldNames;
      if (hasUpdateId) {
        output.WriteString(1, field_names[1], UpdateId);
      }
      if (hasHashDiff) {
        output.WriteUInt64(2, field_names[0], HashDiff);
      }
      if (hasVersion) {
        output.WriteUInt64(4, field_names[2], Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUpdateId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UpdateId);
      }
      if (hasHashDiff) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, HashDiff);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, Version);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HashModifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HashModifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HashModifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HashModifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HashModifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HashModifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HashModifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HashModifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HashModifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HashModifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HashModifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HashModifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HashModifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HashModifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HashModifier result;
      
      private HashModifier PrepareBuilder() {
        if (resultIsReadOnly) {
          HashModifier original = result;
          result = new HashModifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HashModifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.HashModifier.Descriptor; }
      }
      
      public override HashModifier DefaultInstanceForType {
        get { return global::Hangups.Proto.HashModifier.DefaultInstance; }
      }
      
      public override HashModifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HashModifier) {
          return MergeFrom((HashModifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HashModifier other) {
        if (other == global::Hangups.Proto.HashModifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUpdateId) {
          UpdateId = other.UpdateId;
        }
        if (other.HasHashDiff) {
          HashDiff = other.HashDiff;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_hashModifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _hashModifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUpdateId = input.ReadString(ref result.updateId_);
              break;
            }
            case 16: {
              result.hasHashDiff = input.ReadUInt64(ref result.hashDiff_);
              break;
            }
            case 32: {
              result.hasVersion = input.ReadUInt64(ref result.version_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUpdateId {
        get { return result.hasUpdateId; }
      }
      public string UpdateId {
        get { return result.UpdateId; }
        set { SetUpdateId(value); }
      }
      public Builder SetUpdateId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateId = true;
        result.updateId_ = value;
        return this;
      }
      public Builder ClearUpdateId() {
        PrepareBuilder();
        result.hasUpdateId = false;
        result.updateId_ = "";
        return this;
      }
      
      public bool HasHashDiff {
        get { return result.hasHashDiff; }
      }
      [global::System.CLSCompliant(false)]
      public ulong HashDiff {
        get { return result.HashDiff; }
        set { SetHashDiff(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHashDiff(ulong value) {
        PrepareBuilder();
        result.hasHashDiff = true;
        result.hashDiff_ = value;
        return this;
      }
      public Builder ClearHashDiff() {
        PrepareBuilder();
        result.hasHashDiff = false;
        result.hashDiff_ = 0UL;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersion(ulong value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0UL;
        return this;
      }
    }
    static HashModifier() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Event : pb::GeneratedMessage<Event, Event.Builder> {
    private Event() { }
    private static readonly Event defaultInstance = new Event().MakeReadOnly();
    private static readonly string[] _eventFieldNames = new string[] { "advances_sort_timestamp", "chat_message", "conversation_id", "conversation_rename", "event_id", "event_type", "event_version", "expiration_timestamp", "hangout_event", "hash_modifier", "medium_type", "membership_change", "otr_modification", "otr_status", "persisted", "self_event_state", "sender_id", "source_type", "timestamp" };
    private static readonly uint[] _eventFieldTags = new uint[] { 120, 58, 10, 82, 98, 184, 192, 104, 90, 210, 162, 74, 114, 128, 136, 34, 18, 48, 24 };
    public static Event DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Event DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Event ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Event__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Event, Event.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Event__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int SenderIdFieldNumber = 2;
    private bool hasSenderId;
    private global::Hangups.Proto.ParticipantId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::Hangups.Proto.ParticipantId SenderId {
      get { return senderId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public const int SelfEventStateFieldNumber = 4;
    private bool hasSelfEventState;
    private global::Hangups.Proto.UserEventState selfEventState_;
    public bool HasSelfEventState {
      get { return hasSelfEventState; }
    }
    public global::Hangups.Proto.UserEventState SelfEventState {
      get { return selfEventState_ ?? global::Hangups.Proto.UserEventState.DefaultInstance; }
    }
    
    public const int SourceTypeFieldNumber = 6;
    private bool hasSourceType;
    private global::Hangups.Proto.SourceType sourceType_ = global::Hangups.Proto.SourceType.SOURCE_TYPE_UNKNOWN;
    public bool HasSourceType {
      get { return hasSourceType; }
    }
    public global::Hangups.Proto.SourceType SourceType {
      get { return sourceType_; }
    }
    
    public const int ChatMessageFieldNumber = 7;
    private bool hasChatMessage;
    private global::Hangups.Proto.ChatMessage chatMessage_;
    public bool HasChatMessage {
      get { return hasChatMessage; }
    }
    public global::Hangups.Proto.ChatMessage ChatMessage {
      get { return chatMessage_ ?? global::Hangups.Proto.ChatMessage.DefaultInstance; }
    }
    
    public const int MembershipChangeFieldNumber = 9;
    private bool hasMembershipChange;
    private global::Hangups.Proto.MembershipChange membershipChange_;
    public bool HasMembershipChange {
      get { return hasMembershipChange; }
    }
    public global::Hangups.Proto.MembershipChange MembershipChange {
      get { return membershipChange_ ?? global::Hangups.Proto.MembershipChange.DefaultInstance; }
    }
    
    public const int ConversationRenameFieldNumber = 10;
    private bool hasConversationRename;
    private global::Hangups.Proto.ConversationRename conversationRename_;
    public bool HasConversationRename {
      get { return hasConversationRename; }
    }
    public global::Hangups.Proto.ConversationRename ConversationRename {
      get { return conversationRename_ ?? global::Hangups.Proto.ConversationRename.DefaultInstance; }
    }
    
    public const int HangoutEventFieldNumber = 11;
    private bool hasHangoutEvent;
    private global::Hangups.Proto.HangoutEvent hangoutEvent_;
    public bool HasHangoutEvent {
      get { return hasHangoutEvent; }
    }
    public global::Hangups.Proto.HangoutEvent HangoutEvent {
      get { return hangoutEvent_ ?? global::Hangups.Proto.HangoutEvent.DefaultInstance; }
    }
    
    public const int EventIdFieldNumber = 12;
    private bool hasEventId;
    private string eventId_ = "";
    public bool HasEventId {
      get { return hasEventId; }
    }
    public string EventId {
      get { return eventId_; }
    }
    
    public const int ExpirationTimestampFieldNumber = 13;
    private bool hasExpirationTimestamp;
    private ulong expirationTimestamp_;
    public bool HasExpirationTimestamp {
      get { return hasExpirationTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ExpirationTimestamp {
      get { return expirationTimestamp_; }
    }
    
    public const int OtrModificationFieldNumber = 14;
    private bool hasOtrModification;
    private global::Hangups.Proto.OTRModification otrModification_;
    public bool HasOtrModification {
      get { return hasOtrModification; }
    }
    public global::Hangups.Proto.OTRModification OtrModification {
      get { return otrModification_ ?? global::Hangups.Proto.OTRModification.DefaultInstance; }
    }
    
    public const int AdvancesSortTimestampFieldNumber = 15;
    private bool hasAdvancesSortTimestamp;
    private bool advancesSortTimestamp_;
    public bool HasAdvancesSortTimestamp {
      get { return hasAdvancesSortTimestamp; }
    }
    public bool AdvancesSortTimestamp {
      get { return advancesSortTimestamp_; }
    }
    
    public const int OtrStatusFieldNumber = 16;
    private bool hasOtrStatus;
    private global::Hangups.Proto.OffTheRecordStatus otrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public bool HasOtrStatus {
      get { return hasOtrStatus; }
    }
    public global::Hangups.Proto.OffTheRecordStatus OtrStatus {
      get { return otrStatus_; }
    }
    
    public const int PersistedFieldNumber = 17;
    private bool hasPersisted;
    private bool persisted_;
    public bool HasPersisted {
      get { return hasPersisted; }
    }
    public bool Persisted {
      get { return persisted_; }
    }
    
    public const int MediumTypeFieldNumber = 20;
    private bool hasMediumType;
    private global::Hangups.Proto.DeliveryMedium mediumType_;
    public bool HasMediumType {
      get { return hasMediumType; }
    }
    public global::Hangups.Proto.DeliveryMedium MediumType {
      get { return mediumType_ ?? global::Hangups.Proto.DeliveryMedium.DefaultInstance; }
    }
    
    public const int EventTypeFieldNumber = 23;
    private bool hasEventType;
    private global::Hangups.Proto.EventType eventType_ = global::Hangups.Proto.EventType.EVENT_TYPE_UNKNOWN;
    public bool HasEventType {
      get { return hasEventType; }
    }
    public global::Hangups.Proto.EventType EventType {
      get { return eventType_; }
    }
    
    public const int EventVersionFieldNumber = 24;
    private bool hasEventVersion;
    private ulong eventVersion_;
    public bool HasEventVersion {
      get { return hasEventVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong EventVersion {
      get { return eventVersion_; }
    }
    
    public const int HashModifierFieldNumber = 26;
    private bool hasHashModifier;
    private global::Hangups.Proto.HashModifier hashModifier_;
    public bool HasHashModifier {
      get { return hasHashModifier; }
    }
    public global::Hangups.Proto.HashModifier HashModifier {
      get { return hashModifier_ ?? global::Hangups.Proto.HashModifier.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasChatMessage) {
          if (!ChatMessage.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eventFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[2], ConversationId);
      }
      if (hasSenderId) {
        output.WriteMessage(2, field_names[16], SenderId);
      }
      if (hasTimestamp) {
        output.WriteUInt64(3, field_names[18], Timestamp);
      }
      if (hasSelfEventState) {
        output.WriteMessage(4, field_names[15], SelfEventState);
      }
      if (hasSourceType) {
        output.WriteEnum(6, field_names[17], (int) SourceType, SourceType);
      }
      if (hasChatMessage) {
        output.WriteMessage(7, field_names[1], ChatMessage);
      }
      if (hasMembershipChange) {
        output.WriteMessage(9, field_names[11], MembershipChange);
      }
      if (hasConversationRename) {
        output.WriteMessage(10, field_names[3], ConversationRename);
      }
      if (hasHangoutEvent) {
        output.WriteMessage(11, field_names[8], HangoutEvent);
      }
      if (hasEventId) {
        output.WriteString(12, field_names[4], EventId);
      }
      if (hasExpirationTimestamp) {
        output.WriteUInt64(13, field_names[7], ExpirationTimestamp);
      }
      if (hasOtrModification) {
        output.WriteMessage(14, field_names[12], OtrModification);
      }
      if (hasAdvancesSortTimestamp) {
        output.WriteBool(15, field_names[0], AdvancesSortTimestamp);
      }
      if (hasOtrStatus) {
        output.WriteEnum(16, field_names[13], (int) OtrStatus, OtrStatus);
      }
      if (hasPersisted) {
        output.WriteBool(17, field_names[14], Persisted);
      }
      if (hasMediumType) {
        output.WriteMessage(20, field_names[10], MediumType);
      }
      if (hasEventType) {
        output.WriteEnum(23, field_names[5], (int) EventType, EventType);
      }
      if (hasEventVersion) {
        output.WriteUInt64(24, field_names[6], EventVersion);
      }
      if (hasHashModifier) {
        output.WriteMessage(26, field_names[9], HashModifier);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SenderId);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, Timestamp);
      }
      if (hasSelfEventState) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SelfEventState);
      }
      if (hasSourceType) {
        size += pb::CodedOutputStream.ComputeEnumSize(6, (int) SourceType);
      }
      if (hasChatMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, ChatMessage);
      }
      if (hasMembershipChange) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, MembershipChange);
      }
      if (hasConversationRename) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, ConversationRename);
      }
      if (hasHangoutEvent) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, HangoutEvent);
      }
      if (hasEventId) {
        size += pb::CodedOutputStream.ComputeStringSize(12, EventId);
      }
      if (hasExpirationTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(13, ExpirationTimestamp);
      }
      if (hasOtrModification) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, OtrModification);
      }
      if (hasAdvancesSortTimestamp) {
        size += pb::CodedOutputStream.ComputeBoolSize(15, AdvancesSortTimestamp);
      }
      if (hasOtrStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(16, (int) OtrStatus);
      }
      if (hasPersisted) {
        size += pb::CodedOutputStream.ComputeBoolSize(17, Persisted);
      }
      if (hasMediumType) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, MediumType);
      }
      if (hasEventType) {
        size += pb::CodedOutputStream.ComputeEnumSize(23, (int) EventType);
      }
      if (hasEventVersion) {
        size += pb::CodedOutputStream.ComputeUInt64Size(24, EventVersion);
      }
      if (hasHashModifier) {
        size += pb::CodedOutputStream.ComputeMessageSize(26, HashModifier);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Event ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Event ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Event ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Event ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Event ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Event ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Event ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Event ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Event ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Event ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Event MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Event prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Event, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Event cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Event result;
      
      private Event PrepareBuilder() {
        if (resultIsReadOnly) {
          Event original = result;
          result = new Event();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Event MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Event.Descriptor; }
      }
      
      public override Event DefaultInstanceForType {
        get { return global::Hangups.Proto.Event.DefaultInstance; }
      }
      
      public override Event BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Event) {
          return MergeFrom((Event) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Event other) {
        if (other == global::Hangups.Proto.Event.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasSelfEventState) {
          MergeSelfEventState(other.SelfEventState);
        }
        if (other.HasSourceType) {
          SourceType = other.SourceType;
        }
        if (other.HasChatMessage) {
          MergeChatMessage(other.ChatMessage);
        }
        if (other.HasMembershipChange) {
          MergeMembershipChange(other.MembershipChange);
        }
        if (other.HasConversationRename) {
          MergeConversationRename(other.ConversationRename);
        }
        if (other.HasHangoutEvent) {
          MergeHangoutEvent(other.HangoutEvent);
        }
        if (other.HasEventId) {
          EventId = other.EventId;
        }
        if (other.HasExpirationTimestamp) {
          ExpirationTimestamp = other.ExpirationTimestamp;
        }
        if (other.HasOtrModification) {
          MergeOtrModification(other.OtrModification);
        }
        if (other.HasAdvancesSortTimestamp) {
          AdvancesSortTimestamp = other.AdvancesSortTimestamp;
        }
        if (other.HasOtrStatus) {
          OtrStatus = other.OtrStatus;
        }
        if (other.HasPersisted) {
          Persisted = other.Persisted;
        }
        if (other.HasMediumType) {
          MergeMediumType(other.MediumType);
        }
        if (other.HasEventType) {
          EventType = other.EventType;
        }
        if (other.HasEventVersion) {
          EventVersion = other.EventVersion;
        }
        if (other.HasHashModifier) {
          MergeHashModifier(other.HashModifier);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eventFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eventFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
            case 34: {
              global::Hangups.Proto.UserEventState.Builder subBuilder = global::Hangups.Proto.UserEventState.CreateBuilder();
              if (result.hasSelfEventState) {
                subBuilder.MergeFrom(SelfEventState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SelfEventState = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.sourceType_, out unknown)) {
                result.hasSourceType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
            case 58: {
              global::Hangups.Proto.ChatMessage.Builder subBuilder = global::Hangups.Proto.ChatMessage.CreateBuilder();
              if (result.hasChatMessage) {
                subBuilder.MergeFrom(ChatMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChatMessage = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::Hangups.Proto.MembershipChange.Builder subBuilder = global::Hangups.Proto.MembershipChange.CreateBuilder();
              if (result.hasMembershipChange) {
                subBuilder.MergeFrom(MembershipChange);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MembershipChange = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::Hangups.Proto.ConversationRename.Builder subBuilder = global::Hangups.Proto.ConversationRename.CreateBuilder();
              if (result.hasConversationRename) {
                subBuilder.MergeFrom(ConversationRename);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationRename = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::Hangups.Proto.HangoutEvent.Builder subBuilder = global::Hangups.Proto.HangoutEvent.CreateBuilder();
              if (result.hasHangoutEvent) {
                subBuilder.MergeFrom(HangoutEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              HangoutEvent = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              result.hasEventId = input.ReadString(ref result.eventId_);
              break;
            }
            case 104: {
              result.hasExpirationTimestamp = input.ReadUInt64(ref result.expirationTimestamp_);
              break;
            }
            case 114: {
              global::Hangups.Proto.OTRModification.Builder subBuilder = global::Hangups.Proto.OTRModification.CreateBuilder();
              if (result.hasOtrModification) {
                subBuilder.MergeFrom(OtrModification);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OtrModification = subBuilder.BuildPartial();
              break;
            }
            case 120: {
              result.hasAdvancesSortTimestamp = input.ReadBool(ref result.advancesSortTimestamp_);
              break;
            }
            case 128: {
              object unknown;
              if(input.ReadEnum(ref result.otrStatus_, out unknown)) {
                result.hasOtrStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(16, (ulong)(int)unknown);
              }
              break;
            }
            case 136: {
              result.hasPersisted = input.ReadBool(ref result.persisted_);
              break;
            }
            case 162: {
              global::Hangups.Proto.DeliveryMedium.Builder subBuilder = global::Hangups.Proto.DeliveryMedium.CreateBuilder();
              if (result.hasMediumType) {
                subBuilder.MergeFrom(MediumType);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MediumType = subBuilder.BuildPartial();
              break;
            }
            case 184: {
              object unknown;
              if(input.ReadEnum(ref result.eventType_, out unknown)) {
                result.hasEventType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(23, (ulong)(int)unknown);
              }
              break;
            }
            case 192: {
              result.hasEventVersion = input.ReadUInt64(ref result.eventVersion_);
              break;
            }
            case 210: {
              global::Hangups.Proto.HashModifier.Builder subBuilder = global::Hangups.Proto.HashModifier.CreateBuilder();
              if (result.hasHashModifier) {
                subBuilder.MergeFrom(HashModifier);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              HashModifier = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::Hangups.Proto.ParticipantId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.senderId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
      
      public bool HasSelfEventState {
       get { return result.hasSelfEventState; }
      }
      public global::Hangups.Proto.UserEventState SelfEventState {
        get { return result.SelfEventState; }
        set { SetSelfEventState(value); }
      }
      public Builder SetSelfEventState(global::Hangups.Proto.UserEventState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSelfEventState = true;
        result.selfEventState_ = value;
        return this;
      }
      public Builder SetSelfEventState(global::Hangups.Proto.UserEventState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSelfEventState = true;
        result.selfEventState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSelfEventState(global::Hangups.Proto.UserEventState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSelfEventState &&
            result.selfEventState_ != global::Hangups.Proto.UserEventState.DefaultInstance) {
            result.selfEventState_ = global::Hangups.Proto.UserEventState.CreateBuilder(result.selfEventState_).MergeFrom(value).BuildPartial();
        } else {
          result.selfEventState_ = value;
        }
        result.hasSelfEventState = true;
        return this;
      }
      public Builder ClearSelfEventState() {
        PrepareBuilder();
        result.hasSelfEventState = false;
        result.selfEventState_ = null;
        return this;
      }
      
      public bool HasSourceType {
       get { return result.hasSourceType; }
      }
      public global::Hangups.Proto.SourceType SourceType {
        get { return result.SourceType; }
        set { SetSourceType(value); }
      }
      public Builder SetSourceType(global::Hangups.Proto.SourceType value) {
        PrepareBuilder();
        result.hasSourceType = true;
        result.sourceType_ = value;
        return this;
      }
      public Builder ClearSourceType() {
        PrepareBuilder();
        result.hasSourceType = false;
        result.sourceType_ = global::Hangups.Proto.SourceType.SOURCE_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasChatMessage {
       get { return result.hasChatMessage; }
      }
      public global::Hangups.Proto.ChatMessage ChatMessage {
        get { return result.ChatMessage; }
        set { SetChatMessage(value); }
      }
      public Builder SetChatMessage(global::Hangups.Proto.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChatMessage = true;
        result.chatMessage_ = value;
        return this;
      }
      public Builder SetChatMessage(global::Hangups.Proto.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChatMessage = true;
        result.chatMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChatMessage(global::Hangups.Proto.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChatMessage &&
            result.chatMessage_ != global::Hangups.Proto.ChatMessage.DefaultInstance) {
            result.chatMessage_ = global::Hangups.Proto.ChatMessage.CreateBuilder(result.chatMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.chatMessage_ = value;
        }
        result.hasChatMessage = true;
        return this;
      }
      public Builder ClearChatMessage() {
        PrepareBuilder();
        result.hasChatMessage = false;
        result.chatMessage_ = null;
        return this;
      }
      
      public bool HasMembershipChange {
       get { return result.hasMembershipChange; }
      }
      public global::Hangups.Proto.MembershipChange MembershipChange {
        get { return result.MembershipChange; }
        set { SetMembershipChange(value); }
      }
      public Builder SetMembershipChange(global::Hangups.Proto.MembershipChange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMembershipChange = true;
        result.membershipChange_ = value;
        return this;
      }
      public Builder SetMembershipChange(global::Hangups.Proto.MembershipChange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMembershipChange = true;
        result.membershipChange_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMembershipChange(global::Hangups.Proto.MembershipChange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMembershipChange &&
            result.membershipChange_ != global::Hangups.Proto.MembershipChange.DefaultInstance) {
            result.membershipChange_ = global::Hangups.Proto.MembershipChange.CreateBuilder(result.membershipChange_).MergeFrom(value).BuildPartial();
        } else {
          result.membershipChange_ = value;
        }
        result.hasMembershipChange = true;
        return this;
      }
      public Builder ClearMembershipChange() {
        PrepareBuilder();
        result.hasMembershipChange = false;
        result.membershipChange_ = null;
        return this;
      }
      
      public bool HasConversationRename {
       get { return result.hasConversationRename; }
      }
      public global::Hangups.Proto.ConversationRename ConversationRename {
        get { return result.ConversationRename; }
        set { SetConversationRename(value); }
      }
      public Builder SetConversationRename(global::Hangups.Proto.ConversationRename value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationRename = true;
        result.conversationRename_ = value;
        return this;
      }
      public Builder SetConversationRename(global::Hangups.Proto.ConversationRename.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationRename = true;
        result.conversationRename_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationRename(global::Hangups.Proto.ConversationRename value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationRename &&
            result.conversationRename_ != global::Hangups.Proto.ConversationRename.DefaultInstance) {
            result.conversationRename_ = global::Hangups.Proto.ConversationRename.CreateBuilder(result.conversationRename_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationRename_ = value;
        }
        result.hasConversationRename = true;
        return this;
      }
      public Builder ClearConversationRename() {
        PrepareBuilder();
        result.hasConversationRename = false;
        result.conversationRename_ = null;
        return this;
      }
      
      public bool HasHangoutEvent {
       get { return result.hasHangoutEvent; }
      }
      public global::Hangups.Proto.HangoutEvent HangoutEvent {
        get { return result.HangoutEvent; }
        set { SetHangoutEvent(value); }
      }
      public Builder SetHangoutEvent(global::Hangups.Proto.HangoutEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHangoutEvent = true;
        result.hangoutEvent_ = value;
        return this;
      }
      public Builder SetHangoutEvent(global::Hangups.Proto.HangoutEvent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHangoutEvent = true;
        result.hangoutEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHangoutEvent(global::Hangups.Proto.HangoutEvent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHangoutEvent &&
            result.hangoutEvent_ != global::Hangups.Proto.HangoutEvent.DefaultInstance) {
            result.hangoutEvent_ = global::Hangups.Proto.HangoutEvent.CreateBuilder(result.hangoutEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.hangoutEvent_ = value;
        }
        result.hasHangoutEvent = true;
        return this;
      }
      public Builder ClearHangoutEvent() {
        PrepareBuilder();
        result.hasHangoutEvent = false;
        result.hangoutEvent_ = null;
        return this;
      }
      
      public bool HasEventId {
        get { return result.hasEventId; }
      }
      public string EventId {
        get { return result.EventId; }
        set { SetEventId(value); }
      }
      public Builder SetEventId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventId = true;
        result.eventId_ = value;
        return this;
      }
      public Builder ClearEventId() {
        PrepareBuilder();
        result.hasEventId = false;
        result.eventId_ = "";
        return this;
      }
      
      public bool HasExpirationTimestamp {
        get { return result.hasExpirationTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ExpirationTimestamp {
        get { return result.ExpirationTimestamp; }
        set { SetExpirationTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetExpirationTimestamp(ulong value) {
        PrepareBuilder();
        result.hasExpirationTimestamp = true;
        result.expirationTimestamp_ = value;
        return this;
      }
      public Builder ClearExpirationTimestamp() {
        PrepareBuilder();
        result.hasExpirationTimestamp = false;
        result.expirationTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasOtrModification {
       get { return result.hasOtrModification; }
      }
      public global::Hangups.Proto.OTRModification OtrModification {
        get { return result.OtrModification; }
        set { SetOtrModification(value); }
      }
      public Builder SetOtrModification(global::Hangups.Proto.OTRModification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOtrModification = true;
        result.otrModification_ = value;
        return this;
      }
      public Builder SetOtrModification(global::Hangups.Proto.OTRModification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOtrModification = true;
        result.otrModification_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOtrModification(global::Hangups.Proto.OTRModification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOtrModification &&
            result.otrModification_ != global::Hangups.Proto.OTRModification.DefaultInstance) {
            result.otrModification_ = global::Hangups.Proto.OTRModification.CreateBuilder(result.otrModification_).MergeFrom(value).BuildPartial();
        } else {
          result.otrModification_ = value;
        }
        result.hasOtrModification = true;
        return this;
      }
      public Builder ClearOtrModification() {
        PrepareBuilder();
        result.hasOtrModification = false;
        result.otrModification_ = null;
        return this;
      }
      
      public bool HasAdvancesSortTimestamp {
        get { return result.hasAdvancesSortTimestamp; }
      }
      public bool AdvancesSortTimestamp {
        get { return result.AdvancesSortTimestamp; }
        set { SetAdvancesSortTimestamp(value); }
      }
      public Builder SetAdvancesSortTimestamp(bool value) {
        PrepareBuilder();
        result.hasAdvancesSortTimestamp = true;
        result.advancesSortTimestamp_ = value;
        return this;
      }
      public Builder ClearAdvancesSortTimestamp() {
        PrepareBuilder();
        result.hasAdvancesSortTimestamp = false;
        result.advancesSortTimestamp_ = false;
        return this;
      }
      
      public bool HasOtrStatus {
       get { return result.hasOtrStatus; }
      }
      public global::Hangups.Proto.OffTheRecordStatus OtrStatus {
        get { return result.OtrStatus; }
        set { SetOtrStatus(value); }
      }
      public Builder SetOtrStatus(global::Hangups.Proto.OffTheRecordStatus value) {
        PrepareBuilder();
        result.hasOtrStatus = true;
        result.otrStatus_ = value;
        return this;
      }
      public Builder ClearOtrStatus() {
        PrepareBuilder();
        result.hasOtrStatus = false;
        result.otrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasPersisted {
        get { return result.hasPersisted; }
      }
      public bool Persisted {
        get { return result.Persisted; }
        set { SetPersisted(value); }
      }
      public Builder SetPersisted(bool value) {
        PrepareBuilder();
        result.hasPersisted = true;
        result.persisted_ = value;
        return this;
      }
      public Builder ClearPersisted() {
        PrepareBuilder();
        result.hasPersisted = false;
        result.persisted_ = false;
        return this;
      }
      
      public bool HasMediumType {
       get { return result.hasMediumType; }
      }
      public global::Hangups.Proto.DeliveryMedium MediumType {
        get { return result.MediumType; }
        set { SetMediumType(value); }
      }
      public Builder SetMediumType(global::Hangups.Proto.DeliveryMedium value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMediumType = true;
        result.mediumType_ = value;
        return this;
      }
      public Builder SetMediumType(global::Hangups.Proto.DeliveryMedium.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMediumType = true;
        result.mediumType_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMediumType(global::Hangups.Proto.DeliveryMedium value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMediumType &&
            result.mediumType_ != global::Hangups.Proto.DeliveryMedium.DefaultInstance) {
            result.mediumType_ = global::Hangups.Proto.DeliveryMedium.CreateBuilder(result.mediumType_).MergeFrom(value).BuildPartial();
        } else {
          result.mediumType_ = value;
        }
        result.hasMediumType = true;
        return this;
      }
      public Builder ClearMediumType() {
        PrepareBuilder();
        result.hasMediumType = false;
        result.mediumType_ = null;
        return this;
      }
      
      public bool HasEventType {
       get { return result.hasEventType; }
      }
      public global::Hangups.Proto.EventType EventType {
        get { return result.EventType; }
        set { SetEventType(value); }
      }
      public Builder SetEventType(global::Hangups.Proto.EventType value) {
        PrepareBuilder();
        result.hasEventType = true;
        result.eventType_ = value;
        return this;
      }
      public Builder ClearEventType() {
        PrepareBuilder();
        result.hasEventType = false;
        result.eventType_ = global::Hangups.Proto.EventType.EVENT_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasEventVersion {
        get { return result.hasEventVersion; }
      }
      [global::System.CLSCompliant(false)]
      public ulong EventVersion {
        get { return result.EventVersion; }
        set { SetEventVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEventVersion(ulong value) {
        PrepareBuilder();
        result.hasEventVersion = true;
        result.eventVersion_ = value;
        return this;
      }
      public Builder ClearEventVersion() {
        PrepareBuilder();
        result.hasEventVersion = false;
        result.eventVersion_ = 0UL;
        return this;
      }
      
      public bool HasHashModifier {
       get { return result.hasHashModifier; }
      }
      public global::Hangups.Proto.HashModifier HashModifier {
        get { return result.HashModifier; }
        set { SetHashModifier(value); }
      }
      public Builder SetHashModifier(global::Hangups.Proto.HashModifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHashModifier = true;
        result.hashModifier_ = value;
        return this;
      }
      public Builder SetHashModifier(global::Hangups.Proto.HashModifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHashModifier = true;
        result.hashModifier_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHashModifier(global::Hangups.Proto.HashModifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHashModifier &&
            result.hashModifier_ != global::Hangups.Proto.HashModifier.DefaultInstance) {
            result.hashModifier_ = global::Hangups.Proto.HashModifier.CreateBuilder(result.hashModifier_).MergeFrom(value).BuildPartial();
        } else {
          result.hashModifier_ = value;
        }
        result.hasHashModifier = true;
        return this;
      }
      public Builder ClearHashModifier() {
        PrepareBuilder();
        result.hasHashModifier = false;
        result.hashModifier_ = null;
        return this;
      }
    }
    static Event() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserReadState : pb::GeneratedMessage<UserReadState, UserReadState.Builder> {
    private UserReadState() { }
    private static readonly UserReadState defaultInstance = new UserReadState().MakeReadOnly();
    private static readonly string[] _userReadStateFieldNames = new string[] { "latest_read_timestamp", "participant_id" };
    private static readonly uint[] _userReadStateFieldTags = new uint[] { 16, 10 };
    public static UserReadState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserReadState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserReadState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_UserReadState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserReadState, UserReadState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_UserReadState__FieldAccessorTable; }
    }
    
    public const int ParticipantIdFieldNumber = 1;
    private bool hasParticipantId;
    private global::Hangups.Proto.ParticipantId participantId_;
    public bool HasParticipantId {
      get { return hasParticipantId; }
    }
    public global::Hangups.Proto.ParticipantId ParticipantId {
      get { return participantId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int LatestReadTimestampFieldNumber = 2;
    private bool hasLatestReadTimestamp;
    private ulong latestReadTimestamp_;
    public bool HasLatestReadTimestamp {
      get { return hasLatestReadTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong LatestReadTimestamp {
      get { return latestReadTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userReadStateFieldNames;
      if (hasParticipantId) {
        output.WriteMessage(1, field_names[1], ParticipantId);
      }
      if (hasLatestReadTimestamp) {
        output.WriteUInt64(2, field_names[0], LatestReadTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasParticipantId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ParticipantId);
      }
      if (hasLatestReadTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, LatestReadTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserReadState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserReadState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserReadState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserReadState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserReadState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserReadState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserReadState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserReadState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserReadState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserReadState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserReadState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserReadState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserReadState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserReadState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserReadState result;
      
      private UserReadState PrepareBuilder() {
        if (resultIsReadOnly) {
          UserReadState original = result;
          result = new UserReadState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserReadState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.UserReadState.Descriptor; }
      }
      
      public override UserReadState DefaultInstanceForType {
        get { return global::Hangups.Proto.UserReadState.DefaultInstance; }
      }
      
      public override UserReadState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserReadState) {
          return MergeFrom((UserReadState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserReadState other) {
        if (other == global::Hangups.Proto.UserReadState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasParticipantId) {
          MergeParticipantId(other.ParticipantId);
        }
        if (other.HasLatestReadTimestamp) {
          LatestReadTimestamp = other.LatestReadTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userReadStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userReadStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasParticipantId) {
                subBuilder.MergeFrom(ParticipantId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ParticipantId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasLatestReadTimestamp = input.ReadUInt64(ref result.latestReadTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasParticipantId {
       get { return result.hasParticipantId; }
      }
      public global::Hangups.Proto.ParticipantId ParticipantId {
        get { return result.ParticipantId; }
        set { SetParticipantId(value); }
      }
      public Builder SetParticipantId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParticipantId = true;
        result.participantId_ = value;
        return this;
      }
      public Builder SetParticipantId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasParticipantId = true;
        result.participantId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeParticipantId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasParticipantId &&
            result.participantId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.participantId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.participantId_).MergeFrom(value).BuildPartial();
        } else {
          result.participantId_ = value;
        }
        result.hasParticipantId = true;
        return this;
      }
      public Builder ClearParticipantId() {
        PrepareBuilder();
        result.hasParticipantId = false;
        result.participantId_ = null;
        return this;
      }
      
      public bool HasLatestReadTimestamp {
        get { return result.hasLatestReadTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong LatestReadTimestamp {
        get { return result.LatestReadTimestamp; }
        set { SetLatestReadTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLatestReadTimestamp(ulong value) {
        PrepareBuilder();
        result.hasLatestReadTimestamp = true;
        result.latestReadTimestamp_ = value;
        return this;
      }
      public Builder ClearLatestReadTimestamp() {
        PrepareBuilder();
        result.hasLatestReadTimestamp = false;
        result.latestReadTimestamp_ = 0UL;
        return this;
      }
    }
    static UserReadState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeliveryMedium : pb::GeneratedMessage<DeliveryMedium, DeliveryMedium.Builder> {
    private DeliveryMedium() { }
    private static readonly DeliveryMedium defaultInstance = new DeliveryMedium().MakeReadOnly();
    private static readonly string[] _deliveryMediumFieldNames = new string[] { "medium_type", "phone" };
    private static readonly uint[] _deliveryMediumFieldTags = new uint[] { 8, 18 };
    public static DeliveryMedium DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeliveryMedium DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeliveryMedium ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeliveryMedium__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeliveryMedium, DeliveryMedium.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeliveryMedium__FieldAccessorTable; }
    }
    
    public const int MediumTypeFieldNumber = 1;
    private bool hasMediumType;
    private global::Hangups.Proto.DeliveryMediumType mediumType_ = global::Hangups.Proto.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN;
    public bool HasMediumType {
      get { return hasMediumType; }
    }
    public global::Hangups.Proto.DeliveryMediumType MediumType {
      get { return mediumType_; }
    }
    
    public const int PhoneFieldNumber = 2;
    private bool hasPhone;
    private global::Hangups.Proto.Phone phone_;
    public bool HasPhone {
      get { return hasPhone; }
    }
    public global::Hangups.Proto.Phone Phone {
      get { return phone_ ?? global::Hangups.Proto.Phone.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deliveryMediumFieldNames;
      if (hasMediumType) {
        output.WriteEnum(1, field_names[0], (int) MediumType, MediumType);
      }
      if (hasPhone) {
        output.WriteMessage(2, field_names[1], Phone);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMediumType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) MediumType);
      }
      if (hasPhone) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Phone);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeliveryMedium ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeliveryMedium ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeliveryMedium ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeliveryMedium ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeliveryMedium MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeliveryMedium prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeliveryMedium, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeliveryMedium cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeliveryMedium result;
      
      private DeliveryMedium PrepareBuilder() {
        if (resultIsReadOnly) {
          DeliveryMedium original = result;
          result = new DeliveryMedium();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeliveryMedium MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeliveryMedium.Descriptor; }
      }
      
      public override DeliveryMedium DefaultInstanceForType {
        get { return global::Hangups.Proto.DeliveryMedium.DefaultInstance; }
      }
      
      public override DeliveryMedium BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeliveryMedium) {
          return MergeFrom((DeliveryMedium) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeliveryMedium other) {
        if (other == global::Hangups.Proto.DeliveryMedium.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMediumType) {
          MediumType = other.MediumType;
        }
        if (other.HasPhone) {
          MergePhone(other.Phone);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deliveryMediumFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deliveryMediumFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.mediumType_, out unknown)) {
                result.hasMediumType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::Hangups.Proto.Phone.Builder subBuilder = global::Hangups.Proto.Phone.CreateBuilder();
              if (result.hasPhone) {
                subBuilder.MergeFrom(Phone);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Phone = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMediumType {
       get { return result.hasMediumType; }
      }
      public global::Hangups.Proto.DeliveryMediumType MediumType {
        get { return result.MediumType; }
        set { SetMediumType(value); }
      }
      public Builder SetMediumType(global::Hangups.Proto.DeliveryMediumType value) {
        PrepareBuilder();
        result.hasMediumType = true;
        result.mediumType_ = value;
        return this;
      }
      public Builder ClearMediumType() {
        PrepareBuilder();
        result.hasMediumType = false;
        result.mediumType_ = global::Hangups.Proto.DeliveryMediumType.DELIVERY_MEDIUM_UNKNOWN;
        return this;
      }
      
      public bool HasPhone {
       get { return result.hasPhone; }
      }
      public global::Hangups.Proto.Phone Phone {
        get { return result.Phone; }
        set { SetPhone(value); }
      }
      public Builder SetPhone(global::Hangups.Proto.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhone = true;
        result.phone_ = value;
        return this;
      }
      public Builder SetPhone(global::Hangups.Proto.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPhone = true;
        result.phone_ = builderForValue.Build();
        return this;
      }
      public Builder MergePhone(global::Hangups.Proto.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPhone &&
            result.phone_ != global::Hangups.Proto.Phone.DefaultInstance) {
            result.phone_ = global::Hangups.Proto.Phone.CreateBuilder(result.phone_).MergeFrom(value).BuildPartial();
        } else {
          result.phone_ = value;
        }
        result.hasPhone = true;
        return this;
      }
      public Builder ClearPhone() {
        PrepareBuilder();
        result.hasPhone = false;
        result.phone_ = null;
        return this;
      }
    }
    static DeliveryMedium() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeliveryMediumOption : pb::GeneratedMessage<DeliveryMediumOption, DeliveryMediumOption.Builder> {
    private DeliveryMediumOption() { }
    private static readonly DeliveryMediumOption defaultInstance = new DeliveryMediumOption().MakeReadOnly();
    private static readonly string[] _deliveryMediumOptionFieldNames = new string[] { "current_default", "delivery_medium" };
    private static readonly uint[] _deliveryMediumOptionFieldTags = new uint[] { 16, 10 };
    public static DeliveryMediumOption DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeliveryMediumOption DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeliveryMediumOption ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeliveryMediumOption__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeliveryMediumOption, DeliveryMediumOption.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeliveryMediumOption__FieldAccessorTable; }
    }
    
    public const int DeliveryMediumFieldNumber = 1;
    private bool hasDeliveryMedium;
    private global::Hangups.Proto.DeliveryMedium deliveryMedium_;
    public bool HasDeliveryMedium {
      get { return hasDeliveryMedium; }
    }
    public global::Hangups.Proto.DeliveryMedium DeliveryMedium {
      get { return deliveryMedium_ ?? global::Hangups.Proto.DeliveryMedium.DefaultInstance; }
    }
    
    public const int CurrentDefaultFieldNumber = 2;
    private bool hasCurrentDefault;
    private bool currentDefault_;
    public bool HasCurrentDefault {
      get { return hasCurrentDefault; }
    }
    public bool CurrentDefault {
      get { return currentDefault_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deliveryMediumOptionFieldNames;
      if (hasDeliveryMedium) {
        output.WriteMessage(1, field_names[1], DeliveryMedium);
      }
      if (hasCurrentDefault) {
        output.WriteBool(2, field_names[0], CurrentDefault);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDeliveryMedium) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, DeliveryMedium);
      }
      if (hasCurrentDefault) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, CurrentDefault);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeliveryMediumOption ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeliveryMediumOption ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeliveryMediumOption ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeliveryMediumOption ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeliveryMediumOption MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeliveryMediumOption prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeliveryMediumOption, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeliveryMediumOption cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeliveryMediumOption result;
      
      private DeliveryMediumOption PrepareBuilder() {
        if (resultIsReadOnly) {
          DeliveryMediumOption original = result;
          result = new DeliveryMediumOption();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeliveryMediumOption MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeliveryMediumOption.Descriptor; }
      }
      
      public override DeliveryMediumOption DefaultInstanceForType {
        get { return global::Hangups.Proto.DeliveryMediumOption.DefaultInstance; }
      }
      
      public override DeliveryMediumOption BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeliveryMediumOption) {
          return MergeFrom((DeliveryMediumOption) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeliveryMediumOption other) {
        if (other == global::Hangups.Proto.DeliveryMediumOption.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDeliveryMedium) {
          MergeDeliveryMedium(other.DeliveryMedium);
        }
        if (other.HasCurrentDefault) {
          CurrentDefault = other.CurrentDefault;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deliveryMediumOptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deliveryMediumOptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.DeliveryMedium.Builder subBuilder = global::Hangups.Proto.DeliveryMedium.CreateBuilder();
              if (result.hasDeliveryMedium) {
                subBuilder.MergeFrom(DeliveryMedium);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DeliveryMedium = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCurrentDefault = input.ReadBool(ref result.currentDefault_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDeliveryMedium {
       get { return result.hasDeliveryMedium; }
      }
      public global::Hangups.Proto.DeliveryMedium DeliveryMedium {
        get { return result.DeliveryMedium; }
        set { SetDeliveryMedium(value); }
      }
      public Builder SetDeliveryMedium(global::Hangups.Proto.DeliveryMedium value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeliveryMedium = true;
        result.deliveryMedium_ = value;
        return this;
      }
      public Builder SetDeliveryMedium(global::Hangups.Proto.DeliveryMedium.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDeliveryMedium = true;
        result.deliveryMedium_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDeliveryMedium(global::Hangups.Proto.DeliveryMedium value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDeliveryMedium &&
            result.deliveryMedium_ != global::Hangups.Proto.DeliveryMedium.DefaultInstance) {
            result.deliveryMedium_ = global::Hangups.Proto.DeliveryMedium.CreateBuilder(result.deliveryMedium_).MergeFrom(value).BuildPartial();
        } else {
          result.deliveryMedium_ = value;
        }
        result.hasDeliveryMedium = true;
        return this;
      }
      public Builder ClearDeliveryMedium() {
        PrepareBuilder();
        result.hasDeliveryMedium = false;
        result.deliveryMedium_ = null;
        return this;
      }
      
      public bool HasCurrentDefault {
        get { return result.hasCurrentDefault; }
      }
      public bool CurrentDefault {
        get { return result.CurrentDefault; }
        set { SetCurrentDefault(value); }
      }
      public Builder SetCurrentDefault(bool value) {
        PrepareBuilder();
        result.hasCurrentDefault = true;
        result.currentDefault_ = value;
        return this;
      }
      public Builder ClearCurrentDefault() {
        PrepareBuilder();
        result.hasCurrentDefault = false;
        result.currentDefault_ = false;
        return this;
      }
    }
    static DeliveryMediumOption() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserConversationState : pb::GeneratedMessage<UserConversationState, UserConversationState.Builder> {
    private UserConversationState() { }
    private static readonly UserConversationState defaultInstance = new UserConversationState().MakeReadOnly();
    private static readonly string[] _userConversationStateFieldNames = new string[] { "active_timestamp", "client_generated_id", "delivery_medium_option", "invite_timestamp", "inviter_id", "notification_level", "self_read_state", "sort_timestamp", "status", "view" };
    private static readonly uint[] _userConversationStateFieldTags = new uint[] { 112, 18, 138, 96, 90, 72, 58, 104, 64, 80 };
    public static UserConversationState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserConversationState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserConversationState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_UserConversationState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserConversationState, UserConversationState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_UserConversationState__FieldAccessorTable; }
    }
    
    public const int ClientGeneratedIdFieldNumber = 2;
    private bool hasClientGeneratedId;
    private string clientGeneratedId_ = "";
    public bool HasClientGeneratedId {
      get { return hasClientGeneratedId; }
    }
    public string ClientGeneratedId {
      get { return clientGeneratedId_; }
    }
    
    public const int SelfReadStateFieldNumber = 7;
    private bool hasSelfReadState;
    private global::Hangups.Proto.UserReadState selfReadState_;
    public bool HasSelfReadState {
      get { return hasSelfReadState; }
    }
    public global::Hangups.Proto.UserReadState SelfReadState {
      get { return selfReadState_ ?? global::Hangups.Proto.UserReadState.DefaultInstance; }
    }
    
    public const int StatusFieldNumber = 8;
    private bool hasStatus;
    private global::Hangups.Proto.ConversationStatus status_ = global::Hangups.Proto.ConversationStatus.CONVERSATION_STATUS_UNKNOWN;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::Hangups.Proto.ConversationStatus Status {
      get { return status_; }
    }
    
    public const int NotificationLevelFieldNumber = 9;
    private bool hasNotificationLevel;
    private global::Hangups.Proto.NotificationLevel notificationLevel_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public bool HasNotificationLevel {
      get { return hasNotificationLevel; }
    }
    public global::Hangups.Proto.NotificationLevel NotificationLevel {
      get { return notificationLevel_; }
    }
    
    public const int ViewFieldNumber = 10;
    private pbc::PopsicleList<global::Hangups.Proto.ConversationView> view_ = new pbc::PopsicleList<global::Hangups.Proto.ConversationView>();
    public scg::IList<global::Hangups.Proto.ConversationView> ViewList {
      get { return pbc::Lists.AsReadOnly(view_); }
    }
    public int ViewCount {
      get { return view_.Count; }
    }
    public global::Hangups.Proto.ConversationView GetView(int index) {
      return view_[index];
    }
    
    public const int InviterIdFieldNumber = 11;
    private bool hasInviterId;
    private global::Hangups.Proto.ParticipantId inviterId_;
    public bool HasInviterId {
      get { return hasInviterId; }
    }
    public global::Hangups.Proto.ParticipantId InviterId {
      get { return inviterId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int InviteTimestampFieldNumber = 12;
    private bool hasInviteTimestamp;
    private ulong inviteTimestamp_;
    public bool HasInviteTimestamp {
      get { return hasInviteTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong InviteTimestamp {
      get { return inviteTimestamp_; }
    }
    
    public const int SortTimestampFieldNumber = 13;
    private bool hasSortTimestamp;
    private ulong sortTimestamp_;
    public bool HasSortTimestamp {
      get { return hasSortTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SortTimestamp {
      get { return sortTimestamp_; }
    }
    
    public const int ActiveTimestampFieldNumber = 14;
    private bool hasActiveTimestamp;
    private ulong activeTimestamp_;
    public bool HasActiveTimestamp {
      get { return hasActiveTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ActiveTimestamp {
      get { return activeTimestamp_; }
    }
    
    public const int DeliveryMediumOptionFieldNumber = 17;
    private pbc::PopsicleList<global::Hangups.Proto.DeliveryMediumOption> deliveryMediumOption_ = new pbc::PopsicleList<global::Hangups.Proto.DeliveryMediumOption>();
    public scg::IList<global::Hangups.Proto.DeliveryMediumOption> DeliveryMediumOptionList {
      get { return deliveryMediumOption_; }
    }
    public int DeliveryMediumOptionCount {
      get { return deliveryMediumOption_.Count; }
    }
    public global::Hangups.Proto.DeliveryMediumOption GetDeliveryMediumOption(int index) {
      return deliveryMediumOption_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userConversationStateFieldNames;
      if (hasClientGeneratedId) {
        output.WriteString(2, field_names[1], ClientGeneratedId);
      }
      if (hasSelfReadState) {
        output.WriteMessage(7, field_names[6], SelfReadState);
      }
      if (hasStatus) {
        output.WriteEnum(8, field_names[8], (int) Status, Status);
      }
      if (hasNotificationLevel) {
        output.WriteEnum(9, field_names[5], (int) NotificationLevel, NotificationLevel);
      }
      if (view_.Count > 0) {
        output.WriteEnumArray(10, field_names[9], view_);
      }
      if (hasInviterId) {
        output.WriteMessage(11, field_names[4], InviterId);
      }
      if (hasInviteTimestamp) {
        output.WriteUInt64(12, field_names[3], InviteTimestamp);
      }
      if (hasSortTimestamp) {
        output.WriteUInt64(13, field_names[7], SortTimestamp);
      }
      if (hasActiveTimestamp) {
        output.WriteUInt64(14, field_names[0], ActiveTimestamp);
      }
      if (deliveryMediumOption_.Count > 0) {
        output.WriteMessageArray(17, field_names[2], deliveryMediumOption_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientGeneratedId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientGeneratedId);
      }
      if (hasSelfReadState) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, SelfReadState);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(8, (int) Status);
      }
      if (hasNotificationLevel) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) NotificationLevel);
      }
      {
        int dataSize = 0;
        if (view_.Count > 0) {
          foreach (global::Hangups.Proto.ConversationView element in view_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 1 * view_.Count;
        }
      }
      if (hasInviterId) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, InviterId);
      }
      if (hasInviteTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(12, InviteTimestamp);
      }
      if (hasSortTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(13, SortTimestamp);
      }
      if (hasActiveTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(14, ActiveTimestamp);
      }
      foreach (global::Hangups.Proto.DeliveryMediumOption element in DeliveryMediumOptionList) {
        size += pb::CodedOutputStream.ComputeMessageSize(17, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserConversationState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserConversationState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserConversationState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserConversationState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserConversationState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserConversationState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserConversationState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserConversationState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserConversationState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserConversationState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserConversationState MakeReadOnly() {
      view_.MakeReadOnly();
      deliveryMediumOption_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserConversationState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserConversationState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserConversationState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserConversationState result;
      
      private UserConversationState PrepareBuilder() {
        if (resultIsReadOnly) {
          UserConversationState original = result;
          result = new UserConversationState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserConversationState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.UserConversationState.Descriptor; }
      }
      
      public override UserConversationState DefaultInstanceForType {
        get { return global::Hangups.Proto.UserConversationState.DefaultInstance; }
      }
      
      public override UserConversationState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserConversationState) {
          return MergeFrom((UserConversationState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserConversationState other) {
        if (other == global::Hangups.Proto.UserConversationState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClientGeneratedId) {
          ClientGeneratedId = other.ClientGeneratedId;
        }
        if (other.HasSelfReadState) {
          MergeSelfReadState(other.SelfReadState);
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasNotificationLevel) {
          NotificationLevel = other.NotificationLevel;
        }
        if (other.view_.Count != 0) {
          result.view_.Add(other.view_);
        }
        if (other.HasInviterId) {
          MergeInviterId(other.InviterId);
        }
        if (other.HasInviteTimestamp) {
          InviteTimestamp = other.InviteTimestamp;
        }
        if (other.HasSortTimestamp) {
          SortTimestamp = other.SortTimestamp;
        }
        if (other.HasActiveTimestamp) {
          ActiveTimestamp = other.ActiveTimestamp;
        }
        if (other.deliveryMediumOption_.Count != 0) {
          result.deliveryMediumOption_.Add(other.deliveryMediumOption_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userConversationStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userConversationStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              result.hasClientGeneratedId = input.ReadString(ref result.clientGeneratedId_);
              break;
            }
            case 58: {
              global::Hangups.Proto.UserReadState.Builder subBuilder = global::Hangups.Proto.UserReadState.CreateBuilder();
              if (result.hasSelfReadState) {
                subBuilder.MergeFrom(SelfReadState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SelfReadState = subBuilder.BuildPartial();
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.notificationLevel_, out unknown)) {
                result.hasNotificationLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
            case 82:
            case 80: {
              scg::ICollection<object> unknownItems;
              input.ReadEnumArray<global::Hangups.Proto.ConversationView>(tag, field_name, result.view_, out unknownItems);
              if (unknownItems != null) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                foreach (object rawValue in unknownItems)
                  if (rawValue is int)
                    unknownFields.MergeVarintField(10, (ulong)(int)rawValue);
              }
              break;
            }
            case 90: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasInviterId) {
                subBuilder.MergeFrom(InviterId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviterId = subBuilder.BuildPartial();
              break;
            }
            case 96: {
              result.hasInviteTimestamp = input.ReadUInt64(ref result.inviteTimestamp_);
              break;
            }
            case 104: {
              result.hasSortTimestamp = input.ReadUInt64(ref result.sortTimestamp_);
              break;
            }
            case 112: {
              result.hasActiveTimestamp = input.ReadUInt64(ref result.activeTimestamp_);
              break;
            }
            case 138: {
              input.ReadMessageArray(tag, field_name, result.deliveryMediumOption_, global::Hangups.Proto.DeliveryMediumOption.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClientGeneratedId {
        get { return result.hasClientGeneratedId; }
      }
      public string ClientGeneratedId {
        get { return result.ClientGeneratedId; }
        set { SetClientGeneratedId(value); }
      }
      public Builder SetClientGeneratedId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientGeneratedId = true;
        result.clientGeneratedId_ = value;
        return this;
      }
      public Builder ClearClientGeneratedId() {
        PrepareBuilder();
        result.hasClientGeneratedId = false;
        result.clientGeneratedId_ = "";
        return this;
      }
      
      public bool HasSelfReadState {
       get { return result.hasSelfReadState; }
      }
      public global::Hangups.Proto.UserReadState SelfReadState {
        get { return result.SelfReadState; }
        set { SetSelfReadState(value); }
      }
      public Builder SetSelfReadState(global::Hangups.Proto.UserReadState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSelfReadState = true;
        result.selfReadState_ = value;
        return this;
      }
      public Builder SetSelfReadState(global::Hangups.Proto.UserReadState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSelfReadState = true;
        result.selfReadState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSelfReadState(global::Hangups.Proto.UserReadState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSelfReadState &&
            result.selfReadState_ != global::Hangups.Proto.UserReadState.DefaultInstance) {
            result.selfReadState_ = global::Hangups.Proto.UserReadState.CreateBuilder(result.selfReadState_).MergeFrom(value).BuildPartial();
        } else {
          result.selfReadState_ = value;
        }
        result.hasSelfReadState = true;
        return this;
      }
      public Builder ClearSelfReadState() {
        PrepareBuilder();
        result.hasSelfReadState = false;
        result.selfReadState_ = null;
        return this;
      }
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::Hangups.Proto.ConversationStatus Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::Hangups.Proto.ConversationStatus value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::Hangups.Proto.ConversationStatus.CONVERSATION_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasNotificationLevel {
       get { return result.hasNotificationLevel; }
      }
      public global::Hangups.Proto.NotificationLevel NotificationLevel {
        get { return result.NotificationLevel; }
        set { SetNotificationLevel(value); }
      }
      public Builder SetNotificationLevel(global::Hangups.Proto.NotificationLevel value) {
        PrepareBuilder();
        result.hasNotificationLevel = true;
        result.notificationLevel_ = value;
        return this;
      }
      public Builder ClearNotificationLevel() {
        PrepareBuilder();
        result.hasNotificationLevel = false;
        result.notificationLevel_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ConversationView> ViewList {
        get { return PrepareBuilder().view_; }
      }
      public int ViewCount {
        get { return result.ViewCount; }
      }
      public global::Hangups.Proto.ConversationView GetView(int index) {
        return result.GetView(index);
      }
      public Builder SetView(int index, global::Hangups.Proto.ConversationView value) {
        PrepareBuilder();
        result.view_[index] = value;
        return this;
      }
      public Builder AddView(global::Hangups.Proto.ConversationView value) {
        PrepareBuilder();
        result.view_.Add(value);
        return this;
      }
      public Builder AddRangeView(scg::IEnumerable<global::Hangups.Proto.ConversationView> values) {
        PrepareBuilder();
        result.view_.Add(values);
        return this;
      }
      public Builder ClearView() {
        PrepareBuilder();
        result.view_.Clear();
        return this;
      }
      
      public bool HasInviterId {
       get { return result.hasInviterId; }
      }
      public global::Hangups.Proto.ParticipantId InviterId {
        get { return result.InviterId; }
        set { SetInviterId(value); }
      }
      public Builder SetInviterId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviterId = true;
        result.inviterId_ = value;
        return this;
      }
      public Builder SetInviterId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviterId = true;
        result.inviterId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviterId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviterId &&
            result.inviterId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.inviterId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.inviterId_).MergeFrom(value).BuildPartial();
        } else {
          result.inviterId_ = value;
        }
        result.hasInviterId = true;
        return this;
      }
      public Builder ClearInviterId() {
        PrepareBuilder();
        result.hasInviterId = false;
        result.inviterId_ = null;
        return this;
      }
      
      public bool HasInviteTimestamp {
        get { return result.hasInviteTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong InviteTimestamp {
        get { return result.InviteTimestamp; }
        set { SetInviteTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetInviteTimestamp(ulong value) {
        PrepareBuilder();
        result.hasInviteTimestamp = true;
        result.inviteTimestamp_ = value;
        return this;
      }
      public Builder ClearInviteTimestamp() {
        PrepareBuilder();
        result.hasInviteTimestamp = false;
        result.inviteTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasSortTimestamp {
        get { return result.hasSortTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong SortTimestamp {
        get { return result.SortTimestamp; }
        set { SetSortTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSortTimestamp(ulong value) {
        PrepareBuilder();
        result.hasSortTimestamp = true;
        result.sortTimestamp_ = value;
        return this;
      }
      public Builder ClearSortTimestamp() {
        PrepareBuilder();
        result.hasSortTimestamp = false;
        result.sortTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasActiveTimestamp {
        get { return result.hasActiveTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ActiveTimestamp {
        get { return result.ActiveTimestamp; }
        set { SetActiveTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetActiveTimestamp(ulong value) {
        PrepareBuilder();
        result.hasActiveTimestamp = true;
        result.activeTimestamp_ = value;
        return this;
      }
      public Builder ClearActiveTimestamp() {
        PrepareBuilder();
        result.hasActiveTimestamp = false;
        result.activeTimestamp_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.DeliveryMediumOption> DeliveryMediumOptionList {
        get { return PrepareBuilder().deliveryMediumOption_; }
      }
      public int DeliveryMediumOptionCount {
        get { return result.DeliveryMediumOptionCount; }
      }
      public global::Hangups.Proto.DeliveryMediumOption GetDeliveryMediumOption(int index) {
        return result.GetDeliveryMediumOption(index);
      }
      public Builder SetDeliveryMediumOption(int index, global::Hangups.Proto.DeliveryMediumOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deliveryMediumOption_[index] = value;
        return this;
      }
      public Builder SetDeliveryMediumOption(int index, global::Hangups.Proto.DeliveryMediumOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deliveryMediumOption_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDeliveryMediumOption(global::Hangups.Proto.DeliveryMediumOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.deliveryMediumOption_.Add(value);
        return this;
      }
      public Builder AddDeliveryMediumOption(global::Hangups.Proto.DeliveryMediumOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.deliveryMediumOption_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDeliveryMediumOption(scg::IEnumerable<global::Hangups.Proto.DeliveryMediumOption> values) {
        PrepareBuilder();
        result.deliveryMediumOption_.Add(values);
        return this;
      }
      public Builder ClearDeliveryMediumOption() {
        PrepareBuilder();
        result.deliveryMediumOption_.Clear();
        return this;
      }
    }
    static UserConversationState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationParticipantData : pb::GeneratedMessage<ConversationParticipantData, ConversationParticipantData.Builder> {
    private ConversationParticipantData() { }
    private static readonly ConversationParticipantData defaultInstance = new ConversationParticipantData().MakeReadOnly();
    private static readonly string[] _conversationParticipantDataFieldNames = new string[] { "fallback_name", "id", "invitation_status", "new_invitation_status", "participant_type" };
    private static readonly uint[] _conversationParticipantDataFieldTags = new uint[] { 18, 10, 24, 48, 40 };
    public static ConversationParticipantData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConversationParticipantData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConversationParticipantData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationParticipantData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConversationParticipantData, ConversationParticipantData.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationParticipantData__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private global::Hangups.Proto.ParticipantId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::Hangups.Proto.ParticipantId Id {
      get { return id_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int FallbackNameFieldNumber = 2;
    private bool hasFallbackName;
    private string fallbackName_ = "";
    public bool HasFallbackName {
      get { return hasFallbackName; }
    }
    public string FallbackName {
      get { return fallbackName_; }
    }
    
    public const int InvitationStatusFieldNumber = 3;
    private bool hasInvitationStatus;
    private global::Hangups.Proto.InvitationStatus invitationStatus_ = global::Hangups.Proto.InvitationStatus.INVITATION_STATUS_UNKNOWN;
    public bool HasInvitationStatus {
      get { return hasInvitationStatus; }
    }
    public global::Hangups.Proto.InvitationStatus InvitationStatus {
      get { return invitationStatus_; }
    }
    
    public const int ParticipantTypeFieldNumber = 5;
    private bool hasParticipantType;
    private global::Hangups.Proto.ParticipantType participantType_ = global::Hangups.Proto.ParticipantType.PARTICIPANT_TYPE_UNKNOWN;
    public bool HasParticipantType {
      get { return hasParticipantType; }
    }
    public global::Hangups.Proto.ParticipantType ParticipantType {
      get { return participantType_; }
    }
    
    public const int NewInvitationStatusFieldNumber = 6;
    private bool hasNewInvitationStatus;
    private global::Hangups.Proto.InvitationStatus newInvitationStatus_ = global::Hangups.Proto.InvitationStatus.INVITATION_STATUS_UNKNOWN;
    public bool HasNewInvitationStatus {
      get { return hasNewInvitationStatus; }
    }
    public global::Hangups.Proto.InvitationStatus NewInvitationStatus {
      get { return newInvitationStatus_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationParticipantDataFieldNames;
      if (hasId) {
        output.WriteMessage(1, field_names[1], Id);
      }
      if (hasFallbackName) {
        output.WriteString(2, field_names[0], FallbackName);
      }
      if (hasInvitationStatus) {
        output.WriteEnum(3, field_names[2], (int) InvitationStatus, InvitationStatus);
      }
      if (hasParticipantType) {
        output.WriteEnum(5, field_names[4], (int) ParticipantType, ParticipantType);
      }
      if (hasNewInvitationStatus) {
        output.WriteEnum(6, field_names[3], (int) NewInvitationStatus, NewInvitationStatus);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Id);
      }
      if (hasFallbackName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, FallbackName);
      }
      if (hasInvitationStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) InvitationStatus);
      }
      if (hasParticipantType) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) ParticipantType);
      }
      if (hasNewInvitationStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(6, (int) NewInvitationStatus);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConversationParticipantData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConversationParticipantData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConversationParticipantData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationParticipantData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConversationParticipantData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConversationParticipantData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConversationParticipantData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConversationParticipantData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConversationParticipantData result;
      
      private ConversationParticipantData PrepareBuilder() {
        if (resultIsReadOnly) {
          ConversationParticipantData original = result;
          result = new ConversationParticipantData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConversationParticipantData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConversationParticipantData.Descriptor; }
      }
      
      public override ConversationParticipantData DefaultInstanceForType {
        get { return global::Hangups.Proto.ConversationParticipantData.DefaultInstance; }
      }
      
      public override ConversationParticipantData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConversationParticipantData) {
          return MergeFrom((ConversationParticipantData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConversationParticipantData other) {
        if (other == global::Hangups.Proto.ConversationParticipantData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.HasFallbackName) {
          FallbackName = other.FallbackName;
        }
        if (other.HasInvitationStatus) {
          InvitationStatus = other.InvitationStatus;
        }
        if (other.HasParticipantType) {
          ParticipantType = other.ParticipantType;
        }
        if (other.HasNewInvitationStatus) {
          NewInvitationStatus = other.NewInvitationStatus;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationParticipantDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationParticipantDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasFallbackName = input.ReadString(ref result.fallbackName_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.invitationStatus_, out unknown)) {
                result.hasInvitationStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.participantType_, out unknown)) {
                result.hasParticipantType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.newInvitationStatus_, out unknown)) {
                result.hasNewInvitationStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::Hangups.Proto.ParticipantId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.id_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public bool HasFallbackName {
        get { return result.hasFallbackName; }
      }
      public string FallbackName {
        get { return result.FallbackName; }
        set { SetFallbackName(value); }
      }
      public Builder SetFallbackName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFallbackName = true;
        result.fallbackName_ = value;
        return this;
      }
      public Builder ClearFallbackName() {
        PrepareBuilder();
        result.hasFallbackName = false;
        result.fallbackName_ = "";
        return this;
      }
      
      public bool HasInvitationStatus {
       get { return result.hasInvitationStatus; }
      }
      public global::Hangups.Proto.InvitationStatus InvitationStatus {
        get { return result.InvitationStatus; }
        set { SetInvitationStatus(value); }
      }
      public Builder SetInvitationStatus(global::Hangups.Proto.InvitationStatus value) {
        PrepareBuilder();
        result.hasInvitationStatus = true;
        result.invitationStatus_ = value;
        return this;
      }
      public Builder ClearInvitationStatus() {
        PrepareBuilder();
        result.hasInvitationStatus = false;
        result.invitationStatus_ = global::Hangups.Proto.InvitationStatus.INVITATION_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasParticipantType {
       get { return result.hasParticipantType; }
      }
      public global::Hangups.Proto.ParticipantType ParticipantType {
        get { return result.ParticipantType; }
        set { SetParticipantType(value); }
      }
      public Builder SetParticipantType(global::Hangups.Proto.ParticipantType value) {
        PrepareBuilder();
        result.hasParticipantType = true;
        result.participantType_ = value;
        return this;
      }
      public Builder ClearParticipantType() {
        PrepareBuilder();
        result.hasParticipantType = false;
        result.participantType_ = global::Hangups.Proto.ParticipantType.PARTICIPANT_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasNewInvitationStatus {
       get { return result.hasNewInvitationStatus; }
      }
      public global::Hangups.Proto.InvitationStatus NewInvitationStatus {
        get { return result.NewInvitationStatus; }
        set { SetNewInvitationStatus(value); }
      }
      public Builder SetNewInvitationStatus(global::Hangups.Proto.InvitationStatus value) {
        PrepareBuilder();
        result.hasNewInvitationStatus = true;
        result.newInvitationStatus_ = value;
        return this;
      }
      public Builder ClearNewInvitationStatus() {
        PrepareBuilder();
        result.hasNewInvitationStatus = false;
        result.newInvitationStatus_ = global::Hangups.Proto.InvitationStatus.INVITATION_STATUS_UNKNOWN;
        return this;
      }
    }
    static ConversationParticipantData() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Conversation : pb::GeneratedMessage<Conversation, Conversation.Builder> {
    private Conversation() { }
    private static readonly Conversation defaultInstance = new Conversation().MakeReadOnly();
    private static readonly string[] _conversationFieldNames = new string[] { "conversation_history_supported", "conversation_id", "current_participant", "force_history_state", "has_active_hangout", "name", "network_type", "otr_status", "otr_toggle", "participant_data", "read_state", "self_conversation_state", "type" };
    private static readonly uint[] _conversationFieldTags = new uint[] { 96, 10, 106, 152, 72, 26, 144, 80, 88, 114, 66, 34, 16 };
    public static Conversation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Conversation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Conversation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Conversation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Conversation, Conversation.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Conversation__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::Hangups.Proto.ConversationType type_ = global::Hangups.Proto.ConversationType.CONVERSATION_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.ConversationType Type {
      get { return type_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int SelfConversationStateFieldNumber = 4;
    private bool hasSelfConversationState;
    private global::Hangups.Proto.UserConversationState selfConversationState_;
    public bool HasSelfConversationState {
      get { return hasSelfConversationState; }
    }
    public global::Hangups.Proto.UserConversationState SelfConversationState {
      get { return selfConversationState_ ?? global::Hangups.Proto.UserConversationState.DefaultInstance; }
    }
    
    public const int ReadStateFieldNumber = 8;
    private pbc::PopsicleList<global::Hangups.Proto.UserReadState> readState_ = new pbc::PopsicleList<global::Hangups.Proto.UserReadState>();
    public scg::IList<global::Hangups.Proto.UserReadState> ReadStateList {
      get { return readState_; }
    }
    public int ReadStateCount {
      get { return readState_.Count; }
    }
    public global::Hangups.Proto.UserReadState GetReadState(int index) {
      return readState_[index];
    }
    
    public const int HasActiveHangoutFieldNumber = 9;
    private bool hasHasActiveHangout;
    private bool hasActiveHangout_;
    public bool HasHasActiveHangout {
      get { return hasHasActiveHangout; }
    }
    public bool HasActiveHangout {
      get { return hasActiveHangout_; }
    }
    
    public const int OtrStatusFieldNumber = 10;
    private bool hasOtrStatus;
    private global::Hangups.Proto.OffTheRecordStatus otrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public bool HasOtrStatus {
      get { return hasOtrStatus; }
    }
    public global::Hangups.Proto.OffTheRecordStatus OtrStatus {
      get { return otrStatus_; }
    }
    
    public const int OtrToggleFieldNumber = 11;
    private bool hasOtrToggle;
    private global::Hangups.Proto.OffTheRecordToggle otrToggle_ = global::Hangups.Proto.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
    public bool HasOtrToggle {
      get { return hasOtrToggle; }
    }
    public global::Hangups.Proto.OffTheRecordToggle OtrToggle {
      get { return otrToggle_; }
    }
    
    public const int ConversationHistorySupportedFieldNumber = 12;
    private bool hasConversationHistorySupported;
    private bool conversationHistorySupported_;
    public bool HasConversationHistorySupported {
      get { return hasConversationHistorySupported; }
    }
    public bool ConversationHistorySupported {
      get { return conversationHistorySupported_; }
    }
    
    public const int CurrentParticipantFieldNumber = 13;
    private pbc::PopsicleList<global::Hangups.Proto.ParticipantId> currentParticipant_ = new pbc::PopsicleList<global::Hangups.Proto.ParticipantId>();
    public scg::IList<global::Hangups.Proto.ParticipantId> CurrentParticipantList {
      get { return currentParticipant_; }
    }
    public int CurrentParticipantCount {
      get { return currentParticipant_.Count; }
    }
    public global::Hangups.Proto.ParticipantId GetCurrentParticipant(int index) {
      return currentParticipant_[index];
    }
    
    public const int ParticipantDataFieldNumber = 14;
    private pbc::PopsicleList<global::Hangups.Proto.ConversationParticipantData> participantData_ = new pbc::PopsicleList<global::Hangups.Proto.ConversationParticipantData>();
    public scg::IList<global::Hangups.Proto.ConversationParticipantData> ParticipantDataList {
      get { return participantData_; }
    }
    public int ParticipantDataCount {
      get { return participantData_.Count; }
    }
    public global::Hangups.Proto.ConversationParticipantData GetParticipantData(int index) {
      return participantData_[index];
    }
    
    public const int NetworkTypeFieldNumber = 18;
    private pbc::PopsicleList<global::Hangups.Proto.NetworkType> networkType_ = new pbc::PopsicleList<global::Hangups.Proto.NetworkType>();
    public scg::IList<global::Hangups.Proto.NetworkType> NetworkTypeList {
      get { return pbc::Lists.AsReadOnly(networkType_); }
    }
    public int NetworkTypeCount {
      get { return networkType_.Count; }
    }
    public global::Hangups.Proto.NetworkType GetNetworkType(int index) {
      return networkType_[index];
    }
    
    public const int ForceHistoryStateFieldNumber = 19;
    private bool hasForceHistoryState;
    private global::Hangups.Proto.ForceHistory forceHistoryState_ = global::Hangups.Proto.ForceHistory.FORCE_HISTORY_UNKNOWN;
    public bool HasForceHistoryState {
      get { return hasForceHistoryState; }
    }
    public global::Hangups.Proto.ForceHistory ForceHistoryState {
      get { return forceHistoryState_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[1], ConversationId);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[12], (int) Type, Type);
      }
      if (hasName) {
        output.WriteString(3, field_names[5], Name);
      }
      if (hasSelfConversationState) {
        output.WriteMessage(4, field_names[11], SelfConversationState);
      }
      if (readState_.Count > 0) {
        output.WriteMessageArray(8, field_names[10], readState_);
      }
      if (hasHasActiveHangout) {
        output.WriteBool(9, field_names[4], HasActiveHangout);
      }
      if (hasOtrStatus) {
        output.WriteEnum(10, field_names[7], (int) OtrStatus, OtrStatus);
      }
      if (hasOtrToggle) {
        output.WriteEnum(11, field_names[8], (int) OtrToggle, OtrToggle);
      }
      if (hasConversationHistorySupported) {
        output.WriteBool(12, field_names[0], ConversationHistorySupported);
      }
      if (currentParticipant_.Count > 0) {
        output.WriteMessageArray(13, field_names[2], currentParticipant_);
      }
      if (participantData_.Count > 0) {
        output.WriteMessageArray(14, field_names[9], participantData_);
      }
      if (networkType_.Count > 0) {
        output.WriteEnumArray(18, field_names[6], networkType_);
      }
      if (hasForceHistoryState) {
        output.WriteEnum(19, field_names[3], (int) ForceHistoryState, ForceHistoryState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Name);
      }
      if (hasSelfConversationState) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, SelfConversationState);
      }
      foreach (global::Hangups.Proto.UserReadState element in ReadStateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasHasActiveHangout) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, HasActiveHangout);
      }
      if (hasOtrStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(10, (int) OtrStatus);
      }
      if (hasOtrToggle) {
        size += pb::CodedOutputStream.ComputeEnumSize(11, (int) OtrToggle);
      }
      if (hasConversationHistorySupported) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, ConversationHistorySupported);
      }
      foreach (global::Hangups.Proto.ParticipantId element in CurrentParticipantList) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, element);
      }
      foreach (global::Hangups.Proto.ConversationParticipantData element in ParticipantDataList) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, element);
      }
      {
        int dataSize = 0;
        if (networkType_.Count > 0) {
          foreach (global::Hangups.Proto.NetworkType element in networkType_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 2 * networkType_.Count;
        }
      }
      if (hasForceHistoryState) {
        size += pb::CodedOutputStream.ComputeEnumSize(19, (int) ForceHistoryState);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Conversation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Conversation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Conversation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Conversation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Conversation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Conversation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Conversation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Conversation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Conversation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Conversation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Conversation MakeReadOnly() {
      readState_.MakeReadOnly();
      currentParticipant_.MakeReadOnly();
      participantData_.MakeReadOnly();
      networkType_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Conversation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Conversation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Conversation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Conversation result;
      
      private Conversation PrepareBuilder() {
        if (resultIsReadOnly) {
          Conversation original = result;
          result = new Conversation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Conversation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Conversation.Descriptor; }
      }
      
      public override Conversation DefaultInstanceForType {
        get { return global::Hangups.Proto.Conversation.DefaultInstance; }
      }
      
      public override Conversation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Conversation) {
          return MergeFrom((Conversation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Conversation other) {
        if (other == global::Hangups.Proto.Conversation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasSelfConversationState) {
          MergeSelfConversationState(other.SelfConversationState);
        }
        if (other.readState_.Count != 0) {
          result.readState_.Add(other.readState_);
        }
        if (other.HasHasActiveHangout) {
          HasActiveHangout = other.HasActiveHangout;
        }
        if (other.HasOtrStatus) {
          OtrStatus = other.OtrStatus;
        }
        if (other.HasOtrToggle) {
          OtrToggle = other.OtrToggle;
        }
        if (other.HasConversationHistorySupported) {
          ConversationHistorySupported = other.ConversationHistorySupported;
        }
        if (other.currentParticipant_.Count != 0) {
          result.currentParticipant_.Add(other.currentParticipant_);
        }
        if (other.participantData_.Count != 0) {
          result.participantData_.Add(other.participantData_);
        }
        if (other.networkType_.Count != 0) {
          result.networkType_.Add(other.networkType_);
        }
        if (other.HasForceHistoryState) {
          ForceHistoryState = other.ForceHistoryState;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              global::Hangups.Proto.UserConversationState.Builder subBuilder = global::Hangups.Proto.UserConversationState.CreateBuilder();
              if (result.hasSelfConversationState) {
                subBuilder.MergeFrom(SelfConversationState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SelfConversationState = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.readState_, global::Hangups.Proto.UserReadState.DefaultInstance, extensionRegistry);
              break;
            }
            case 72: {
              result.hasHasActiveHangout = input.ReadBool(ref result.hasActiveHangout_);
              break;
            }
            case 80: {
              object unknown;
              if(input.ReadEnum(ref result.otrStatus_, out unknown)) {
                result.hasOtrStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(10, (ulong)(int)unknown);
              }
              break;
            }
            case 88: {
              object unknown;
              if(input.ReadEnum(ref result.otrToggle_, out unknown)) {
                result.hasOtrToggle = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(11, (ulong)(int)unknown);
              }
              break;
            }
            case 96: {
              result.hasConversationHistorySupported = input.ReadBool(ref result.conversationHistorySupported_);
              break;
            }
            case 106: {
              input.ReadMessageArray(tag, field_name, result.currentParticipant_, global::Hangups.Proto.ParticipantId.DefaultInstance, extensionRegistry);
              break;
            }
            case 114: {
              input.ReadMessageArray(tag, field_name, result.participantData_, global::Hangups.Proto.ConversationParticipantData.DefaultInstance, extensionRegistry);
              break;
            }
            case 146:
            case 144: {
              scg::ICollection<object> unknownItems;
              input.ReadEnumArray<global::Hangups.Proto.NetworkType>(tag, field_name, result.networkType_, out unknownItems);
              if (unknownItems != null) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                foreach (object rawValue in unknownItems)
                  if (rawValue is int)
                    unknownFields.MergeVarintField(18, (ulong)(int)rawValue);
              }
              break;
            }
            case 152: {
              object unknown;
              if(input.ReadEnum(ref result.forceHistoryState_, out unknown)) {
                result.hasForceHistoryState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(19, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.ConversationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.ConversationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.ConversationType.CONVERSATION_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasSelfConversationState {
       get { return result.hasSelfConversationState; }
      }
      public global::Hangups.Proto.UserConversationState SelfConversationState {
        get { return result.SelfConversationState; }
        set { SetSelfConversationState(value); }
      }
      public Builder SetSelfConversationState(global::Hangups.Proto.UserConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSelfConversationState = true;
        result.selfConversationState_ = value;
        return this;
      }
      public Builder SetSelfConversationState(global::Hangups.Proto.UserConversationState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSelfConversationState = true;
        result.selfConversationState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSelfConversationState(global::Hangups.Proto.UserConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSelfConversationState &&
            result.selfConversationState_ != global::Hangups.Proto.UserConversationState.DefaultInstance) {
            result.selfConversationState_ = global::Hangups.Proto.UserConversationState.CreateBuilder(result.selfConversationState_).MergeFrom(value).BuildPartial();
        } else {
          result.selfConversationState_ = value;
        }
        result.hasSelfConversationState = true;
        return this;
      }
      public Builder ClearSelfConversationState() {
        PrepareBuilder();
        result.hasSelfConversationState = false;
        result.selfConversationState_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.UserReadState> ReadStateList {
        get { return PrepareBuilder().readState_; }
      }
      public int ReadStateCount {
        get { return result.ReadStateCount; }
      }
      public global::Hangups.Proto.UserReadState GetReadState(int index) {
        return result.GetReadState(index);
      }
      public Builder SetReadState(int index, global::Hangups.Proto.UserReadState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.readState_[index] = value;
        return this;
      }
      public Builder SetReadState(int index, global::Hangups.Proto.UserReadState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.readState_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddReadState(global::Hangups.Proto.UserReadState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.readState_.Add(value);
        return this;
      }
      public Builder AddReadState(global::Hangups.Proto.UserReadState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.readState_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeReadState(scg::IEnumerable<global::Hangups.Proto.UserReadState> values) {
        PrepareBuilder();
        result.readState_.Add(values);
        return this;
      }
      public Builder ClearReadState() {
        PrepareBuilder();
        result.readState_.Clear();
        return this;
      }
      
      public bool HasHasActiveHangout {
        get { return result.hasHasActiveHangout; }
      }
      public bool HasActiveHangout {
        get { return result.HasActiveHangout; }
        set { SetHasActiveHangout(value); }
      }
      public Builder SetHasActiveHangout(bool value) {
        PrepareBuilder();
        result.hasHasActiveHangout = true;
        result.hasActiveHangout_ = value;
        return this;
      }
      public Builder ClearHasActiveHangout() {
        PrepareBuilder();
        result.hasHasActiveHangout = false;
        result.hasActiveHangout_ = false;
        return this;
      }
      
      public bool HasOtrStatus {
       get { return result.hasOtrStatus; }
      }
      public global::Hangups.Proto.OffTheRecordStatus OtrStatus {
        get { return result.OtrStatus; }
        set { SetOtrStatus(value); }
      }
      public Builder SetOtrStatus(global::Hangups.Proto.OffTheRecordStatus value) {
        PrepareBuilder();
        result.hasOtrStatus = true;
        result.otrStatus_ = value;
        return this;
      }
      public Builder ClearOtrStatus() {
        PrepareBuilder();
        result.hasOtrStatus = false;
        result.otrStatus_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasOtrToggle {
       get { return result.hasOtrToggle; }
      }
      public global::Hangups.Proto.OffTheRecordToggle OtrToggle {
        get { return result.OtrToggle; }
        set { SetOtrToggle(value); }
      }
      public Builder SetOtrToggle(global::Hangups.Proto.OffTheRecordToggle value) {
        PrepareBuilder();
        result.hasOtrToggle = true;
        result.otrToggle_ = value;
        return this;
      }
      public Builder ClearOtrToggle() {
        PrepareBuilder();
        result.hasOtrToggle = false;
        result.otrToggle_ = global::Hangups.Proto.OffTheRecordToggle.OFF_THE_RECORD_TOGGLE_UNKNOWN;
        return this;
      }
      
      public bool HasConversationHistorySupported {
        get { return result.hasConversationHistorySupported; }
      }
      public bool ConversationHistorySupported {
        get { return result.ConversationHistorySupported; }
        set { SetConversationHistorySupported(value); }
      }
      public Builder SetConversationHistorySupported(bool value) {
        PrepareBuilder();
        result.hasConversationHistorySupported = true;
        result.conversationHistorySupported_ = value;
        return this;
      }
      public Builder ClearConversationHistorySupported() {
        PrepareBuilder();
        result.hasConversationHistorySupported = false;
        result.conversationHistorySupported_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ParticipantId> CurrentParticipantList {
        get { return PrepareBuilder().currentParticipant_; }
      }
      public int CurrentParticipantCount {
        get { return result.CurrentParticipantCount; }
      }
      public global::Hangups.Proto.ParticipantId GetCurrentParticipant(int index) {
        return result.GetCurrentParticipant(index);
      }
      public Builder SetCurrentParticipant(int index, global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.currentParticipant_[index] = value;
        return this;
      }
      public Builder SetCurrentParticipant(int index, global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.currentParticipant_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCurrentParticipant(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.currentParticipant_.Add(value);
        return this;
      }
      public Builder AddCurrentParticipant(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.currentParticipant_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCurrentParticipant(scg::IEnumerable<global::Hangups.Proto.ParticipantId> values) {
        PrepareBuilder();
        result.currentParticipant_.Add(values);
        return this;
      }
      public Builder ClearCurrentParticipant() {
        PrepareBuilder();
        result.currentParticipant_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ConversationParticipantData> ParticipantDataList {
        get { return PrepareBuilder().participantData_; }
      }
      public int ParticipantDataCount {
        get { return result.ParticipantDataCount; }
      }
      public global::Hangups.Proto.ConversationParticipantData GetParticipantData(int index) {
        return result.GetParticipantData(index);
      }
      public Builder SetParticipantData(int index, global::Hangups.Proto.ConversationParticipantData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantData_[index] = value;
        return this;
      }
      public Builder SetParticipantData(int index, global::Hangups.Proto.ConversationParticipantData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantData_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParticipantData(global::Hangups.Proto.ConversationParticipantData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantData_.Add(value);
        return this;
      }
      public Builder AddParticipantData(global::Hangups.Proto.ConversationParticipantData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantData_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParticipantData(scg::IEnumerable<global::Hangups.Proto.ConversationParticipantData> values) {
        PrepareBuilder();
        result.participantData_.Add(values);
        return this;
      }
      public Builder ClearParticipantData() {
        PrepareBuilder();
        result.participantData_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.NetworkType> NetworkTypeList {
        get { return PrepareBuilder().networkType_; }
      }
      public int NetworkTypeCount {
        get { return result.NetworkTypeCount; }
      }
      public global::Hangups.Proto.NetworkType GetNetworkType(int index) {
        return result.GetNetworkType(index);
      }
      public Builder SetNetworkType(int index, global::Hangups.Proto.NetworkType value) {
        PrepareBuilder();
        result.networkType_[index] = value;
        return this;
      }
      public Builder AddNetworkType(global::Hangups.Proto.NetworkType value) {
        PrepareBuilder();
        result.networkType_.Add(value);
        return this;
      }
      public Builder AddRangeNetworkType(scg::IEnumerable<global::Hangups.Proto.NetworkType> values) {
        PrepareBuilder();
        result.networkType_.Add(values);
        return this;
      }
      public Builder ClearNetworkType() {
        PrepareBuilder();
        result.networkType_.Clear();
        return this;
      }
      
      public bool HasForceHistoryState {
       get { return result.hasForceHistoryState; }
      }
      public global::Hangups.Proto.ForceHistory ForceHistoryState {
        get { return result.ForceHistoryState; }
        set { SetForceHistoryState(value); }
      }
      public Builder SetForceHistoryState(global::Hangups.Proto.ForceHistory value) {
        PrepareBuilder();
        result.hasForceHistoryState = true;
        result.forceHistoryState_ = value;
        return this;
      }
      public Builder ClearForceHistoryState() {
        PrepareBuilder();
        result.hasForceHistoryState = false;
        result.forceHistoryState_ = global::Hangups.Proto.ForceHistory.FORCE_HISTORY_UNKNOWN;
        return this;
      }
    }
    static Conversation() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEgg : pb::GeneratedMessage<EasterEgg, EasterEgg.Builder> {
    private EasterEgg() { }
    private static readonly EasterEgg defaultInstance = new EasterEgg().MakeReadOnly();
    private static readonly string[] _easterEggFieldNames = new string[] { "message" };
    private static readonly uint[] _easterEggFieldTags = new uint[] { 10 };
    public static EasterEgg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EasterEgg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EasterEgg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEgg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EasterEgg, EasterEgg.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEgg__FieldAccessorTable; }
    }
    
    public const int MessageFieldNumber = 1;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _easterEggFieldNames;
      if (hasMessage) {
        output.WriteString(1, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Message);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EasterEgg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEgg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEgg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEgg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEgg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEgg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EasterEgg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EasterEgg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EasterEgg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEgg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EasterEgg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EasterEgg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EasterEgg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EasterEgg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EasterEgg result;
      
      private EasterEgg PrepareBuilder() {
        if (resultIsReadOnly) {
          EasterEgg original = result;
          result = new EasterEgg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EasterEgg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EasterEgg.Descriptor; }
      }
      
      public override EasterEgg DefaultInstanceForType {
        get { return global::Hangups.Proto.EasterEgg.DefaultInstance; }
      }
      
      public override EasterEgg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EasterEgg) {
          return MergeFrom((EasterEgg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EasterEgg other) {
        if (other == global::Hangups.Proto.EasterEgg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_easterEggFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _easterEggFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static EasterEgg() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BlockStateChange : pb::GeneratedMessage<BlockStateChange, BlockStateChange.Builder> {
    private BlockStateChange() { }
    private static readonly BlockStateChange defaultInstance = new BlockStateChange().MakeReadOnly();
    private static readonly string[] _blockStateChangeFieldNames = new string[] { "new_block_state", "participant_id" };
    private static readonly uint[] _blockStateChangeFieldTags = new uint[] { 16, 10 };
    public static BlockStateChange DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockStateChange DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BlockStateChange ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_BlockStateChange__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockStateChange, BlockStateChange.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_BlockStateChange__FieldAccessorTable; }
    }
    
    public const int ParticipantIdFieldNumber = 1;
    private bool hasParticipantId;
    private global::Hangups.Proto.ParticipantId participantId_;
    public bool HasParticipantId {
      get { return hasParticipantId; }
    }
    public global::Hangups.Proto.ParticipantId ParticipantId {
      get { return participantId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int NewBlockStateFieldNumber = 2;
    private bool hasNewBlockState;
    private global::Hangups.Proto.BlockState newBlockState_ = global::Hangups.Proto.BlockState.BLOCK_STATE_UNKNOWN;
    public bool HasNewBlockState {
      get { return hasNewBlockState; }
    }
    public global::Hangups.Proto.BlockState NewBlockState {
      get { return newBlockState_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _blockStateChangeFieldNames;
      if (hasParticipantId) {
        output.WriteMessage(1, field_names[1], ParticipantId);
      }
      if (hasNewBlockState) {
        output.WriteEnum(2, field_names[0], (int) NewBlockState, NewBlockState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasParticipantId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ParticipantId);
      }
      if (hasNewBlockState) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) NewBlockState);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BlockStateChange ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockStateChange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockStateChange ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockStateChange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockStateChange ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockStateChange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockStateChange ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockStateChange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockStateChange ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockStateChange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BlockStateChange MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockStateChange prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockStateChange, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BlockStateChange cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BlockStateChange result;
      
      private BlockStateChange PrepareBuilder() {
        if (resultIsReadOnly) {
          BlockStateChange original = result;
          result = new BlockStateChange();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BlockStateChange MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.BlockStateChange.Descriptor; }
      }
      
      public override BlockStateChange DefaultInstanceForType {
        get { return global::Hangups.Proto.BlockStateChange.DefaultInstance; }
      }
      
      public override BlockStateChange BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockStateChange) {
          return MergeFrom((BlockStateChange) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockStateChange other) {
        if (other == global::Hangups.Proto.BlockStateChange.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasParticipantId) {
          MergeParticipantId(other.ParticipantId);
        }
        if (other.HasNewBlockState) {
          NewBlockState = other.NewBlockState;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockStateChangeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockStateChangeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasParticipantId) {
                subBuilder.MergeFrom(ParticipantId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ParticipantId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.newBlockState_, out unknown)) {
                result.hasNewBlockState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasParticipantId {
       get { return result.hasParticipantId; }
      }
      public global::Hangups.Proto.ParticipantId ParticipantId {
        get { return result.ParticipantId; }
        set { SetParticipantId(value); }
      }
      public Builder SetParticipantId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParticipantId = true;
        result.participantId_ = value;
        return this;
      }
      public Builder SetParticipantId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasParticipantId = true;
        result.participantId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeParticipantId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasParticipantId &&
            result.participantId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.participantId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.participantId_).MergeFrom(value).BuildPartial();
        } else {
          result.participantId_ = value;
        }
        result.hasParticipantId = true;
        return this;
      }
      public Builder ClearParticipantId() {
        PrepareBuilder();
        result.hasParticipantId = false;
        result.participantId_ = null;
        return this;
      }
      
      public bool HasNewBlockState {
       get { return result.hasNewBlockState; }
      }
      public global::Hangups.Proto.BlockState NewBlockState {
        get { return result.NewBlockState; }
        set { SetNewBlockState(value); }
      }
      public Builder SetNewBlockState(global::Hangups.Proto.BlockState value) {
        PrepareBuilder();
        result.hasNewBlockState = true;
        result.newBlockState_ = value;
        return this;
      }
      public Builder ClearNewBlockState() {
        PrepareBuilder();
        result.hasNewBlockState = false;
        result.newBlockState_ = global::Hangups.Proto.BlockState.BLOCK_STATE_UNKNOWN;
        return this;
      }
    }
    static BlockStateChange() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Photo : pb::GeneratedMessage<Photo, Photo.Builder> {
    private Photo() { }
    private static readonly Photo defaultInstance = new Photo().MakeReadOnly();
    private static readonly string[] _photoFieldNames = new string[] { "delete_albumless_source_photo", "is_custom_user_id", "photo_id", "user_id" };
    private static readonly uint[] _photoFieldTags = new uint[] { 16, 32, 10, 26 };
    public static Photo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Photo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Photo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Photo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Photo, Photo.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Photo__FieldAccessorTable; }
    }
    
    public const int PhotoIdFieldNumber = 1;
    private bool hasPhotoId;
    private string photoId_ = "";
    public bool HasPhotoId {
      get { return hasPhotoId; }
    }
    public string PhotoId {
      get { return photoId_; }
    }
    
    public const int DeleteAlbumlessSourcePhotoFieldNumber = 2;
    private bool hasDeleteAlbumlessSourcePhoto;
    private bool deleteAlbumlessSourcePhoto_;
    public bool HasDeleteAlbumlessSourcePhoto {
      get { return hasDeleteAlbumlessSourcePhoto; }
    }
    public bool DeleteAlbumlessSourcePhoto {
      get { return deleteAlbumlessSourcePhoto_; }
    }
    
    public const int UserIdFieldNumber = 3;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int IsCustomUserIdFieldNumber = 4;
    private bool hasIsCustomUserId;
    private bool isCustomUserId_;
    public bool HasIsCustomUserId {
      get { return hasIsCustomUserId; }
    }
    public bool IsCustomUserId {
      get { return isCustomUserId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _photoFieldNames;
      if (hasPhotoId) {
        output.WriteString(1, field_names[2], PhotoId);
      }
      if (hasDeleteAlbumlessSourcePhoto) {
        output.WriteBool(2, field_names[0], DeleteAlbumlessSourcePhoto);
      }
      if (hasUserId) {
        output.WriteString(3, field_names[3], UserId);
      }
      if (hasIsCustomUserId) {
        output.WriteBool(4, field_names[1], IsCustomUserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPhotoId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, PhotoId);
      }
      if (hasDeleteAlbumlessSourcePhoto) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, DeleteAlbumlessSourcePhoto);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, UserId);
      }
      if (hasIsCustomUserId) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsCustomUserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Photo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Photo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Photo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Photo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Photo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Photo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Photo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Photo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Photo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Photo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Photo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Photo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Photo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Photo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Photo result;
      
      private Photo PrepareBuilder() {
        if (resultIsReadOnly) {
          Photo original = result;
          result = new Photo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Photo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Photo.Descriptor; }
      }
      
      public override Photo DefaultInstanceForType {
        get { return global::Hangups.Proto.Photo.DefaultInstance; }
      }
      
      public override Photo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Photo) {
          return MergeFrom((Photo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Photo other) {
        if (other == global::Hangups.Proto.Photo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPhotoId) {
          PhotoId = other.PhotoId;
        }
        if (other.HasDeleteAlbumlessSourcePhoto) {
          DeleteAlbumlessSourcePhoto = other.DeleteAlbumlessSourcePhoto;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasIsCustomUserId) {
          IsCustomUserId = other.IsCustomUserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_photoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _photoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPhotoId = input.ReadString(ref result.photoId_);
              break;
            }
            case 16: {
              result.hasDeleteAlbumlessSourcePhoto = input.ReadBool(ref result.deleteAlbumlessSourcePhoto_);
              break;
            }
            case 26: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 32: {
              result.hasIsCustomUserId = input.ReadBool(ref result.isCustomUserId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPhotoId {
        get { return result.hasPhotoId; }
      }
      public string PhotoId {
        get { return result.PhotoId; }
        set { SetPhotoId(value); }
      }
      public Builder SetPhotoId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhotoId = true;
        result.photoId_ = value;
        return this;
      }
      public Builder ClearPhotoId() {
        PrepareBuilder();
        result.hasPhotoId = false;
        result.photoId_ = "";
        return this;
      }
      
      public bool HasDeleteAlbumlessSourcePhoto {
        get { return result.hasDeleteAlbumlessSourcePhoto; }
      }
      public bool DeleteAlbumlessSourcePhoto {
        get { return result.DeleteAlbumlessSourcePhoto; }
        set { SetDeleteAlbumlessSourcePhoto(value); }
      }
      public Builder SetDeleteAlbumlessSourcePhoto(bool value) {
        PrepareBuilder();
        result.hasDeleteAlbumlessSourcePhoto = true;
        result.deleteAlbumlessSourcePhoto_ = value;
        return this;
      }
      public Builder ClearDeleteAlbumlessSourcePhoto() {
        PrepareBuilder();
        result.hasDeleteAlbumlessSourcePhoto = false;
        result.deleteAlbumlessSourcePhoto_ = false;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasIsCustomUserId {
        get { return result.hasIsCustomUserId; }
      }
      public bool IsCustomUserId {
        get { return result.IsCustomUserId; }
        set { SetIsCustomUserId(value); }
      }
      public Builder SetIsCustomUserId(bool value) {
        PrepareBuilder();
        result.hasIsCustomUserId = true;
        result.isCustomUserId_ = value;
        return this;
      }
      public Builder ClearIsCustomUserId() {
        PrepareBuilder();
        result.hasIsCustomUserId = false;
        result.isCustomUserId_ = false;
        return this;
      }
    }
    static Photo() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExistingMedia : pb::GeneratedMessage<ExistingMedia, ExistingMedia.Builder> {
    private ExistingMedia() { }
    private static readonly ExistingMedia defaultInstance = new ExistingMedia().MakeReadOnly();
    private static readonly string[] _existingMediaFieldNames = new string[] { "photo" };
    private static readonly uint[] _existingMediaFieldTags = new uint[] { 10 };
    public static ExistingMedia DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExistingMedia DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExistingMedia ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ExistingMedia__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExistingMedia, ExistingMedia.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ExistingMedia__FieldAccessorTable; }
    }
    
    public const int PhotoFieldNumber = 1;
    private bool hasPhoto;
    private global::Hangups.Proto.Photo photo_;
    public bool HasPhoto {
      get { return hasPhoto; }
    }
    public global::Hangups.Proto.Photo Photo {
      get { return photo_ ?? global::Hangups.Proto.Photo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _existingMediaFieldNames;
      if (hasPhoto) {
        output.WriteMessage(1, field_names[0], Photo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPhoto) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Photo);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ExistingMedia ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExistingMedia ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExistingMedia ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExistingMedia ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExistingMedia ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExistingMedia ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExistingMedia ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExistingMedia ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExistingMedia ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExistingMedia ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExistingMedia MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExistingMedia prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExistingMedia, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExistingMedia cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExistingMedia result;
      
      private ExistingMedia PrepareBuilder() {
        if (resultIsReadOnly) {
          ExistingMedia original = result;
          result = new ExistingMedia();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExistingMedia MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ExistingMedia.Descriptor; }
      }
      
      public override ExistingMedia DefaultInstanceForType {
        get { return global::Hangups.Proto.ExistingMedia.DefaultInstance; }
      }
      
      public override ExistingMedia BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExistingMedia) {
          return MergeFrom((ExistingMedia) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExistingMedia other) {
        if (other == global::Hangups.Proto.ExistingMedia.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPhoto) {
          MergePhoto(other.Photo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_existingMediaFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _existingMediaFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.Photo.Builder subBuilder = global::Hangups.Proto.Photo.CreateBuilder();
              if (result.hasPhoto) {
                subBuilder.MergeFrom(Photo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Photo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPhoto {
       get { return result.hasPhoto; }
      }
      public global::Hangups.Proto.Photo Photo {
        get { return result.Photo; }
        set { SetPhoto(value); }
      }
      public Builder SetPhoto(global::Hangups.Proto.Photo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhoto = true;
        result.photo_ = value;
        return this;
      }
      public Builder SetPhoto(global::Hangups.Proto.Photo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPhoto = true;
        result.photo_ = builderForValue.Build();
        return this;
      }
      public Builder MergePhoto(global::Hangups.Proto.Photo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPhoto &&
            result.photo_ != global::Hangups.Proto.Photo.DefaultInstance) {
            result.photo_ = global::Hangups.Proto.Photo.CreateBuilder(result.photo_).MergeFrom(value).BuildPartial();
        } else {
          result.photo_ = value;
        }
        result.hasPhoto = true;
        return this;
      }
      public Builder ClearPhoto() {
        PrepareBuilder();
        result.hasPhoto = false;
        result.photo_ = null;
        return this;
      }
    }
    static ExistingMedia() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventRequestHeader : pb::GeneratedMessage<EventRequestHeader, EventRequestHeader.Builder> {
    private EventRequestHeader() { }
    private static readonly EventRequestHeader defaultInstance = new EventRequestHeader().MakeReadOnly();
    private static readonly string[] _eventRequestHeaderFieldNames = new string[] { "client_generated_id", "conversation_id", "delivery_medium", "event_type", "expected_otr" };
    private static readonly uint[] _eventRequestHeaderFieldTags = new uint[] { 16, 10, 34, 40, 24 };
    public static EventRequestHeader DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EventRequestHeader DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EventRequestHeader ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventRequestHeader__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EventRequestHeader, EventRequestHeader.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventRequestHeader__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int ClientGeneratedIdFieldNumber = 2;
    private bool hasClientGeneratedId;
    private ulong clientGeneratedId_;
    public bool HasClientGeneratedId {
      get { return hasClientGeneratedId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ClientGeneratedId {
      get { return clientGeneratedId_; }
    }
    
    public const int ExpectedOtrFieldNumber = 3;
    private bool hasExpectedOtr;
    private global::Hangups.Proto.OffTheRecordStatus expectedOtr_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
    public bool HasExpectedOtr {
      get { return hasExpectedOtr; }
    }
    public global::Hangups.Proto.OffTheRecordStatus ExpectedOtr {
      get { return expectedOtr_; }
    }
    
    public const int DeliveryMediumFieldNumber = 4;
    private bool hasDeliveryMedium;
    private global::Hangups.Proto.DeliveryMedium deliveryMedium_;
    public bool HasDeliveryMedium {
      get { return hasDeliveryMedium; }
    }
    public global::Hangups.Proto.DeliveryMedium DeliveryMedium {
      get { return deliveryMedium_ ?? global::Hangups.Proto.DeliveryMedium.DefaultInstance; }
    }
    
    public const int EventTypeFieldNumber = 5;
    private bool hasEventType;
    private global::Hangups.Proto.EventType eventType_ = global::Hangups.Proto.EventType.EVENT_TYPE_UNKNOWN;
    public bool HasEventType {
      get { return hasEventType; }
    }
    public global::Hangups.Proto.EventType EventType {
      get { return eventType_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eventRequestHeaderFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[1], ConversationId);
      }
      if (hasClientGeneratedId) {
        output.WriteUInt64(2, field_names[0], ClientGeneratedId);
      }
      if (hasExpectedOtr) {
        output.WriteEnum(3, field_names[4], (int) ExpectedOtr, ExpectedOtr);
      }
      if (hasDeliveryMedium) {
        output.WriteMessage(4, field_names[2], DeliveryMedium);
      }
      if (hasEventType) {
        output.WriteEnum(5, field_names[3], (int) EventType, EventType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasClientGeneratedId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ClientGeneratedId);
      }
      if (hasExpectedOtr) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) ExpectedOtr);
      }
      if (hasDeliveryMedium) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, DeliveryMedium);
      }
      if (hasEventType) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) EventType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EventRequestHeader ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EventRequestHeader ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EventRequestHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventRequestHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EventRequestHeader MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EventRequestHeader prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EventRequestHeader, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EventRequestHeader cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EventRequestHeader result;
      
      private EventRequestHeader PrepareBuilder() {
        if (resultIsReadOnly) {
          EventRequestHeader original = result;
          result = new EventRequestHeader();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EventRequestHeader MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EventRequestHeader.Descriptor; }
      }
      
      public override EventRequestHeader DefaultInstanceForType {
        get { return global::Hangups.Proto.EventRequestHeader.DefaultInstance; }
      }
      
      public override EventRequestHeader BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EventRequestHeader) {
          return MergeFrom((EventRequestHeader) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EventRequestHeader other) {
        if (other == global::Hangups.Proto.EventRequestHeader.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasClientGeneratedId) {
          ClientGeneratedId = other.ClientGeneratedId;
        }
        if (other.HasExpectedOtr) {
          ExpectedOtr = other.ExpectedOtr;
        }
        if (other.HasDeliveryMedium) {
          MergeDeliveryMedium(other.DeliveryMedium);
        }
        if (other.HasEventType) {
          EventType = other.EventType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eventRequestHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eventRequestHeaderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasClientGeneratedId = input.ReadUInt64(ref result.clientGeneratedId_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.expectedOtr_, out unknown)) {
                result.hasExpectedOtr = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              global::Hangups.Proto.DeliveryMedium.Builder subBuilder = global::Hangups.Proto.DeliveryMedium.CreateBuilder();
              if (result.hasDeliveryMedium) {
                subBuilder.MergeFrom(DeliveryMedium);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DeliveryMedium = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.eventType_, out unknown)) {
                result.hasEventType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasClientGeneratedId {
        get { return result.hasClientGeneratedId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ClientGeneratedId {
        get { return result.ClientGeneratedId; }
        set { SetClientGeneratedId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClientGeneratedId(ulong value) {
        PrepareBuilder();
        result.hasClientGeneratedId = true;
        result.clientGeneratedId_ = value;
        return this;
      }
      public Builder ClearClientGeneratedId() {
        PrepareBuilder();
        result.hasClientGeneratedId = false;
        result.clientGeneratedId_ = 0UL;
        return this;
      }
      
      public bool HasExpectedOtr {
       get { return result.hasExpectedOtr; }
      }
      public global::Hangups.Proto.OffTheRecordStatus ExpectedOtr {
        get { return result.ExpectedOtr; }
        set { SetExpectedOtr(value); }
      }
      public Builder SetExpectedOtr(global::Hangups.Proto.OffTheRecordStatus value) {
        PrepareBuilder();
        result.hasExpectedOtr = true;
        result.expectedOtr_ = value;
        return this;
      }
      public Builder ClearExpectedOtr() {
        PrepareBuilder();
        result.hasExpectedOtr = false;
        result.expectedOtr_ = global::Hangups.Proto.OffTheRecordStatus.OFF_THE_RECORD_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasDeliveryMedium {
       get { return result.hasDeliveryMedium; }
      }
      public global::Hangups.Proto.DeliveryMedium DeliveryMedium {
        get { return result.DeliveryMedium; }
        set { SetDeliveryMedium(value); }
      }
      public Builder SetDeliveryMedium(global::Hangups.Proto.DeliveryMedium value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeliveryMedium = true;
        result.deliveryMedium_ = value;
        return this;
      }
      public Builder SetDeliveryMedium(global::Hangups.Proto.DeliveryMedium.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDeliveryMedium = true;
        result.deliveryMedium_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDeliveryMedium(global::Hangups.Proto.DeliveryMedium value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDeliveryMedium &&
            result.deliveryMedium_ != global::Hangups.Proto.DeliveryMedium.DefaultInstance) {
            result.deliveryMedium_ = global::Hangups.Proto.DeliveryMedium.CreateBuilder(result.deliveryMedium_).MergeFrom(value).BuildPartial();
        } else {
          result.deliveryMedium_ = value;
        }
        result.hasDeliveryMedium = true;
        return this;
      }
      public Builder ClearDeliveryMedium() {
        PrepareBuilder();
        result.hasDeliveryMedium = false;
        result.deliveryMedium_ = null;
        return this;
      }
      
      public bool HasEventType {
       get { return result.hasEventType; }
      }
      public global::Hangups.Proto.EventType EventType {
        get { return result.EventType; }
        set { SetEventType(value); }
      }
      public Builder SetEventType(global::Hangups.Proto.EventType value) {
        PrepareBuilder();
        result.hasEventType = true;
        result.eventType_ = value;
        return this;
      }
      public Builder ClearEventType() {
        PrepareBuilder();
        result.hasEventType = false;
        result.eventType_ = global::Hangups.Proto.EventType.EVENT_TYPE_UNKNOWN;
        return this;
      }
    }
    static EventRequestHeader() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientVersion : pb::GeneratedMessage<ClientVersion, ClientVersion.Builder> {
    private ClientVersion() { }
    private static readonly ClientVersion defaultInstance = new ClientVersion().MakeReadOnly();
    private static readonly string[] _clientVersionFieldNames = new string[] { "build_type", "client_id", "device_hardware", "device_os_version", "major_version", "version_timestamp" };
    private static readonly uint[] _clientVersionFieldTags = new uint[] { 16, 8, 50, 42, 26, 32 };
    public static ClientVersion DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClientVersion DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClientVersion ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ClientVersion__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClientVersion, ClientVersion.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ClientVersion__FieldAccessorTable; }
    }
    
    public const int ClientIdFieldNumber = 1;
    private bool hasClientId;
    private global::Hangups.Proto.ClientId clientId_ = global::Hangups.Proto.ClientId.CLIENT_ID_UNKNOWN;
    public bool HasClientId {
      get { return hasClientId; }
    }
    public global::Hangups.Proto.ClientId ClientId {
      get { return clientId_; }
    }
    
    public const int BuildTypeFieldNumber = 2;
    private bool hasBuildType;
    private global::Hangups.Proto.ClientBuildType buildType_ = global::Hangups.Proto.ClientBuildType.BUILD_TYPE_UNKNOWN;
    public bool HasBuildType {
      get { return hasBuildType; }
    }
    public global::Hangups.Proto.ClientBuildType BuildType {
      get { return buildType_; }
    }
    
    public const int MajorVersionFieldNumber = 3;
    private bool hasMajorVersion;
    private string majorVersion_ = "";
    public bool HasMajorVersion {
      get { return hasMajorVersion; }
    }
    public string MajorVersion {
      get { return majorVersion_; }
    }
    
    public const int VersionTimestampFieldNumber = 4;
    private bool hasVersionTimestamp;
    private ulong versionTimestamp_;
    public bool HasVersionTimestamp {
      get { return hasVersionTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong VersionTimestamp {
      get { return versionTimestamp_; }
    }
    
    public const int DeviceOsVersionFieldNumber = 5;
    private bool hasDeviceOsVersion;
    private string deviceOsVersion_ = "";
    public bool HasDeviceOsVersion {
      get { return hasDeviceOsVersion; }
    }
    public string DeviceOsVersion {
      get { return deviceOsVersion_; }
    }
    
    public const int DeviceHardwareFieldNumber = 6;
    private bool hasDeviceHardware;
    private string deviceHardware_ = "";
    public bool HasDeviceHardware {
      get { return hasDeviceHardware; }
    }
    public string DeviceHardware {
      get { return deviceHardware_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _clientVersionFieldNames;
      if (hasClientId) {
        output.WriteEnum(1, field_names[1], (int) ClientId, ClientId);
      }
      if (hasBuildType) {
        output.WriteEnum(2, field_names[0], (int) BuildType, BuildType);
      }
      if (hasMajorVersion) {
        output.WriteString(3, field_names[4], MajorVersion);
      }
      if (hasVersionTimestamp) {
        output.WriteUInt64(4, field_names[5], VersionTimestamp);
      }
      if (hasDeviceOsVersion) {
        output.WriteString(5, field_names[3], DeviceOsVersion);
      }
      if (hasDeviceHardware) {
        output.WriteString(6, field_names[2], DeviceHardware);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ClientId);
      }
      if (hasBuildType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) BuildType);
      }
      if (hasMajorVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MajorVersion);
      }
      if (hasVersionTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, VersionTimestamp);
      }
      if (hasDeviceOsVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(5, DeviceOsVersion);
      }
      if (hasDeviceHardware) {
        size += pb::CodedOutputStream.ComputeStringSize(6, DeviceHardware);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ClientVersion ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientVersion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientVersion ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientVersion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientVersion ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientVersion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClientVersion ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClientVersion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClientVersion ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientVersion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClientVersion MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClientVersion prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ClientVersion, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClientVersion cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClientVersion result;
      
      private ClientVersion PrepareBuilder() {
        if (resultIsReadOnly) {
          ClientVersion original = result;
          result = new ClientVersion();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClientVersion MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ClientVersion.Descriptor; }
      }
      
      public override ClientVersion DefaultInstanceForType {
        get { return global::Hangups.Proto.ClientVersion.DefaultInstance; }
      }
      
      public override ClientVersion BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClientVersion) {
          return MergeFrom((ClientVersion) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClientVersion other) {
        if (other == global::Hangups.Proto.ClientVersion.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasBuildType) {
          BuildType = other.BuildType;
        }
        if (other.HasMajorVersion) {
          MajorVersion = other.MajorVersion;
        }
        if (other.HasVersionTimestamp) {
          VersionTimestamp = other.VersionTimestamp;
        }
        if (other.HasDeviceOsVersion) {
          DeviceOsVersion = other.DeviceOsVersion;
        }
        if (other.HasDeviceHardware) {
          DeviceHardware = other.DeviceHardware;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clientVersionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clientVersionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.clientId_, out unknown)) {
                result.hasClientId = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.buildType_, out unknown)) {
                result.hasBuildType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasMajorVersion = input.ReadString(ref result.majorVersion_);
              break;
            }
            case 32: {
              result.hasVersionTimestamp = input.ReadUInt64(ref result.versionTimestamp_);
              break;
            }
            case 42: {
              result.hasDeviceOsVersion = input.ReadString(ref result.deviceOsVersion_);
              break;
            }
            case 50: {
              result.hasDeviceHardware = input.ReadString(ref result.deviceHardware_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClientId {
       get { return result.hasClientId; }
      }
      public global::Hangups.Proto.ClientId ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(global::Hangups.Proto.ClientId value) {
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = global::Hangups.Proto.ClientId.CLIENT_ID_UNKNOWN;
        return this;
      }
      
      public bool HasBuildType {
       get { return result.hasBuildType; }
      }
      public global::Hangups.Proto.ClientBuildType BuildType {
        get { return result.BuildType; }
        set { SetBuildType(value); }
      }
      public Builder SetBuildType(global::Hangups.Proto.ClientBuildType value) {
        PrepareBuilder();
        result.hasBuildType = true;
        result.buildType_ = value;
        return this;
      }
      public Builder ClearBuildType() {
        PrepareBuilder();
        result.hasBuildType = false;
        result.buildType_ = global::Hangups.Proto.ClientBuildType.BUILD_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasMajorVersion {
        get { return result.hasMajorVersion; }
      }
      public string MajorVersion {
        get { return result.MajorVersion; }
        set { SetMajorVersion(value); }
      }
      public Builder SetMajorVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMajorVersion = true;
        result.majorVersion_ = value;
        return this;
      }
      public Builder ClearMajorVersion() {
        PrepareBuilder();
        result.hasMajorVersion = false;
        result.majorVersion_ = "";
        return this;
      }
      
      public bool HasVersionTimestamp {
        get { return result.hasVersionTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong VersionTimestamp {
        get { return result.VersionTimestamp; }
        set { SetVersionTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersionTimestamp(ulong value) {
        PrepareBuilder();
        result.hasVersionTimestamp = true;
        result.versionTimestamp_ = value;
        return this;
      }
      public Builder ClearVersionTimestamp() {
        PrepareBuilder();
        result.hasVersionTimestamp = false;
        result.versionTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasDeviceOsVersion {
        get { return result.hasDeviceOsVersion; }
      }
      public string DeviceOsVersion {
        get { return result.DeviceOsVersion; }
        set { SetDeviceOsVersion(value); }
      }
      public Builder SetDeviceOsVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceOsVersion = true;
        result.deviceOsVersion_ = value;
        return this;
      }
      public Builder ClearDeviceOsVersion() {
        PrepareBuilder();
        result.hasDeviceOsVersion = false;
        result.deviceOsVersion_ = "";
        return this;
      }
      
      public bool HasDeviceHardware {
        get { return result.hasDeviceHardware; }
      }
      public string DeviceHardware {
        get { return result.DeviceHardware; }
        set { SetDeviceHardware(value); }
      }
      public Builder SetDeviceHardware(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeviceHardware = true;
        result.deviceHardware_ = value;
        return this;
      }
      public Builder ClearDeviceHardware() {
        PrepareBuilder();
        result.hasDeviceHardware = false;
        result.deviceHardware_ = "";
        return this;
      }
    }
    static ClientVersion() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RequestHeader : pb::GeneratedMessage<RequestHeader, RequestHeader.Builder> {
    private RequestHeader() { }
    private static readonly RequestHeader defaultInstance = new RequestHeader().MakeReadOnly();
    private static readonly string[] _requestHeaderFieldNames = new string[] { "client_identifier", "client_version", "language_code" };
    private static readonly uint[] _requestHeaderFieldTags = new uint[] { 18, 10, 34 };
    public static RequestHeader DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RequestHeader DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RequestHeader ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RequestHeader__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RequestHeader, RequestHeader.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RequestHeader__FieldAccessorTable; }
    }
    
    public const int ClientVersionFieldNumber = 1;
    private bool hasClientVersion;
    private global::Hangups.Proto.ClientVersion clientVersion_;
    public bool HasClientVersion {
      get { return hasClientVersion; }
    }
    public global::Hangups.Proto.ClientVersion ClientVersion {
      get { return clientVersion_ ?? global::Hangups.Proto.ClientVersion.DefaultInstance; }
    }
    
    public const int ClientIdentifierFieldNumber = 2;
    private bool hasClientIdentifier;
    private global::Hangups.Proto.ClientIdentifier clientIdentifier_;
    public bool HasClientIdentifier {
      get { return hasClientIdentifier; }
    }
    public global::Hangups.Proto.ClientIdentifier ClientIdentifier {
      get { return clientIdentifier_ ?? global::Hangups.Proto.ClientIdentifier.DefaultInstance; }
    }
    
    public const int LanguageCodeFieldNumber = 4;
    private bool hasLanguageCode;
    private string languageCode_ = "";
    public bool HasLanguageCode {
      get { return hasLanguageCode; }
    }
    public string LanguageCode {
      get { return languageCode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _requestHeaderFieldNames;
      if (hasClientVersion) {
        output.WriteMessage(1, field_names[1], ClientVersion);
      }
      if (hasClientIdentifier) {
        output.WriteMessage(2, field_names[0], ClientIdentifier);
      }
      if (hasLanguageCode) {
        output.WriteString(4, field_names[2], LanguageCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientVersion) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ClientVersion);
      }
      if (hasClientIdentifier) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ClientIdentifier);
      }
      if (hasLanguageCode) {
        size += pb::CodedOutputStream.ComputeStringSize(4, LanguageCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RequestHeader ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestHeader ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RequestHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RequestHeader ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RequestHeader ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RequestHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RequestHeader ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RequestHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RequestHeader MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RequestHeader prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RequestHeader, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RequestHeader cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RequestHeader result;
      
      private RequestHeader PrepareBuilder() {
        if (resultIsReadOnly) {
          RequestHeader original = result;
          result = new RequestHeader();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RequestHeader MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RequestHeader.Descriptor; }
      }
      
      public override RequestHeader DefaultInstanceForType {
        get { return global::Hangups.Proto.RequestHeader.DefaultInstance; }
      }
      
      public override RequestHeader BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RequestHeader) {
          return MergeFrom((RequestHeader) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RequestHeader other) {
        if (other == global::Hangups.Proto.RequestHeader.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClientVersion) {
          MergeClientVersion(other.ClientVersion);
        }
        if (other.HasClientIdentifier) {
          MergeClientIdentifier(other.ClientIdentifier);
        }
        if (other.HasLanguageCode) {
          LanguageCode = other.LanguageCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_requestHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _requestHeaderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ClientVersion.Builder subBuilder = global::Hangups.Proto.ClientVersion.CreateBuilder();
              if (result.hasClientVersion) {
                subBuilder.MergeFrom(ClientVersion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClientVersion = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ClientIdentifier.Builder subBuilder = global::Hangups.Proto.ClientIdentifier.CreateBuilder();
              if (result.hasClientIdentifier) {
                subBuilder.MergeFrom(ClientIdentifier);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClientIdentifier = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasLanguageCode = input.ReadString(ref result.languageCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClientVersion {
       get { return result.hasClientVersion; }
      }
      public global::Hangups.Proto.ClientVersion ClientVersion {
        get { return result.ClientVersion; }
        set { SetClientVersion(value); }
      }
      public Builder SetClientVersion(global::Hangups.Proto.ClientVersion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientVersion = true;
        result.clientVersion_ = value;
        return this;
      }
      public Builder SetClientVersion(global::Hangups.Proto.ClientVersion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClientVersion = true;
        result.clientVersion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClientVersion(global::Hangups.Proto.ClientVersion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClientVersion &&
            result.clientVersion_ != global::Hangups.Proto.ClientVersion.DefaultInstance) {
            result.clientVersion_ = global::Hangups.Proto.ClientVersion.CreateBuilder(result.clientVersion_).MergeFrom(value).BuildPartial();
        } else {
          result.clientVersion_ = value;
        }
        result.hasClientVersion = true;
        return this;
      }
      public Builder ClearClientVersion() {
        PrepareBuilder();
        result.hasClientVersion = false;
        result.clientVersion_ = null;
        return this;
      }
      
      public bool HasClientIdentifier {
       get { return result.hasClientIdentifier; }
      }
      public global::Hangups.Proto.ClientIdentifier ClientIdentifier {
        get { return result.ClientIdentifier; }
        set { SetClientIdentifier(value); }
      }
      public Builder SetClientIdentifier(global::Hangups.Proto.ClientIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientIdentifier = true;
        result.clientIdentifier_ = value;
        return this;
      }
      public Builder SetClientIdentifier(global::Hangups.Proto.ClientIdentifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClientIdentifier = true;
        result.clientIdentifier_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClientIdentifier(global::Hangups.Proto.ClientIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClientIdentifier &&
            result.clientIdentifier_ != global::Hangups.Proto.ClientIdentifier.DefaultInstance) {
            result.clientIdentifier_ = global::Hangups.Proto.ClientIdentifier.CreateBuilder(result.clientIdentifier_).MergeFrom(value).BuildPartial();
        } else {
          result.clientIdentifier_ = value;
        }
        result.hasClientIdentifier = true;
        return this;
      }
      public Builder ClearClientIdentifier() {
        PrepareBuilder();
        result.hasClientIdentifier = false;
        result.clientIdentifier_ = null;
        return this;
      }
      
      public bool HasLanguageCode {
        get { return result.hasLanguageCode; }
      }
      public string LanguageCode {
        get { return result.LanguageCode; }
        set { SetLanguageCode(value); }
      }
      public Builder SetLanguageCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLanguageCode = true;
        result.languageCode_ = value;
        return this;
      }
      public Builder ClearLanguageCode() {
        PrepareBuilder();
        result.hasLanguageCode = false;
        result.languageCode_ = "";
        return this;
      }
    }
    static RequestHeader() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ResponseHeader : pb::GeneratedMessage<ResponseHeader, ResponseHeader.Builder> {
    private ResponseHeader() { }
    private static readonly ResponseHeader defaultInstance = new ResponseHeader().MakeReadOnly();
    private static readonly string[] _responseHeaderFieldNames = new string[] { "current_server_time", "debug_url", "error_description", "request_trace_id", "status" };
    private static readonly uint[] _responseHeaderFieldTags = new uint[] { 40, 26, 18, 34, 8 };
    public static ResponseHeader DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ResponseHeader DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ResponseHeader ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ResponseHeader__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ResponseHeader, ResponseHeader.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ResponseHeader__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private global::Hangups.Proto.ResponseStatus status_ = global::Hangups.Proto.ResponseStatus.RESPONSE_STATUS_UNKNOWN;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::Hangups.Proto.ResponseStatus Status {
      get { return status_; }
    }
    
    public const int ErrorDescriptionFieldNumber = 2;
    private bool hasErrorDescription;
    private string errorDescription_ = "";
    public bool HasErrorDescription {
      get { return hasErrorDescription; }
    }
    public string ErrorDescription {
      get { return errorDescription_; }
    }
    
    public const int DebugUrlFieldNumber = 3;
    private bool hasDebugUrl;
    private string debugUrl_ = "";
    public bool HasDebugUrl {
      get { return hasDebugUrl; }
    }
    public string DebugUrl {
      get { return debugUrl_; }
    }
    
    public const int RequestTraceIdFieldNumber = 4;
    private bool hasRequestTraceId;
    private string requestTraceId_ = "";
    public bool HasRequestTraceId {
      get { return hasRequestTraceId; }
    }
    public string RequestTraceId {
      get { return requestTraceId_; }
    }
    
    public const int CurrentServerTimeFieldNumber = 5;
    private bool hasCurrentServerTime;
    private ulong currentServerTime_;
    public bool HasCurrentServerTime {
      get { return hasCurrentServerTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CurrentServerTime {
      get { return currentServerTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _responseHeaderFieldNames;
      if (hasStatus) {
        output.WriteEnum(1, field_names[4], (int) Status, Status);
      }
      if (hasErrorDescription) {
        output.WriteString(2, field_names[2], ErrorDescription);
      }
      if (hasDebugUrl) {
        output.WriteString(3, field_names[1], DebugUrl);
      }
      if (hasRequestTraceId) {
        output.WriteString(4, field_names[3], RequestTraceId);
      }
      if (hasCurrentServerTime) {
        output.WriteUInt64(5, field_names[0], CurrentServerTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Status);
      }
      if (hasErrorDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ErrorDescription);
      }
      if (hasDebugUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(3, DebugUrl);
      }
      if (hasRequestTraceId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, RequestTraceId);
      }
      if (hasCurrentServerTime) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, CurrentServerTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ResponseHeader ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResponseHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResponseHeader ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ResponseHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ResponseHeader ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResponseHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ResponseHeader ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ResponseHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ResponseHeader ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ResponseHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ResponseHeader MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ResponseHeader prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ResponseHeader, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ResponseHeader cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ResponseHeader result;
      
      private ResponseHeader PrepareBuilder() {
        if (resultIsReadOnly) {
          ResponseHeader original = result;
          result = new ResponseHeader();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ResponseHeader MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ResponseHeader.Descriptor; }
      }
      
      public override ResponseHeader DefaultInstanceForType {
        get { return global::Hangups.Proto.ResponseHeader.DefaultInstance; }
      }
      
      public override ResponseHeader BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ResponseHeader) {
          return MergeFrom((ResponseHeader) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ResponseHeader other) {
        if (other == global::Hangups.Proto.ResponseHeader.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasErrorDescription) {
          ErrorDescription = other.ErrorDescription;
        }
        if (other.HasDebugUrl) {
          DebugUrl = other.DebugUrl;
        }
        if (other.HasRequestTraceId) {
          RequestTraceId = other.RequestTraceId;
        }
        if (other.HasCurrentServerTime) {
          CurrentServerTime = other.CurrentServerTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_responseHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _responseHeaderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasErrorDescription = input.ReadString(ref result.errorDescription_);
              break;
            }
            case 26: {
              result.hasDebugUrl = input.ReadString(ref result.debugUrl_);
              break;
            }
            case 34: {
              result.hasRequestTraceId = input.ReadString(ref result.requestTraceId_);
              break;
            }
            case 40: {
              result.hasCurrentServerTime = input.ReadUInt64(ref result.currentServerTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::Hangups.Proto.ResponseStatus Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::Hangups.Proto.ResponseStatus value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::Hangups.Proto.ResponseStatus.RESPONSE_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasErrorDescription {
        get { return result.hasErrorDescription; }
      }
      public string ErrorDescription {
        get { return result.ErrorDescription; }
        set { SetErrorDescription(value); }
      }
      public Builder SetErrorDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorDescription = true;
        result.errorDescription_ = value;
        return this;
      }
      public Builder ClearErrorDescription() {
        PrepareBuilder();
        result.hasErrorDescription = false;
        result.errorDescription_ = "";
        return this;
      }
      
      public bool HasDebugUrl {
        get { return result.hasDebugUrl; }
      }
      public string DebugUrl {
        get { return result.DebugUrl; }
        set { SetDebugUrl(value); }
      }
      public Builder SetDebugUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDebugUrl = true;
        result.debugUrl_ = value;
        return this;
      }
      public Builder ClearDebugUrl() {
        PrepareBuilder();
        result.hasDebugUrl = false;
        result.debugUrl_ = "";
        return this;
      }
      
      public bool HasRequestTraceId {
        get { return result.hasRequestTraceId; }
      }
      public string RequestTraceId {
        get { return result.RequestTraceId; }
        set { SetRequestTraceId(value); }
      }
      public Builder SetRequestTraceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestTraceId = true;
        result.requestTraceId_ = value;
        return this;
      }
      public Builder ClearRequestTraceId() {
        PrepareBuilder();
        result.hasRequestTraceId = false;
        result.requestTraceId_ = "";
        return this;
      }
      
      public bool HasCurrentServerTime {
        get { return result.hasCurrentServerTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong CurrentServerTime {
        get { return result.CurrentServerTime; }
        set { SetCurrentServerTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCurrentServerTime(ulong value) {
        PrepareBuilder();
        result.hasCurrentServerTime = true;
        result.currentServerTime_ = value;
        return this;
      }
      public Builder ClearCurrentServerTime() {
        PrepareBuilder();
        result.hasCurrentServerTime = false;
        result.currentServerTime_ = 0UL;
        return this;
      }
    }
    static ResponseHeader() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Entity : pb::GeneratedMessage<Entity, Entity.Builder> {
    private Entity() { }
    private static readonly Entity defaultInstance = new Entity().MakeReadOnly();
    private static readonly string[] _entityFieldNames = new string[] { "entity_type", "had_past_hangout_state", "id", "presence", "properties" };
    private static readonly uint[] _entityFieldTags = new uint[] { 104, 128, 74, 66, 82 };
    public static Entity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Entity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Entity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Entity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Entity, Entity.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Entity__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum PastHangoutState {
        PAST_HANGOUT_STATE_UNKNOWN = 0,
        PAST_HANGOUT_STATE_HAD_PAST_HANGOUT = 1,
        PAST_HANGOUT_STATE_NO_PAST_HANGOUT = 2,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 9;
    private bool hasId;
    private global::Hangups.Proto.ParticipantId id_;
    public bool HasId {
      get { return hasId; }
    }
    public global::Hangups.Proto.ParticipantId Id {
      get { return id_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int PresenceFieldNumber = 8;
    private bool hasPresence;
    private global::Hangups.Proto.Presence presence_;
    public bool HasPresence {
      get { return hasPresence; }
    }
    public global::Hangups.Proto.Presence Presence {
      get { return presence_ ?? global::Hangups.Proto.Presence.DefaultInstance; }
    }
    
    public const int PropertiesFieldNumber = 10;
    private bool hasProperties;
    private global::Hangups.Proto.EntityProperties properties_;
    public bool HasProperties {
      get { return hasProperties; }
    }
    public global::Hangups.Proto.EntityProperties Properties {
      get { return properties_ ?? global::Hangups.Proto.EntityProperties.DefaultInstance; }
    }
    
    public const int EntityTypeFieldNumber = 13;
    private bool hasEntityType;
    private global::Hangups.Proto.ParticipantType entityType_ = global::Hangups.Proto.ParticipantType.PARTICIPANT_TYPE_UNKNOWN;
    public bool HasEntityType {
      get { return hasEntityType; }
    }
    public global::Hangups.Proto.ParticipantType EntityType {
      get { return entityType_; }
    }
    
    public const int HadPastHangoutStateFieldNumber = 16;
    private bool hasHadPastHangoutState;
    private global::Hangups.Proto.Entity.Types.PastHangoutState hadPastHangoutState_ = global::Hangups.Proto.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN;
    public bool HasHadPastHangoutState {
      get { return hasHadPastHangoutState; }
    }
    public global::Hangups.Proto.Entity.Types.PastHangoutState HadPastHangoutState {
      get { return hadPastHangoutState_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasPresence) {
          if (!Presence.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entityFieldNames;
      if (hasPresence) {
        output.WriteMessage(8, field_names[3], Presence);
      }
      if (hasId) {
        output.WriteMessage(9, field_names[2], Id);
      }
      if (hasProperties) {
        output.WriteMessage(10, field_names[4], Properties);
      }
      if (hasEntityType) {
        output.WriteEnum(13, field_names[0], (int) EntityType, EntityType);
      }
      if (hasHadPastHangoutState) {
        output.WriteEnum(16, field_names[1], (int) HadPastHangoutState, HadPastHangoutState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, Id);
      }
      if (hasPresence) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, Presence);
      }
      if (hasProperties) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, Properties);
      }
      if (hasEntityType) {
        size += pb::CodedOutputStream.ComputeEnumSize(13, (int) EntityType);
      }
      if (hasHadPastHangoutState) {
        size += pb::CodedOutputStream.ComputeEnumSize(16, (int) HadPastHangoutState);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Entity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Entity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Entity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Entity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Entity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Entity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Entity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Entity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Entity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Entity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Entity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Entity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Entity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Entity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Entity result;
      
      private Entity PrepareBuilder() {
        if (resultIsReadOnly) {
          Entity original = result;
          result = new Entity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Entity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Entity.Descriptor; }
      }
      
      public override Entity DefaultInstanceForType {
        get { return global::Hangups.Proto.Entity.DefaultInstance; }
      }
      
      public override Entity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Entity) {
          return MergeFrom((Entity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Entity other) {
        if (other == global::Hangups.Proto.Entity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          MergeId(other.Id);
        }
        if (other.HasPresence) {
          MergePresence(other.Presence);
        }
        if (other.HasProperties) {
          MergeProperties(other.Properties);
        }
        if (other.HasEntityType) {
          EntityType = other.EntityType;
        }
        if (other.HasHadPastHangoutState) {
          HadPastHangoutState = other.HadPastHangoutState;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 66: {
              global::Hangups.Proto.Presence.Builder subBuilder = global::Hangups.Proto.Presence.CreateBuilder();
              if (result.hasPresence) {
                subBuilder.MergeFrom(Presence);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Presence = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasId) {
                subBuilder.MergeFrom(Id);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Id = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::Hangups.Proto.EntityProperties.Builder subBuilder = global::Hangups.Proto.EntityProperties.CreateBuilder();
              if (result.hasProperties) {
                subBuilder.MergeFrom(Properties);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Properties = subBuilder.BuildPartial();
              break;
            }
            case 104: {
              object unknown;
              if(input.ReadEnum(ref result.entityType_, out unknown)) {
                result.hasEntityType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(13, (ulong)(int)unknown);
              }
              break;
            }
            case 128: {
              object unknown;
              if(input.ReadEnum(ref result.hadPastHangoutState_, out unknown)) {
                result.hasHadPastHangoutState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(16, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
       get { return result.hasId; }
      }
      public global::Hangups.Proto.ParticipantId Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder SetId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = builderForValue.Build();
        return this;
      }
      public Builder MergeId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasId &&
            result.id_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.id_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.id_).MergeFrom(value).BuildPartial();
        } else {
          result.id_ = value;
        }
        result.hasId = true;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = null;
        return this;
      }
      
      public bool HasPresence {
       get { return result.hasPresence; }
      }
      public global::Hangups.Proto.Presence Presence {
        get { return result.Presence; }
        set { SetPresence(value); }
      }
      public Builder SetPresence(global::Hangups.Proto.Presence value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPresence = true;
        result.presence_ = value;
        return this;
      }
      public Builder SetPresence(global::Hangups.Proto.Presence.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPresence = true;
        result.presence_ = builderForValue.Build();
        return this;
      }
      public Builder MergePresence(global::Hangups.Proto.Presence value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPresence &&
            result.presence_ != global::Hangups.Proto.Presence.DefaultInstance) {
            result.presence_ = global::Hangups.Proto.Presence.CreateBuilder(result.presence_).MergeFrom(value).BuildPartial();
        } else {
          result.presence_ = value;
        }
        result.hasPresence = true;
        return this;
      }
      public Builder ClearPresence() {
        PrepareBuilder();
        result.hasPresence = false;
        result.presence_ = null;
        return this;
      }
      
      public bool HasProperties {
       get { return result.hasProperties; }
      }
      public global::Hangups.Proto.EntityProperties Properties {
        get { return result.Properties; }
        set { SetProperties(value); }
      }
      public Builder SetProperties(global::Hangups.Proto.EntityProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProperties = true;
        result.properties_ = value;
        return this;
      }
      public Builder SetProperties(global::Hangups.Proto.EntityProperties.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasProperties = true;
        result.properties_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProperties(global::Hangups.Proto.EntityProperties value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasProperties &&
            result.properties_ != global::Hangups.Proto.EntityProperties.DefaultInstance) {
            result.properties_ = global::Hangups.Proto.EntityProperties.CreateBuilder(result.properties_).MergeFrom(value).BuildPartial();
        } else {
          result.properties_ = value;
        }
        result.hasProperties = true;
        return this;
      }
      public Builder ClearProperties() {
        PrepareBuilder();
        result.hasProperties = false;
        result.properties_ = null;
        return this;
      }
      
      public bool HasEntityType {
       get { return result.hasEntityType; }
      }
      public global::Hangups.Proto.ParticipantType EntityType {
        get { return result.EntityType; }
        set { SetEntityType(value); }
      }
      public Builder SetEntityType(global::Hangups.Proto.ParticipantType value) {
        PrepareBuilder();
        result.hasEntityType = true;
        result.entityType_ = value;
        return this;
      }
      public Builder ClearEntityType() {
        PrepareBuilder();
        result.hasEntityType = false;
        result.entityType_ = global::Hangups.Proto.ParticipantType.PARTICIPANT_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasHadPastHangoutState {
       get { return result.hasHadPastHangoutState; }
      }
      public global::Hangups.Proto.Entity.Types.PastHangoutState HadPastHangoutState {
        get { return result.HadPastHangoutState; }
        set { SetHadPastHangoutState(value); }
      }
      public Builder SetHadPastHangoutState(global::Hangups.Proto.Entity.Types.PastHangoutState value) {
        PrepareBuilder();
        result.hasHadPastHangoutState = true;
        result.hadPastHangoutState_ = value;
        return this;
      }
      public Builder ClearHadPastHangoutState() {
        PrepareBuilder();
        result.hasHadPastHangoutState = false;
        result.hadPastHangoutState_ = global::Hangups.Proto.Entity.Types.PastHangoutState.PAST_HANGOUT_STATE_UNKNOWN;
        return this;
      }
    }
    static Entity() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntityProperties : pb::GeneratedMessage<EntityProperties, EntityProperties.Builder> {
    private EntityProperties() { }
    private static readonly EntityProperties defaultInstance = new EntityProperties().MakeReadOnly();
    private static readonly string[] _entityPropertiesFieldNames = new string[] { "canonical_email", "display_name", "email", "first_name", "gender", "in_users_domain", "phone", "photo_url", "photo_url_status", "type" };
    private static readonly uint[] _entityPropertiesFieldTags = new uint[] { 122, 18, 42, 26, 88, 80, 50, 34, 96, 8 };
    public static EntityProperties DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntityProperties DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntityProperties ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EntityProperties__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntityProperties, EntityProperties.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EntityProperties__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::Hangups.Proto.ProfileType type_ = global::Hangups.Proto.ProfileType.PROFILE_TYPE_NONE;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.ProfileType Type {
      get { return type_; }
    }
    
    public const int DisplayNameFieldNumber = 2;
    private bool hasDisplayName;
    private string displayName_ = "";
    public bool HasDisplayName {
      get { return hasDisplayName; }
    }
    public string DisplayName {
      get { return displayName_; }
    }
    
    public const int FirstNameFieldNumber = 3;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int PhotoUrlFieldNumber = 4;
    private bool hasPhotoUrl;
    private string photoUrl_ = "";
    public bool HasPhotoUrl {
      get { return hasPhotoUrl; }
    }
    public string PhotoUrl {
      get { return photoUrl_; }
    }
    
    public const int EmailFieldNumber = 5;
    private pbc::PopsicleList<string> email_ = new pbc::PopsicleList<string>();
    public scg::IList<string> EmailList {
      get { return pbc::Lists.AsReadOnly(email_); }
    }
    public int EmailCount {
      get { return email_.Count; }
    }
    public string GetEmail(int index) {
      return email_[index];
    }
    
    public const int PhoneFieldNumber = 6;
    private pbc::PopsicleList<string> phone_ = new pbc::PopsicleList<string>();
    public scg::IList<string> PhoneList {
      get { return pbc::Lists.AsReadOnly(phone_); }
    }
    public int PhoneCount {
      get { return phone_.Count; }
    }
    public string GetPhone(int index) {
      return phone_[index];
    }
    
    public const int InUsersDomainFieldNumber = 10;
    private bool hasInUsersDomain;
    private bool inUsersDomain_;
    public bool HasInUsersDomain {
      get { return hasInUsersDomain; }
    }
    public bool InUsersDomain {
      get { return inUsersDomain_; }
    }
    
    public const int GenderFieldNumber = 11;
    private bool hasGender;
    private global::Hangups.Proto.Gender gender_ = global::Hangups.Proto.Gender.GENDER_UNKNOWN;
    public bool HasGender {
      get { return hasGender; }
    }
    public global::Hangups.Proto.Gender Gender {
      get { return gender_; }
    }
    
    public const int PhotoUrlStatusFieldNumber = 12;
    private bool hasPhotoUrlStatus;
    private global::Hangups.Proto.PhotoUrlStatus photoUrlStatus_ = global::Hangups.Proto.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN;
    public bool HasPhotoUrlStatus {
      get { return hasPhotoUrlStatus; }
    }
    public global::Hangups.Proto.PhotoUrlStatus PhotoUrlStatus {
      get { return photoUrlStatus_; }
    }
    
    public const int CanonicalEmailFieldNumber = 15;
    private bool hasCanonicalEmail;
    private string canonicalEmail_ = "";
    public bool HasCanonicalEmail {
      get { return hasCanonicalEmail; }
    }
    public string CanonicalEmail {
      get { return canonicalEmail_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entityPropertiesFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[9], (int) Type, Type);
      }
      if (hasDisplayName) {
        output.WriteString(2, field_names[1], DisplayName);
      }
      if (hasFirstName) {
        output.WriteString(3, field_names[3], FirstName);
      }
      if (hasPhotoUrl) {
        output.WriteString(4, field_names[7], PhotoUrl);
      }
      if (email_.Count > 0) {
        output.WriteStringArray(5, field_names[2], email_);
      }
      if (phone_.Count > 0) {
        output.WriteStringArray(6, field_names[6], phone_);
      }
      if (hasInUsersDomain) {
        output.WriteBool(10, field_names[5], InUsersDomain);
      }
      if (hasGender) {
        output.WriteEnum(11, field_names[4], (int) Gender, Gender);
      }
      if (hasPhotoUrlStatus) {
        output.WriteEnum(12, field_names[8], (int) PhotoUrlStatus, PhotoUrlStatus);
      }
      if (hasCanonicalEmail) {
        output.WriteString(15, field_names[0], CanonicalEmail);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasDisplayName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, DisplayName);
      }
      if (hasFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, FirstName);
      }
      if (hasPhotoUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(4, PhotoUrl);
      }
      {
        int dataSize = 0;
        foreach (string element in EmailList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * email_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in PhoneList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * phone_.Count;
      }
      if (hasInUsersDomain) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, InUsersDomain);
      }
      if (hasGender) {
        size += pb::CodedOutputStream.ComputeEnumSize(11, (int) Gender);
      }
      if (hasPhotoUrlStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(12, (int) PhotoUrlStatus);
      }
      if (hasCanonicalEmail) {
        size += pb::CodedOutputStream.ComputeStringSize(15, CanonicalEmail);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntityProperties ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityProperties ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityProperties ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityProperties ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityProperties ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityProperties ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntityProperties ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntityProperties ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntityProperties ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityProperties ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntityProperties MakeReadOnly() {
      email_.MakeReadOnly();
      phone_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntityProperties prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntityProperties, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntityProperties cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntityProperties result;
      
      private EntityProperties PrepareBuilder() {
        if (resultIsReadOnly) {
          EntityProperties original = result;
          result = new EntityProperties();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntityProperties MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EntityProperties.Descriptor; }
      }
      
      public override EntityProperties DefaultInstanceForType {
        get { return global::Hangups.Proto.EntityProperties.DefaultInstance; }
      }
      
      public override EntityProperties BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntityProperties) {
          return MergeFrom((EntityProperties) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntityProperties other) {
        if (other == global::Hangups.Proto.EntityProperties.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasDisplayName) {
          DisplayName = other.DisplayName;
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasPhotoUrl) {
          PhotoUrl = other.PhotoUrl;
        }
        if (other.email_.Count != 0) {
          result.email_.Add(other.email_);
        }
        if (other.phone_.Count != 0) {
          result.phone_.Add(other.phone_);
        }
        if (other.HasInUsersDomain) {
          InUsersDomain = other.InUsersDomain;
        }
        if (other.HasGender) {
          Gender = other.Gender;
        }
        if (other.HasPhotoUrlStatus) {
          PhotoUrlStatus = other.PhotoUrlStatus;
        }
        if (other.HasCanonicalEmail) {
          CanonicalEmail = other.CanonicalEmail;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entityPropertiesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entityPropertiesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasDisplayName = input.ReadString(ref result.displayName_);
              break;
            }
            case 26: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 34: {
              result.hasPhotoUrl = input.ReadString(ref result.photoUrl_);
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.email_);
              break;
            }
            case 50: {
              input.ReadStringArray(tag, field_name, result.phone_);
              break;
            }
            case 80: {
              result.hasInUsersDomain = input.ReadBool(ref result.inUsersDomain_);
              break;
            }
            case 88: {
              object unknown;
              if(input.ReadEnum(ref result.gender_, out unknown)) {
                result.hasGender = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(11, (ulong)(int)unknown);
              }
              break;
            }
            case 96: {
              object unknown;
              if(input.ReadEnum(ref result.photoUrlStatus_, out unknown)) {
                result.hasPhotoUrlStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(12, (ulong)(int)unknown);
              }
              break;
            }
            case 122: {
              result.hasCanonicalEmail = input.ReadString(ref result.canonicalEmail_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.ProfileType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.ProfileType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.ProfileType.PROFILE_TYPE_NONE;
        return this;
      }
      
      public bool HasDisplayName {
        get { return result.hasDisplayName; }
      }
      public string DisplayName {
        get { return result.DisplayName; }
        set { SetDisplayName(value); }
      }
      public Builder SetDisplayName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDisplayName = true;
        result.displayName_ = value;
        return this;
      }
      public Builder ClearDisplayName() {
        PrepareBuilder();
        result.hasDisplayName = false;
        result.displayName_ = "";
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasPhotoUrl {
        get { return result.hasPhotoUrl; }
      }
      public string PhotoUrl {
        get { return result.PhotoUrl; }
        set { SetPhotoUrl(value); }
      }
      public Builder SetPhotoUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhotoUrl = true;
        result.photoUrl_ = value;
        return this;
      }
      public Builder ClearPhotoUrl() {
        PrepareBuilder();
        result.hasPhotoUrl = false;
        result.photoUrl_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> EmailList {
        get { return PrepareBuilder().email_; }
      }
      public int EmailCount {
        get { return result.EmailCount; }
      }
      public string GetEmail(int index) {
        return result.GetEmail(index);
      }
      public Builder SetEmail(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.email_[index] = value;
        return this;
      }
      public Builder AddEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.email_.Add(value);
        return this;
      }
      public Builder AddRangeEmail(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.email_.Add(values);
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.email_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> PhoneList {
        get { return PrepareBuilder().phone_; }
      }
      public int PhoneCount {
        get { return result.PhoneCount; }
      }
      public string GetPhone(int index) {
        return result.GetPhone(index);
      }
      public Builder SetPhone(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.phone_[index] = value;
        return this;
      }
      public Builder AddPhone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.phone_.Add(value);
        return this;
      }
      public Builder AddRangePhone(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.phone_.Add(values);
        return this;
      }
      public Builder ClearPhone() {
        PrepareBuilder();
        result.phone_.Clear();
        return this;
      }
      
      public bool HasInUsersDomain {
        get { return result.hasInUsersDomain; }
      }
      public bool InUsersDomain {
        get { return result.InUsersDomain; }
        set { SetInUsersDomain(value); }
      }
      public Builder SetInUsersDomain(bool value) {
        PrepareBuilder();
        result.hasInUsersDomain = true;
        result.inUsersDomain_ = value;
        return this;
      }
      public Builder ClearInUsersDomain() {
        PrepareBuilder();
        result.hasInUsersDomain = false;
        result.inUsersDomain_ = false;
        return this;
      }
      
      public bool HasGender {
       get { return result.hasGender; }
      }
      public global::Hangups.Proto.Gender Gender {
        get { return result.Gender; }
        set { SetGender(value); }
      }
      public Builder SetGender(global::Hangups.Proto.Gender value) {
        PrepareBuilder();
        result.hasGender = true;
        result.gender_ = value;
        return this;
      }
      public Builder ClearGender() {
        PrepareBuilder();
        result.hasGender = false;
        result.gender_ = global::Hangups.Proto.Gender.GENDER_UNKNOWN;
        return this;
      }
      
      public bool HasPhotoUrlStatus {
       get { return result.hasPhotoUrlStatus; }
      }
      public global::Hangups.Proto.PhotoUrlStatus PhotoUrlStatus {
        get { return result.PhotoUrlStatus; }
        set { SetPhotoUrlStatus(value); }
      }
      public Builder SetPhotoUrlStatus(global::Hangups.Proto.PhotoUrlStatus value) {
        PrepareBuilder();
        result.hasPhotoUrlStatus = true;
        result.photoUrlStatus_ = value;
        return this;
      }
      public Builder ClearPhotoUrlStatus() {
        PrepareBuilder();
        result.hasPhotoUrlStatus = false;
        result.photoUrlStatus_ = global::Hangups.Proto.PhotoUrlStatus.PHOTO_URL_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasCanonicalEmail {
        get { return result.hasCanonicalEmail; }
      }
      public string CanonicalEmail {
        get { return result.CanonicalEmail; }
        set { SetCanonicalEmail(value); }
      }
      public Builder SetCanonicalEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCanonicalEmail = true;
        result.canonicalEmail_ = value;
        return this;
      }
      public Builder ClearCanonicalEmail() {
        PrepareBuilder();
        result.hasCanonicalEmail = false;
        result.canonicalEmail_ = "";
        return this;
      }
    }
    static EntityProperties() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationState : pb::GeneratedMessage<ConversationState, ConversationState.Builder> {
    private ConversationState() { }
    private static readonly ConversationState defaultInstance = new ConversationState().MakeReadOnly();
    private static readonly string[] _conversationStateFieldNames = new string[] { "conversation", "conversation_id", "event", "event_continuation_token" };
    private static readonly uint[] _conversationStateFieldTags = new uint[] { 18, 10, 26, 42 };
    public static ConversationState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConversationState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConversationState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConversationState, ConversationState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationState__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int ConversationFieldNumber = 2;
    private bool hasConversation;
    private global::Hangups.Proto.Conversation conversation_;
    public bool HasConversation {
      get { return hasConversation; }
    }
    public global::Hangups.Proto.Conversation Conversation {
      get { return conversation_ ?? global::Hangups.Proto.Conversation.DefaultInstance; }
    }
    
    public const int EventFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.Event> event_ = new pbc::PopsicleList<global::Hangups.Proto.Event>();
    public scg::IList<global::Hangups.Proto.Event> EventList {
      get { return event_; }
    }
    public int EventCount {
      get { return event_.Count; }
    }
    public global::Hangups.Proto.Event GetEvent(int index) {
      return event_[index];
    }
    
    public const int EventContinuationTokenFieldNumber = 5;
    private bool hasEventContinuationToken;
    private global::Hangups.Proto.EventContinuationToken eventContinuationToken_;
    public bool HasEventContinuationToken {
      get { return hasEventContinuationToken; }
    }
    public global::Hangups.Proto.EventContinuationToken EventContinuationToken {
      get { return eventContinuationToken_ ?? global::Hangups.Proto.EventContinuationToken.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.Event element in EventList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationStateFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[1], ConversationId);
      }
      if (hasConversation) {
        output.WriteMessage(2, field_names[0], Conversation);
      }
      if (event_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], event_);
      }
      if (hasEventContinuationToken) {
        output.WriteMessage(5, field_names[3], EventContinuationToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasConversation) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Conversation);
      }
      foreach (global::Hangups.Proto.Event element in EventList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasEventContinuationToken) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, EventContinuationToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConversationState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConversationState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConversationState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConversationState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConversationState MakeReadOnly() {
      event_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConversationState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConversationState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConversationState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConversationState result;
      
      private ConversationState PrepareBuilder() {
        if (resultIsReadOnly) {
          ConversationState original = result;
          result = new ConversationState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConversationState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConversationState.Descriptor; }
      }
      
      public override ConversationState DefaultInstanceForType {
        get { return global::Hangups.Proto.ConversationState.DefaultInstance; }
      }
      
      public override ConversationState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConversationState) {
          return MergeFrom((ConversationState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConversationState other) {
        if (other == global::Hangups.Proto.ConversationState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasConversation) {
          MergeConversation(other.Conversation);
        }
        if (other.event_.Count != 0) {
          result.event_.Add(other.event_);
        }
        if (other.HasEventContinuationToken) {
          MergeEventContinuationToken(other.EventContinuationToken);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.Conversation.Builder subBuilder = global::Hangups.Proto.Conversation.CreateBuilder();
              if (result.hasConversation) {
                subBuilder.MergeFrom(Conversation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Conversation = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.event_, global::Hangups.Proto.Event.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::Hangups.Proto.EventContinuationToken.Builder subBuilder = global::Hangups.Proto.EventContinuationToken.CreateBuilder();
              if (result.hasEventContinuationToken) {
                subBuilder.MergeFrom(EventContinuationToken);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EventContinuationToken = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasConversation {
       get { return result.hasConversation; }
      }
      public global::Hangups.Proto.Conversation Conversation {
        get { return result.Conversation; }
        set { SetConversation(value); }
      }
      public Builder SetConversation(global::Hangups.Proto.Conversation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversation = true;
        result.conversation_ = value;
        return this;
      }
      public Builder SetConversation(global::Hangups.Proto.Conversation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversation = true;
        result.conversation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversation(global::Hangups.Proto.Conversation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversation &&
            result.conversation_ != global::Hangups.Proto.Conversation.DefaultInstance) {
            result.conversation_ = global::Hangups.Proto.Conversation.CreateBuilder(result.conversation_).MergeFrom(value).BuildPartial();
        } else {
          result.conversation_ = value;
        }
        result.hasConversation = true;
        return this;
      }
      public Builder ClearConversation() {
        PrepareBuilder();
        result.hasConversation = false;
        result.conversation_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.Event> EventList {
        get { return PrepareBuilder().event_; }
      }
      public int EventCount {
        get { return result.EventCount; }
      }
      public global::Hangups.Proto.Event GetEvent(int index) {
        return result.GetEvent(index);
      }
      public Builder SetEvent(int index, global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.event_[index] = value;
        return this;
      }
      public Builder SetEvent(int index, global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.event_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.event_.Add(value);
        return this;
      }
      public Builder AddEvent(global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.event_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEvent(scg::IEnumerable<global::Hangups.Proto.Event> values) {
        PrepareBuilder();
        result.event_.Add(values);
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.event_.Clear();
        return this;
      }
      
      public bool HasEventContinuationToken {
       get { return result.hasEventContinuationToken; }
      }
      public global::Hangups.Proto.EventContinuationToken EventContinuationToken {
        get { return result.EventContinuationToken; }
        set { SetEventContinuationToken(value); }
      }
      public Builder SetEventContinuationToken(global::Hangups.Proto.EventContinuationToken value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventContinuationToken = true;
        result.eventContinuationToken_ = value;
        return this;
      }
      public Builder SetEventContinuationToken(global::Hangups.Proto.EventContinuationToken.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEventContinuationToken = true;
        result.eventContinuationToken_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEventContinuationToken(global::Hangups.Proto.EventContinuationToken value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEventContinuationToken &&
            result.eventContinuationToken_ != global::Hangups.Proto.EventContinuationToken.DefaultInstance) {
            result.eventContinuationToken_ = global::Hangups.Proto.EventContinuationToken.CreateBuilder(result.eventContinuationToken_).MergeFrom(value).BuildPartial();
        } else {
          result.eventContinuationToken_ = value;
        }
        result.hasEventContinuationToken = true;
        return this;
      }
      public Builder ClearEventContinuationToken() {
        PrepareBuilder();
        result.hasEventContinuationToken = false;
        result.eventContinuationToken_ = null;
        return this;
      }
    }
    static ConversationState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventContinuationToken : pb::GeneratedMessage<EventContinuationToken, EventContinuationToken.Builder> {
    private EventContinuationToken() { }
    private static readonly EventContinuationToken defaultInstance = new EventContinuationToken().MakeReadOnly();
    private static readonly string[] _eventContinuationTokenFieldNames = new string[] { "event_id", "event_timestamp", "storage_continuation_token" };
    private static readonly uint[] _eventContinuationTokenFieldTags = new uint[] { 10, 24, 18 };
    public static EventContinuationToken DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EventContinuationToken DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EventContinuationToken ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventContinuationToken__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EventContinuationToken, EventContinuationToken.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventContinuationToken__FieldAccessorTable; }
    }
    
    public const int EventIdFieldNumber = 1;
    private bool hasEventId;
    private string eventId_ = "";
    public bool HasEventId {
      get { return hasEventId; }
    }
    public string EventId {
      get { return eventId_; }
    }
    
    public const int StorageContinuationTokenFieldNumber = 2;
    private bool hasStorageContinuationToken;
    private pb::ByteString storageContinuationToken_ = pb::ByteString.Empty;
    public bool HasStorageContinuationToken {
      get { return hasStorageContinuationToken; }
    }
    public pb::ByteString StorageContinuationToken {
      get { return storageContinuationToken_; }
    }
    
    public const int EventTimestampFieldNumber = 3;
    private bool hasEventTimestamp;
    private ulong eventTimestamp_;
    public bool HasEventTimestamp {
      get { return hasEventTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong EventTimestamp {
      get { return eventTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eventContinuationTokenFieldNames;
      if (hasEventId) {
        output.WriteString(1, field_names[0], EventId);
      }
      if (hasStorageContinuationToken) {
        output.WriteBytes(2, field_names[2], StorageContinuationToken);
      }
      if (hasEventTimestamp) {
        output.WriteUInt64(3, field_names[1], EventTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEventId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, EventId);
      }
      if (hasStorageContinuationToken) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, StorageContinuationToken);
      }
      if (hasEventTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, EventTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EventContinuationToken ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EventContinuationToken ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EventContinuationToken ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventContinuationToken ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EventContinuationToken MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EventContinuationToken prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EventContinuationToken, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EventContinuationToken cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EventContinuationToken result;
      
      private EventContinuationToken PrepareBuilder() {
        if (resultIsReadOnly) {
          EventContinuationToken original = result;
          result = new EventContinuationToken();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EventContinuationToken MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EventContinuationToken.Descriptor; }
      }
      
      public override EventContinuationToken DefaultInstanceForType {
        get { return global::Hangups.Proto.EventContinuationToken.DefaultInstance; }
      }
      
      public override EventContinuationToken BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EventContinuationToken) {
          return MergeFrom((EventContinuationToken) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EventContinuationToken other) {
        if (other == global::Hangups.Proto.EventContinuationToken.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEventId) {
          EventId = other.EventId;
        }
        if (other.HasStorageContinuationToken) {
          StorageContinuationToken = other.StorageContinuationToken;
        }
        if (other.HasEventTimestamp) {
          EventTimestamp = other.EventTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eventContinuationTokenFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eventContinuationTokenFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasEventId = input.ReadString(ref result.eventId_);
              break;
            }
            case 18: {
              result.hasStorageContinuationToken = input.ReadBytes(ref result.storageContinuationToken_);
              break;
            }
            case 24: {
              result.hasEventTimestamp = input.ReadUInt64(ref result.eventTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEventId {
        get { return result.hasEventId; }
      }
      public string EventId {
        get { return result.EventId; }
        set { SetEventId(value); }
      }
      public Builder SetEventId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventId = true;
        result.eventId_ = value;
        return this;
      }
      public Builder ClearEventId() {
        PrepareBuilder();
        result.hasEventId = false;
        result.eventId_ = "";
        return this;
      }
      
      public bool HasStorageContinuationToken {
        get { return result.hasStorageContinuationToken; }
      }
      public pb::ByteString StorageContinuationToken {
        get { return result.StorageContinuationToken; }
        set { SetStorageContinuationToken(value); }
      }
      public Builder SetStorageContinuationToken(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStorageContinuationToken = true;
        result.storageContinuationToken_ = value;
        return this;
      }
      public Builder ClearStorageContinuationToken() {
        PrepareBuilder();
        result.hasStorageContinuationToken = false;
        result.storageContinuationToken_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasEventTimestamp {
        get { return result.hasEventTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong EventTimestamp {
        get { return result.EventTimestamp; }
        set { SetEventTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEventTimestamp(ulong value) {
        PrepareBuilder();
        result.hasEventTimestamp = true;
        result.eventTimestamp_ = value;
        return this;
      }
      public Builder ClearEventTimestamp() {
        PrepareBuilder();
        result.hasEventTimestamp = false;
        result.eventTimestamp_ = 0UL;
        return this;
      }
    }
    static EventContinuationToken() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntityLookupSpec : pb::GeneratedMessage<EntityLookupSpec, EntityLookupSpec.Builder> {
    private EntityLookupSpec() { }
    private static readonly EntityLookupSpec defaultInstance = new EntityLookupSpec().MakeReadOnly();
    private static readonly string[] _entityLookupSpecFieldNames = new string[] { "gaia_id" };
    private static readonly uint[] _entityLookupSpecFieldTags = new uint[] { 10 };
    public static EntityLookupSpec DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntityLookupSpec DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntityLookupSpec ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EntityLookupSpec__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntityLookupSpec, EntityLookupSpec.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EntityLookupSpec__FieldAccessorTable; }
    }
    
    public const int GaiaIdFieldNumber = 1;
    private bool hasGaiaId;
    private string gaiaId_ = "";
    public bool HasGaiaId {
      get { return hasGaiaId; }
    }
    public string GaiaId {
      get { return gaiaId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entityLookupSpecFieldNames;
      if (hasGaiaId) {
        output.WriteString(1, field_names[0], GaiaId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGaiaId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GaiaId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntityLookupSpec ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntityLookupSpec ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntityLookupSpec ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntityLookupSpec ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntityLookupSpec MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntityLookupSpec prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntityLookupSpec, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntityLookupSpec cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntityLookupSpec result;
      
      private EntityLookupSpec PrepareBuilder() {
        if (resultIsReadOnly) {
          EntityLookupSpec original = result;
          result = new EntityLookupSpec();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntityLookupSpec MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EntityLookupSpec.Descriptor; }
      }
      
      public override EntityLookupSpec DefaultInstanceForType {
        get { return global::Hangups.Proto.EntityLookupSpec.DefaultInstance; }
      }
      
      public override EntityLookupSpec BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntityLookupSpec) {
          return MergeFrom((EntityLookupSpec) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntityLookupSpec other) {
        if (other == global::Hangups.Proto.EntityLookupSpec.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGaiaId) {
          GaiaId = other.GaiaId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entityLookupSpecFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entityLookupSpecFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGaiaId = input.ReadString(ref result.gaiaId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGaiaId {
        get { return result.hasGaiaId; }
      }
      public string GaiaId {
        get { return result.GaiaId; }
        set { SetGaiaId(value); }
      }
      public Builder SetGaiaId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGaiaId = true;
        result.gaiaId_ = value;
        return this;
      }
      public Builder ClearGaiaId() {
        PrepareBuilder();
        result.hasGaiaId = false;
        result.gaiaId_ = "";
        return this;
      }
    }
    static EntityLookupSpec() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConfigurationBit : pb::GeneratedMessage<ConfigurationBit, ConfigurationBit.Builder> {
    private ConfigurationBit() { }
    private static readonly ConfigurationBit defaultInstance = new ConfigurationBit().MakeReadOnly();
    private static readonly string[] _configurationBitFieldNames = new string[] { "configuration_bit_type", "value" };
    private static readonly uint[] _configurationBitFieldTags = new uint[] { 8, 16 };
    public static ConfigurationBit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConfigurationBit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConfigurationBit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConfigurationBit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConfigurationBit, ConfigurationBit.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConfigurationBit__FieldAccessorTable; }
    }
    
    public const int ConfigurationBitTypeFieldNumber = 1;
    private bool hasConfigurationBitType;
    private global::Hangups.Proto.ConfigurationBitType configurationBitType_ = global::Hangups.Proto.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN;
    public bool HasConfigurationBitType {
      get { return hasConfigurationBitType; }
    }
    public global::Hangups.Proto.ConfigurationBitType ConfigurationBitType {
      get { return configurationBitType_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private bool value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public bool Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _configurationBitFieldNames;
      if (hasConfigurationBitType) {
        output.WriteEnum(1, field_names[0], (int) ConfigurationBitType, ConfigurationBitType);
      }
      if (hasValue) {
        output.WriteBool(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConfigurationBitType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ConfigurationBitType);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConfigurationBit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConfigurationBit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConfigurationBit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConfigurationBit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConfigurationBit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConfigurationBit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConfigurationBit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConfigurationBit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConfigurationBit result;
      
      private ConfigurationBit PrepareBuilder() {
        if (resultIsReadOnly) {
          ConfigurationBit original = result;
          result = new ConfigurationBit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConfigurationBit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConfigurationBit.Descriptor; }
      }
      
      public override ConfigurationBit DefaultInstanceForType {
        get { return global::Hangups.Proto.ConfigurationBit.DefaultInstance; }
      }
      
      public override ConfigurationBit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConfigurationBit) {
          return MergeFrom((ConfigurationBit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConfigurationBit other) {
        if (other == global::Hangups.Proto.ConfigurationBit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConfigurationBitType) {
          ConfigurationBitType = other.ConfigurationBitType;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_configurationBitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _configurationBitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.configurationBitType_, out unknown)) {
                result.hasConfigurationBitType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasValue = input.ReadBool(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConfigurationBitType {
       get { return result.hasConfigurationBitType; }
      }
      public global::Hangups.Proto.ConfigurationBitType ConfigurationBitType {
        get { return result.ConfigurationBitType; }
        set { SetConfigurationBitType(value); }
      }
      public Builder SetConfigurationBitType(global::Hangups.Proto.ConfigurationBitType value) {
        PrepareBuilder();
        result.hasConfigurationBitType = true;
        result.configurationBitType_ = value;
        return this;
      }
      public Builder ClearConfigurationBitType() {
        PrepareBuilder();
        result.hasConfigurationBitType = false;
        result.configurationBitType_ = global::Hangups.Proto.ConfigurationBitType.CONFIGURATION_BIT_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public bool Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(bool value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = false;
        return this;
      }
    }
    static ConfigurationBit() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RichPresenceState : pb::GeneratedMessage<RichPresenceState, RichPresenceState.Builder> {
    private RichPresenceState() { }
    private static readonly RichPresenceState defaultInstance = new RichPresenceState().MakeReadOnly();
    private static readonly string[] _richPresenceStateFieldNames = new string[] { "get_rich_presence_enabled_state" };
    private static readonly uint[] _richPresenceStateFieldTags = new uint[] { 26 };
    public static RichPresenceState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RichPresenceState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RichPresenceState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RichPresenceState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RichPresenceState, RichPresenceState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RichPresenceState__FieldAccessorTable; }
    }
    
    public const int GetRichPresenceEnabledStateFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.RichPresenceEnabledState> getRichPresenceEnabledState_ = new pbc::PopsicleList<global::Hangups.Proto.RichPresenceEnabledState>();
    public scg::IList<global::Hangups.Proto.RichPresenceEnabledState> GetRichPresenceEnabledStateList {
      get { return getRichPresenceEnabledState_; }
    }
    public int GetRichPresenceEnabledStateCount {
      get { return getRichPresenceEnabledState_.Count; }
    }
    public global::Hangups.Proto.RichPresenceEnabledState GetGetRichPresenceEnabledState(int index) {
      return getRichPresenceEnabledState_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _richPresenceStateFieldNames;
      if (getRichPresenceEnabledState_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], getRichPresenceEnabledState_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.RichPresenceEnabledState element in GetRichPresenceEnabledStateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RichPresenceState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RichPresenceState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RichPresenceState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RichPresenceState MakeReadOnly() {
      getRichPresenceEnabledState_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RichPresenceState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RichPresenceState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RichPresenceState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RichPresenceState result;
      
      private RichPresenceState PrepareBuilder() {
        if (resultIsReadOnly) {
          RichPresenceState original = result;
          result = new RichPresenceState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RichPresenceState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RichPresenceState.Descriptor; }
      }
      
      public override RichPresenceState DefaultInstanceForType {
        get { return global::Hangups.Proto.RichPresenceState.DefaultInstance; }
      }
      
      public override RichPresenceState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RichPresenceState) {
          return MergeFrom((RichPresenceState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RichPresenceState other) {
        if (other == global::Hangups.Proto.RichPresenceState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.getRichPresenceEnabledState_.Count != 0) {
          result.getRichPresenceEnabledState_.Add(other.getRichPresenceEnabledState_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_richPresenceStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _richPresenceStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.getRichPresenceEnabledState_, global::Hangups.Proto.RichPresenceEnabledState.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.RichPresenceEnabledState> GetRichPresenceEnabledStateList {
        get { return PrepareBuilder().getRichPresenceEnabledState_; }
      }
      public int GetRichPresenceEnabledStateCount {
        get { return result.GetRichPresenceEnabledStateCount; }
      }
      public global::Hangups.Proto.RichPresenceEnabledState GetGetRichPresenceEnabledState(int index) {
        return result.GetGetRichPresenceEnabledState(index);
      }
      public Builder SetGetRichPresenceEnabledState(int index, global::Hangups.Proto.RichPresenceEnabledState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.getRichPresenceEnabledState_[index] = value;
        return this;
      }
      public Builder SetGetRichPresenceEnabledState(int index, global::Hangups.Proto.RichPresenceEnabledState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.getRichPresenceEnabledState_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGetRichPresenceEnabledState(global::Hangups.Proto.RichPresenceEnabledState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.getRichPresenceEnabledState_.Add(value);
        return this;
      }
      public Builder AddGetRichPresenceEnabledState(global::Hangups.Proto.RichPresenceEnabledState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.getRichPresenceEnabledState_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGetRichPresenceEnabledState(scg::IEnumerable<global::Hangups.Proto.RichPresenceEnabledState> values) {
        PrepareBuilder();
        result.getRichPresenceEnabledState_.Add(values);
        return this;
      }
      public Builder ClearGetRichPresenceEnabledState() {
        PrepareBuilder();
        result.getRichPresenceEnabledState_.Clear();
        return this;
      }
    }
    static RichPresenceState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RichPresenceEnabledState : pb::GeneratedMessage<RichPresenceEnabledState, RichPresenceEnabledState.Builder> {
    private RichPresenceEnabledState() { }
    private static readonly RichPresenceEnabledState defaultInstance = new RichPresenceEnabledState().MakeReadOnly();
    private static readonly string[] _richPresenceEnabledStateFieldNames = new string[] { "enabled", "type" };
    private static readonly uint[] _richPresenceEnabledStateFieldTags = new uint[] { 16, 8 };
    public static RichPresenceEnabledState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RichPresenceEnabledState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RichPresenceEnabledState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RichPresenceEnabledState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RichPresenceEnabledState, RichPresenceEnabledState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RichPresenceEnabledState__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::Hangups.Proto.RichPresenceType type_ = global::Hangups.Proto.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.RichPresenceType Type {
      get { return type_; }
    }
    
    public const int EnabledFieldNumber = 2;
    private bool hasEnabled;
    private bool enabled_;
    public bool HasEnabled {
      get { return hasEnabled; }
    }
    public bool Enabled {
      get { return enabled_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _richPresenceEnabledStateFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasEnabled) {
        output.WriteBool(2, field_names[0], Enabled);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasEnabled) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Enabled);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RichPresenceEnabledState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RichPresenceEnabledState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceEnabledState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RichPresenceEnabledState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RichPresenceEnabledState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RichPresenceEnabledState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RichPresenceEnabledState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RichPresenceEnabledState result;
      
      private RichPresenceEnabledState PrepareBuilder() {
        if (resultIsReadOnly) {
          RichPresenceEnabledState original = result;
          result = new RichPresenceEnabledState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RichPresenceEnabledState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RichPresenceEnabledState.Descriptor; }
      }
      
      public override RichPresenceEnabledState DefaultInstanceForType {
        get { return global::Hangups.Proto.RichPresenceEnabledState.DefaultInstance; }
      }
      
      public override RichPresenceEnabledState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RichPresenceEnabledState) {
          return MergeFrom((RichPresenceEnabledState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RichPresenceEnabledState other) {
        if (other == global::Hangups.Proto.RichPresenceEnabledState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasEnabled) {
          Enabled = other.Enabled;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_richPresenceEnabledStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _richPresenceEnabledStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasEnabled = input.ReadBool(ref result.enabled_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.RichPresenceType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.RichPresenceType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.RichPresenceType.RICH_PRESENCE_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasEnabled {
        get { return result.hasEnabled; }
      }
      public bool Enabled {
        get { return result.Enabled; }
        set { SetEnabled(value); }
      }
      public Builder SetEnabled(bool value) {
        PrepareBuilder();
        result.hasEnabled = true;
        result.enabled_ = value;
        return this;
      }
      public Builder ClearEnabled() {
        PrepareBuilder();
        result.hasEnabled = false;
        result.enabled_ = false;
        return this;
      }
    }
    static RichPresenceEnabledState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DesktopOffSetting : pb::GeneratedMessage<DesktopOffSetting, DesktopOffSetting.Builder> {
    private DesktopOffSetting() { }
    private static readonly DesktopOffSetting defaultInstance = new DesktopOffSetting().MakeReadOnly();
    private static readonly string[] _desktopOffSettingFieldNames = new string[] { "desktop_off" };
    private static readonly uint[] _desktopOffSettingFieldTags = new uint[] { 8 };
    public static DesktopOffSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DesktopOffSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DesktopOffSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DesktopOffSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DesktopOffSetting, DesktopOffSetting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DesktopOffSetting__FieldAccessorTable; }
    }
    
    public const int DesktopOffFieldNumber = 1;
    private bool hasDesktopOff;
    private bool desktopOff_;
    public bool HasDesktopOff {
      get { return hasDesktopOff; }
    }
    public bool DesktopOff {
      get { return desktopOff_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _desktopOffSettingFieldNames;
      if (hasDesktopOff) {
        output.WriteBool(1, field_names[0], DesktopOff);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDesktopOff) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, DesktopOff);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DesktopOffSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DesktopOffSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DesktopOffSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DesktopOffSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DesktopOffSetting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DesktopOffSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DesktopOffSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DesktopOffSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DesktopOffSetting result;
      
      private DesktopOffSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          DesktopOffSetting original = result;
          result = new DesktopOffSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DesktopOffSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DesktopOffSetting.Descriptor; }
      }
      
      public override DesktopOffSetting DefaultInstanceForType {
        get { return global::Hangups.Proto.DesktopOffSetting.DefaultInstance; }
      }
      
      public override DesktopOffSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DesktopOffSetting) {
          return MergeFrom((DesktopOffSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DesktopOffSetting other) {
        if (other == global::Hangups.Proto.DesktopOffSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDesktopOff) {
          DesktopOff = other.DesktopOff;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_desktopOffSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _desktopOffSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDesktopOff = input.ReadBool(ref result.desktopOff_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDesktopOff {
        get { return result.hasDesktopOff; }
      }
      public bool DesktopOff {
        get { return result.DesktopOff; }
        set { SetDesktopOff(value); }
      }
      public Builder SetDesktopOff(bool value) {
        PrepareBuilder();
        result.hasDesktopOff = true;
        result.desktopOff_ = value;
        return this;
      }
      public Builder ClearDesktopOff() {
        PrepareBuilder();
        result.hasDesktopOff = false;
        result.desktopOff_ = false;
        return this;
      }
    }
    static DesktopOffSetting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DesktopOffState : pb::GeneratedMessage<DesktopOffState, DesktopOffState.Builder> {
    private DesktopOffState() { }
    private static readonly DesktopOffState defaultInstance = new DesktopOffState().MakeReadOnly();
    private static readonly string[] _desktopOffStateFieldNames = new string[] { "desktop_off", "version" };
    private static readonly uint[] _desktopOffStateFieldTags = new uint[] { 8, 16 };
    public static DesktopOffState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DesktopOffState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DesktopOffState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DesktopOffState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DesktopOffState, DesktopOffState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DesktopOffState__FieldAccessorTable; }
    }
    
    public const int DesktopOffFieldNumber = 1;
    private bool hasDesktopOff;
    private bool desktopOff_;
    public bool HasDesktopOff {
      get { return hasDesktopOff; }
    }
    public bool DesktopOff {
      get { return desktopOff_; }
    }
    
    public const int VersionFieldNumber = 2;
    private bool hasVersion;
    private ulong version_;
    public bool HasVersion {
      get { return hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return version_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _desktopOffStateFieldNames;
      if (hasDesktopOff) {
        output.WriteBool(1, field_names[0], DesktopOff);
      }
      if (hasVersion) {
        output.WriteUInt64(2, field_names[1], Version);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDesktopOff) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, DesktopOff);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Version);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DesktopOffState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DesktopOffState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DesktopOffState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DesktopOffState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DesktopOffState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DesktopOffState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DesktopOffState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DesktopOffState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DesktopOffState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DesktopOffState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DesktopOffState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DesktopOffState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DesktopOffState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DesktopOffState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DesktopOffState result;
      
      private DesktopOffState PrepareBuilder() {
        if (resultIsReadOnly) {
          DesktopOffState original = result;
          result = new DesktopOffState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DesktopOffState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DesktopOffState.Descriptor; }
      }
      
      public override DesktopOffState DefaultInstanceForType {
        get { return global::Hangups.Proto.DesktopOffState.DefaultInstance; }
      }
      
      public override DesktopOffState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DesktopOffState) {
          return MergeFrom((DesktopOffState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DesktopOffState other) {
        if (other == global::Hangups.Proto.DesktopOffState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDesktopOff) {
          DesktopOff = other.DesktopOff;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_desktopOffStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _desktopOffStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDesktopOff = input.ReadBool(ref result.desktopOff_);
              break;
            }
            case 16: {
              result.hasVersion = input.ReadUInt64(ref result.version_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDesktopOff {
        get { return result.hasDesktopOff; }
      }
      public bool DesktopOff {
        get { return result.DesktopOff; }
        set { SetDesktopOff(value); }
      }
      public Builder SetDesktopOff(bool value) {
        PrepareBuilder();
        result.hasDesktopOff = true;
        result.desktopOff_ = value;
        return this;
      }
      public Builder ClearDesktopOff() {
        PrepareBuilder();
        result.hasDesktopOff = false;
        result.desktopOff_ = false;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersion(ulong value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 0UL;
        return this;
      }
    }
    static DesktopOffState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DndSetting : pb::GeneratedMessage<DndSetting, DndSetting.Builder> {
    private DndSetting() { }
    private static readonly DndSetting defaultInstance = new DndSetting().MakeReadOnly();
    private static readonly string[] _dndSettingFieldNames = new string[] { "do_not_disturb", "timeout_secs" };
    private static readonly uint[] _dndSettingFieldTags = new uint[] { 8, 16 };
    public static DndSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DndSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DndSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DndSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DndSetting, DndSetting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DndSetting__FieldAccessorTable; }
    }
    
    public const int DoNotDisturbFieldNumber = 1;
    private bool hasDoNotDisturb;
    private bool doNotDisturb_;
    public bool HasDoNotDisturb {
      get { return hasDoNotDisturb; }
    }
    public bool DoNotDisturb {
      get { return doNotDisturb_; }
    }
    
    public const int TimeoutSecsFieldNumber = 2;
    private bool hasTimeoutSecs;
    private ulong timeoutSecs_;
    public bool HasTimeoutSecs {
      get { return hasTimeoutSecs; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TimeoutSecs {
      get { return timeoutSecs_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _dndSettingFieldNames;
      if (hasDoNotDisturb) {
        output.WriteBool(1, field_names[0], DoNotDisturb);
      }
      if (hasTimeoutSecs) {
        output.WriteUInt64(2, field_names[1], TimeoutSecs);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDoNotDisturb) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, DoNotDisturb);
      }
      if (hasTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, TimeoutSecs);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DndSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DndSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DndSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DndSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DndSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DndSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DndSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DndSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DndSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DndSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DndSetting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DndSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DndSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DndSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DndSetting result;
      
      private DndSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          DndSetting original = result;
          result = new DndSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DndSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DndSetting.Descriptor; }
      }
      
      public override DndSetting DefaultInstanceForType {
        get { return global::Hangups.Proto.DndSetting.DefaultInstance; }
      }
      
      public override DndSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DndSetting) {
          return MergeFrom((DndSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DndSetting other) {
        if (other == global::Hangups.Proto.DndSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDoNotDisturb) {
          DoNotDisturb = other.DoNotDisturb;
        }
        if (other.HasTimeoutSecs) {
          TimeoutSecs = other.TimeoutSecs;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dndSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dndSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDoNotDisturb = input.ReadBool(ref result.doNotDisturb_);
              break;
            }
            case 16: {
              result.hasTimeoutSecs = input.ReadUInt64(ref result.timeoutSecs_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDoNotDisturb {
        get { return result.hasDoNotDisturb; }
      }
      public bool DoNotDisturb {
        get { return result.DoNotDisturb; }
        set { SetDoNotDisturb(value); }
      }
      public Builder SetDoNotDisturb(bool value) {
        PrepareBuilder();
        result.hasDoNotDisturb = true;
        result.doNotDisturb_ = value;
        return this;
      }
      public Builder ClearDoNotDisturb() {
        PrepareBuilder();
        result.hasDoNotDisturb = false;
        result.doNotDisturb_ = false;
        return this;
      }
      
      public bool HasTimeoutSecs {
        get { return result.hasTimeoutSecs; }
      }
      [global::System.CLSCompliant(false)]
      public ulong TimeoutSecs {
        get { return result.TimeoutSecs; }
        set { SetTimeoutSecs(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimeoutSecs(ulong value) {
        PrepareBuilder();
        result.hasTimeoutSecs = true;
        result.timeoutSecs_ = value;
        return this;
      }
      public Builder ClearTimeoutSecs() {
        PrepareBuilder();
        result.hasTimeoutSecs = false;
        result.timeoutSecs_ = 0UL;
        return this;
      }
    }
    static DndSetting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PresenceStateSetting : pb::GeneratedMessage<PresenceStateSetting, PresenceStateSetting.Builder> {
    private PresenceStateSetting() { }
    private static readonly PresenceStateSetting defaultInstance = new PresenceStateSetting().MakeReadOnly();
    private static readonly string[] _presenceStateSettingFieldNames = new string[] { "timeout_secs", "type" };
    private static readonly uint[] _presenceStateSettingFieldTags = new uint[] { 8, 16 };
    public static PresenceStateSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PresenceStateSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PresenceStateSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_PresenceStateSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PresenceStateSetting, PresenceStateSetting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_PresenceStateSetting__FieldAccessorTable; }
    }
    
    public const int TimeoutSecsFieldNumber = 1;
    private bool hasTimeoutSecs;
    private ulong timeoutSecs_;
    public bool HasTimeoutSecs {
      get { return hasTimeoutSecs; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TimeoutSecs {
      get { return timeoutSecs_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::Hangups.Proto.ClientPresenceStateType type_ = global::Hangups.Proto.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.ClientPresenceStateType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _presenceStateSettingFieldNames;
      if (hasTimeoutSecs) {
        output.WriteUInt64(1, field_names[0], TimeoutSecs);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[1], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, TimeoutSecs);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PresenceStateSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PresenceStateSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PresenceStateSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceStateSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PresenceStateSetting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PresenceStateSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PresenceStateSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PresenceStateSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PresenceStateSetting result;
      
      private PresenceStateSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          PresenceStateSetting original = result;
          result = new PresenceStateSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PresenceStateSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.PresenceStateSetting.Descriptor; }
      }
      
      public override PresenceStateSetting DefaultInstanceForType {
        get { return global::Hangups.Proto.PresenceStateSetting.DefaultInstance; }
      }
      
      public override PresenceStateSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PresenceStateSetting) {
          return MergeFrom((PresenceStateSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PresenceStateSetting other) {
        if (other == global::Hangups.Proto.PresenceStateSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTimeoutSecs) {
          TimeoutSecs = other.TimeoutSecs;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_presenceStateSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _presenceStateSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTimeoutSecs = input.ReadUInt64(ref result.timeoutSecs_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTimeoutSecs {
        get { return result.hasTimeoutSecs; }
      }
      [global::System.CLSCompliant(false)]
      public ulong TimeoutSecs {
        get { return result.TimeoutSecs; }
        set { SetTimeoutSecs(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimeoutSecs(ulong value) {
        PrepareBuilder();
        result.hasTimeoutSecs = true;
        result.timeoutSecs_ = value;
        return this;
      }
      public Builder ClearTimeoutSecs() {
        PrepareBuilder();
        result.hasTimeoutSecs = false;
        result.timeoutSecs_ = 0UL;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.ClientPresenceStateType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.ClientPresenceStateType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.ClientPresenceStateType.CLIENT_PRESENCE_STATE_UNKNOWN;
        return this;
      }
    }
    static PresenceStateSetting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodMessage : pb::GeneratedMessage<MoodMessage, MoodMessage.Builder> {
    private MoodMessage() { }
    private static readonly MoodMessage defaultInstance = new MoodMessage().MakeReadOnly();
    private static readonly string[] _moodMessageFieldNames = new string[] { "mood_content" };
    private static readonly uint[] _moodMessageFieldTags = new uint[] { 10 };
    public static MoodMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MoodMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MoodMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MoodMessage, MoodMessage.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodMessage__FieldAccessorTable; }
    }
    
    public const int MoodContentFieldNumber = 1;
    private bool hasMoodContent;
    private global::Hangups.Proto.MoodContent moodContent_;
    public bool HasMoodContent {
      get { return hasMoodContent; }
    }
    public global::Hangups.Proto.MoodContent MoodContent {
      get { return moodContent_ ?? global::Hangups.Proto.MoodContent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMoodContent) {
          if (!MoodContent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _moodMessageFieldNames;
      if (hasMoodContent) {
        output.WriteMessage(1, field_names[0], MoodContent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMoodContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, MoodContent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MoodMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MoodMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MoodMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MoodMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MoodMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MoodMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MoodMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MoodMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MoodMessage result;
      
      private MoodMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          MoodMessage original = result;
          result = new MoodMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MoodMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.MoodMessage.Descriptor; }
      }
      
      public override MoodMessage DefaultInstanceForType {
        get { return global::Hangups.Proto.MoodMessage.DefaultInstance; }
      }
      
      public override MoodMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MoodMessage) {
          return MergeFrom((MoodMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MoodMessage other) {
        if (other == global::Hangups.Proto.MoodMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMoodContent) {
          MergeMoodContent(other.MoodContent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moodMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moodMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.MoodContent.Builder subBuilder = global::Hangups.Proto.MoodContent.CreateBuilder();
              if (result.hasMoodContent) {
                subBuilder.MergeFrom(MoodContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MoodContent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMoodContent {
       get { return result.hasMoodContent; }
      }
      public global::Hangups.Proto.MoodContent MoodContent {
        get { return result.MoodContent; }
        set { SetMoodContent(value); }
      }
      public Builder SetMoodContent(global::Hangups.Proto.MoodContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMoodContent = true;
        result.moodContent_ = value;
        return this;
      }
      public Builder SetMoodContent(global::Hangups.Proto.MoodContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMoodContent = true;
        result.moodContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMoodContent(global::Hangups.Proto.MoodContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMoodContent &&
            result.moodContent_ != global::Hangups.Proto.MoodContent.DefaultInstance) {
            result.moodContent_ = global::Hangups.Proto.MoodContent.CreateBuilder(result.moodContent_).MergeFrom(value).BuildPartial();
        } else {
          result.moodContent_ = value;
        }
        result.hasMoodContent = true;
        return this;
      }
      public Builder ClearMoodContent() {
        PrepareBuilder();
        result.hasMoodContent = false;
        result.moodContent_ = null;
        return this;
      }
    }
    static MoodMessage() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodContent : pb::GeneratedMessage<MoodContent, MoodContent.Builder> {
    private MoodContent() { }
    private static readonly MoodContent defaultInstance = new MoodContent().MakeReadOnly();
    private static readonly string[] _moodContentFieldNames = new string[] { "segment" };
    private static readonly uint[] _moodContentFieldTags = new uint[] { 10 };
    public static MoodContent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MoodContent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MoodContent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodContent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MoodContent, MoodContent.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodContent__FieldAccessorTable; }
    }
    
    public const int SegmentFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.Segment> segment_ = new pbc::PopsicleList<global::Hangups.Proto.Segment>();
    public scg::IList<global::Hangups.Proto.Segment> SegmentList {
      get { return segment_; }
    }
    public int SegmentCount {
      get { return segment_.Count; }
    }
    public global::Hangups.Proto.Segment GetSegment(int index) {
      return segment_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.Segment element in SegmentList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _moodContentFieldNames;
      if (segment_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], segment_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.Segment element in SegmentList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MoodContent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodContent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodContent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodContent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodContent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodContent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MoodContent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MoodContent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MoodContent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodContent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MoodContent MakeReadOnly() {
      segment_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MoodContent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MoodContent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MoodContent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MoodContent result;
      
      private MoodContent PrepareBuilder() {
        if (resultIsReadOnly) {
          MoodContent original = result;
          result = new MoodContent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MoodContent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.MoodContent.Descriptor; }
      }
      
      public override MoodContent DefaultInstanceForType {
        get { return global::Hangups.Proto.MoodContent.DefaultInstance; }
      }
      
      public override MoodContent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MoodContent) {
          return MergeFrom((MoodContent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MoodContent other) {
        if (other == global::Hangups.Proto.MoodContent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.segment_.Count != 0) {
          result.segment_.Add(other.segment_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moodContentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moodContentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.segment_, global::Hangups.Proto.Segment.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.Segment> SegmentList {
        get { return PrepareBuilder().segment_; }
      }
      public int SegmentCount {
        get { return result.SegmentCount; }
      }
      public global::Hangups.Proto.Segment GetSegment(int index) {
        return result.GetSegment(index);
      }
      public Builder SetSegment(int index, global::Hangups.Proto.Segment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.segment_[index] = value;
        return this;
      }
      public Builder SetSegment(int index, global::Hangups.Proto.Segment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.segment_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSegment(global::Hangups.Proto.Segment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.segment_.Add(value);
        return this;
      }
      public Builder AddSegment(global::Hangups.Proto.Segment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.segment_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSegment(scg::IEnumerable<global::Hangups.Proto.Segment> values) {
        PrepareBuilder();
        result.segment_.Add(values);
        return this;
      }
      public Builder ClearSegment() {
        PrepareBuilder();
        result.segment_.Clear();
        return this;
      }
    }
    static MoodContent() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodSetting : pb::GeneratedMessage<MoodSetting, MoodSetting.Builder> {
    private MoodSetting() { }
    private static readonly MoodSetting defaultInstance = new MoodSetting().MakeReadOnly();
    private static readonly string[] _moodSettingFieldNames = new string[] { "mood_message" };
    private static readonly uint[] _moodSettingFieldTags = new uint[] { 10 };
    public static MoodSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MoodSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MoodSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MoodSetting, MoodSetting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodSetting__FieldAccessorTable; }
    }
    
    public const int MoodMessageFieldNumber = 1;
    private bool hasMoodMessage;
    private global::Hangups.Proto.MoodMessage moodMessage_;
    public bool HasMoodMessage {
      get { return hasMoodMessage; }
    }
    public global::Hangups.Proto.MoodMessage MoodMessage {
      get { return moodMessage_ ?? global::Hangups.Proto.MoodMessage.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMoodMessage) {
          if (!MoodMessage.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _moodSettingFieldNames;
      if (hasMoodMessage) {
        output.WriteMessage(1, field_names[0], MoodMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMoodMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, MoodMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MoodSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MoodSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MoodSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MoodSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MoodSetting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MoodSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MoodSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MoodSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MoodSetting result;
      
      private MoodSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          MoodSetting original = result;
          result = new MoodSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MoodSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.MoodSetting.Descriptor; }
      }
      
      public override MoodSetting DefaultInstanceForType {
        get { return global::Hangups.Proto.MoodSetting.DefaultInstance; }
      }
      
      public override MoodSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MoodSetting) {
          return MergeFrom((MoodSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MoodSetting other) {
        if (other == global::Hangups.Proto.MoodSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMoodMessage) {
          MergeMoodMessage(other.MoodMessage);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moodSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moodSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.MoodMessage.Builder subBuilder = global::Hangups.Proto.MoodMessage.CreateBuilder();
              if (result.hasMoodMessage) {
                subBuilder.MergeFrom(MoodMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MoodMessage = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMoodMessage {
       get { return result.hasMoodMessage; }
      }
      public global::Hangups.Proto.MoodMessage MoodMessage {
        get { return result.MoodMessage; }
        set { SetMoodMessage(value); }
      }
      public Builder SetMoodMessage(global::Hangups.Proto.MoodMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMoodMessage = true;
        result.moodMessage_ = value;
        return this;
      }
      public Builder SetMoodMessage(global::Hangups.Proto.MoodMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMoodMessage = true;
        result.moodMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMoodMessage(global::Hangups.Proto.MoodMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMoodMessage &&
            result.moodMessage_ != global::Hangups.Proto.MoodMessage.DefaultInstance) {
            result.moodMessage_ = global::Hangups.Proto.MoodMessage.CreateBuilder(result.moodMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.moodMessage_ = value;
        }
        result.hasMoodMessage = true;
        return this;
      }
      public Builder ClearMoodMessage() {
        PrepareBuilder();
        result.hasMoodMessage = false;
        result.moodMessage_ = null;
        return this;
      }
    }
    static MoodSetting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MoodState : pb::GeneratedMessage<MoodState, MoodState.Builder> {
    private MoodState() { }
    private static readonly MoodState defaultInstance = new MoodState().MakeReadOnly();
    private static readonly string[] _moodStateFieldNames = new string[] { "mood_setting" };
    private static readonly uint[] _moodStateFieldTags = new uint[] { 34 };
    public static MoodState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MoodState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MoodState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MoodState, MoodState.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_MoodState__FieldAccessorTable; }
    }
    
    public const int MoodSettingFieldNumber = 4;
    private bool hasMoodSetting;
    private global::Hangups.Proto.MoodSetting moodSetting_;
    public bool HasMoodSetting {
      get { return hasMoodSetting; }
    }
    public global::Hangups.Proto.MoodSetting MoodSetting {
      get { return moodSetting_ ?? global::Hangups.Proto.MoodSetting.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMoodSetting) {
          if (!MoodSetting.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _moodStateFieldNames;
      if (hasMoodSetting) {
        output.WriteMessage(4, field_names[0], MoodSetting);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMoodSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, MoodSetting);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MoodState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MoodState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MoodState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MoodState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MoodState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MoodState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MoodState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MoodState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MoodState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MoodState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MoodState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MoodState result;
      
      private MoodState PrepareBuilder() {
        if (resultIsReadOnly) {
          MoodState original = result;
          result = new MoodState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MoodState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.MoodState.Descriptor; }
      }
      
      public override MoodState DefaultInstanceForType {
        get { return global::Hangups.Proto.MoodState.DefaultInstance; }
      }
      
      public override MoodState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MoodState) {
          return MergeFrom((MoodState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MoodState other) {
        if (other == global::Hangups.Proto.MoodState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMoodSetting) {
          MergeMoodSetting(other.MoodSetting);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moodStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moodStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 34: {
              global::Hangups.Proto.MoodSetting.Builder subBuilder = global::Hangups.Proto.MoodSetting.CreateBuilder();
              if (result.hasMoodSetting) {
                subBuilder.MergeFrom(MoodSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MoodSetting = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMoodSetting {
       get { return result.hasMoodSetting; }
      }
      public global::Hangups.Proto.MoodSetting MoodSetting {
        get { return result.MoodSetting; }
        set { SetMoodSetting(value); }
      }
      public Builder SetMoodSetting(global::Hangups.Proto.MoodSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMoodSetting = true;
        result.moodSetting_ = value;
        return this;
      }
      public Builder SetMoodSetting(global::Hangups.Proto.MoodSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMoodSetting = true;
        result.moodSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMoodSetting(global::Hangups.Proto.MoodSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMoodSetting &&
            result.moodSetting_ != global::Hangups.Proto.MoodSetting.DefaultInstance) {
            result.moodSetting_ = global::Hangups.Proto.MoodSetting.CreateBuilder(result.moodSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.moodSetting_ = value;
        }
        result.hasMoodSetting = true;
        return this;
      }
      public Builder ClearMoodSetting() {
        PrepareBuilder();
        result.hasMoodSetting = false;
        result.moodSetting_ = null;
        return this;
      }
    }
    static MoodState() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteAction : pb::GeneratedMessage<DeleteAction, DeleteAction.Builder> {
    private DeleteAction() { }
    private static readonly DeleteAction defaultInstance = new DeleteAction().MakeReadOnly();
    private static readonly string[] _deleteActionFieldNames = new string[] { "delete_action_timestamp", "delete_type", "delete_upper_bound_timestamp" };
    private static readonly uint[] _deleteActionFieldTags = new uint[] { 8, 24, 16 };
    public static DeleteAction DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteAction DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteAction ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteAction__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteAction, DeleteAction.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteAction__FieldAccessorTable; }
    }
    
    public const int DeleteActionTimestampFieldNumber = 1;
    private bool hasDeleteActionTimestamp;
    private ulong deleteActionTimestamp_;
    public bool HasDeleteActionTimestamp {
      get { return hasDeleteActionTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeleteActionTimestamp {
      get { return deleteActionTimestamp_; }
    }
    
    public const int DeleteUpperBoundTimestampFieldNumber = 2;
    private bool hasDeleteUpperBoundTimestamp;
    private ulong deleteUpperBoundTimestamp_;
    public bool HasDeleteUpperBoundTimestamp {
      get { return hasDeleteUpperBoundTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeleteUpperBoundTimestamp {
      get { return deleteUpperBoundTimestamp_; }
    }
    
    public const int DeleteTypeFieldNumber = 3;
    private bool hasDeleteType;
    private global::Hangups.Proto.DeleteType deleteType_ = global::Hangups.Proto.DeleteType.DELETE_TYPE_UNKNOWN;
    public bool HasDeleteType {
      get { return hasDeleteType; }
    }
    public global::Hangups.Proto.DeleteType DeleteType {
      get { return deleteType_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteActionFieldNames;
      if (hasDeleteActionTimestamp) {
        output.WriteUInt64(1, field_names[0], DeleteActionTimestamp);
      }
      if (hasDeleteUpperBoundTimestamp) {
        output.WriteUInt64(2, field_names[2], DeleteUpperBoundTimestamp);
      }
      if (hasDeleteType) {
        output.WriteEnum(3, field_names[1], (int) DeleteType, DeleteType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDeleteActionTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, DeleteActionTimestamp);
      }
      if (hasDeleteUpperBoundTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, DeleteUpperBoundTimestamp);
      }
      if (hasDeleteType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) DeleteType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteAction ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteAction ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteAction ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteAction ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteAction ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteAction ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteAction ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteAction ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteAction ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteAction ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteAction MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteAction prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteAction, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteAction cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteAction result;
      
      private DeleteAction PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteAction original = result;
          result = new DeleteAction();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteAction MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeleteAction.Descriptor; }
      }
      
      public override DeleteAction DefaultInstanceForType {
        get { return global::Hangups.Proto.DeleteAction.DefaultInstance; }
      }
      
      public override DeleteAction BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteAction) {
          return MergeFrom((DeleteAction) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteAction other) {
        if (other == global::Hangups.Proto.DeleteAction.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDeleteActionTimestamp) {
          DeleteActionTimestamp = other.DeleteActionTimestamp;
        }
        if (other.HasDeleteUpperBoundTimestamp) {
          DeleteUpperBoundTimestamp = other.DeleteUpperBoundTimestamp;
        }
        if (other.HasDeleteType) {
          DeleteType = other.DeleteType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteActionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteActionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDeleteActionTimestamp = input.ReadUInt64(ref result.deleteActionTimestamp_);
              break;
            }
            case 16: {
              result.hasDeleteUpperBoundTimestamp = input.ReadUInt64(ref result.deleteUpperBoundTimestamp_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.deleteType_, out unknown)) {
                result.hasDeleteType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDeleteActionTimestamp {
        get { return result.hasDeleteActionTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong DeleteActionTimestamp {
        get { return result.DeleteActionTimestamp; }
        set { SetDeleteActionTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDeleteActionTimestamp(ulong value) {
        PrepareBuilder();
        result.hasDeleteActionTimestamp = true;
        result.deleteActionTimestamp_ = value;
        return this;
      }
      public Builder ClearDeleteActionTimestamp() {
        PrepareBuilder();
        result.hasDeleteActionTimestamp = false;
        result.deleteActionTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasDeleteUpperBoundTimestamp {
        get { return result.hasDeleteUpperBoundTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong DeleteUpperBoundTimestamp {
        get { return result.DeleteUpperBoundTimestamp; }
        set { SetDeleteUpperBoundTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDeleteUpperBoundTimestamp(ulong value) {
        PrepareBuilder();
        result.hasDeleteUpperBoundTimestamp = true;
        result.deleteUpperBoundTimestamp_ = value;
        return this;
      }
      public Builder ClearDeleteUpperBoundTimestamp() {
        PrepareBuilder();
        result.hasDeleteUpperBoundTimestamp = false;
        result.deleteUpperBoundTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasDeleteType {
       get { return result.hasDeleteType; }
      }
      public global::Hangups.Proto.DeleteType DeleteType {
        get { return result.DeleteType; }
        set { SetDeleteType(value); }
      }
      public Builder SetDeleteType(global::Hangups.Proto.DeleteType value) {
        PrepareBuilder();
        result.hasDeleteType = true;
        result.deleteType_ = value;
        return this;
      }
      public Builder ClearDeleteType() {
        PrepareBuilder();
        result.hasDeleteType = false;
        result.deleteType_ = global::Hangups.Proto.DeleteType.DELETE_TYPE_UNKNOWN;
        return this;
      }
    }
    static DeleteAction() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InviteeID : pb::GeneratedMessage<InviteeID, InviteeID.Builder> {
    private InviteeID() { }
    private static readonly InviteeID defaultInstance = new InviteeID().MakeReadOnly();
    private static readonly string[] _inviteeIDFieldNames = new string[] { "fallback_name", "gaia_id" };
    private static readonly uint[] _inviteeIDFieldTags = new uint[] { 34, 10 };
    public static InviteeID DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InviteeID DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InviteeID ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_InviteeID__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InviteeID, InviteeID.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_InviteeID__FieldAccessorTable; }
    }
    
    public const int GaiaIdFieldNumber = 1;
    private bool hasGaiaId;
    private string gaiaId_ = "";
    public bool HasGaiaId {
      get { return hasGaiaId; }
    }
    public string GaiaId {
      get { return gaiaId_; }
    }
    
    public const int FallbackNameFieldNumber = 4;
    private bool hasFallbackName;
    private string fallbackName_ = "";
    public bool HasFallbackName {
      get { return hasFallbackName; }
    }
    public string FallbackName {
      get { return fallbackName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inviteeIDFieldNames;
      if (hasGaiaId) {
        output.WriteString(1, field_names[1], GaiaId);
      }
      if (hasFallbackName) {
        output.WriteString(4, field_names[0], FallbackName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGaiaId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GaiaId);
      }
      if (hasFallbackName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, FallbackName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InviteeID ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviteeID ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviteeID ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviteeID ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviteeID ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviteeID ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InviteeID ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InviteeID ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InviteeID ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviteeID ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InviteeID MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InviteeID prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InviteeID, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InviteeID cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InviteeID result;
      
      private InviteeID PrepareBuilder() {
        if (resultIsReadOnly) {
          InviteeID original = result;
          result = new InviteeID();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InviteeID MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.InviteeID.Descriptor; }
      }
      
      public override InviteeID DefaultInstanceForType {
        get { return global::Hangups.Proto.InviteeID.DefaultInstance; }
      }
      
      public override InviteeID BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InviteeID) {
          return MergeFrom((InviteeID) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InviteeID other) {
        if (other == global::Hangups.Proto.InviteeID.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGaiaId) {
          GaiaId = other.GaiaId;
        }
        if (other.HasFallbackName) {
          FallbackName = other.FallbackName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inviteeIDFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inviteeIDFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGaiaId = input.ReadString(ref result.gaiaId_);
              break;
            }
            case 34: {
              result.hasFallbackName = input.ReadString(ref result.fallbackName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGaiaId {
        get { return result.hasGaiaId; }
      }
      public string GaiaId {
        get { return result.GaiaId; }
        set { SetGaiaId(value); }
      }
      public Builder SetGaiaId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGaiaId = true;
        result.gaiaId_ = value;
        return this;
      }
      public Builder ClearGaiaId() {
        PrepareBuilder();
        result.hasGaiaId = false;
        result.gaiaId_ = "";
        return this;
      }
      
      public bool HasFallbackName {
        get { return result.hasFallbackName; }
      }
      public string FallbackName {
        get { return result.FallbackName; }
        set { SetFallbackName(value); }
      }
      public Builder SetFallbackName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFallbackName = true;
        result.fallbackName_ = value;
        return this;
      }
      public Builder ClearFallbackName() {
        PrepareBuilder();
        result.hasFallbackName = false;
        result.fallbackName_ = "";
        return this;
      }
    }
    static InviteeID() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Country : pb::GeneratedMessage<Country, Country.Builder> {
    private Country() { }
    private static readonly Country defaultInstance = new Country().MakeReadOnly();
    private static readonly string[] _countryFieldNames = new string[] { "country_code", "region_code" };
    private static readonly uint[] _countryFieldTags = new uint[] { 16, 10 };
    public static Country DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Country DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Country ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Country__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Country, Country.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Country__FieldAccessorTable; }
    }
    
    public const int RegionCodeFieldNumber = 1;
    private bool hasRegionCode;
    private string regionCode_ = "";
    public bool HasRegionCode {
      get { return hasRegionCode; }
    }
    public string RegionCode {
      get { return regionCode_; }
    }
    
    public const int CountryCodeFieldNumber = 2;
    private bool hasCountryCode;
    private ulong countryCode_;
    public bool HasCountryCode {
      get { return hasCountryCode; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CountryCode {
      get { return countryCode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _countryFieldNames;
      if (hasRegionCode) {
        output.WriteString(1, field_names[1], RegionCode);
      }
      if (hasCountryCode) {
        output.WriteUInt64(2, field_names[0], CountryCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRegionCode) {
        size += pb::CodedOutputStream.ComputeStringSize(1, RegionCode);
      }
      if (hasCountryCode) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, CountryCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Country ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Country ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Country ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Country ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Country ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Country ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Country ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Country ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Country ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Country ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Country MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Country prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Country, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Country cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Country result;
      
      private Country PrepareBuilder() {
        if (resultIsReadOnly) {
          Country original = result;
          result = new Country();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Country MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Country.Descriptor; }
      }
      
      public override Country DefaultInstanceForType {
        get { return global::Hangups.Proto.Country.DefaultInstance; }
      }
      
      public override Country BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Country) {
          return MergeFrom((Country) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Country other) {
        if (other == global::Hangups.Proto.Country.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRegionCode) {
          RegionCode = other.RegionCode;
        }
        if (other.HasCountryCode) {
          CountryCode = other.CountryCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_countryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _countryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRegionCode = input.ReadString(ref result.regionCode_);
              break;
            }
            case 16: {
              result.hasCountryCode = input.ReadUInt64(ref result.countryCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRegionCode {
        get { return result.hasRegionCode; }
      }
      public string RegionCode {
        get { return result.RegionCode; }
        set { SetRegionCode(value); }
      }
      public Builder SetRegionCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRegionCode = true;
        result.regionCode_ = value;
        return this;
      }
      public Builder ClearRegionCode() {
        PrepareBuilder();
        result.hasRegionCode = false;
        result.regionCode_ = "";
        return this;
      }
      
      public bool HasCountryCode {
        get { return result.hasCountryCode; }
      }
      [global::System.CLSCompliant(false)]
      public ulong CountryCode {
        get { return result.CountryCode; }
        set { SetCountryCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCountryCode(ulong value) {
        PrepareBuilder();
        result.hasCountryCode = true;
        result.countryCode_ = value;
        return this;
      }
      public Builder ClearCountryCode() {
        PrepareBuilder();
        result.hasCountryCode = false;
        result.countryCode_ = 0UL;
        return this;
      }
    }
    static Country() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DesktopSoundSetting : pb::GeneratedMessage<DesktopSoundSetting, DesktopSoundSetting.Builder> {
    private DesktopSoundSetting() { }
    private static readonly DesktopSoundSetting defaultInstance = new DesktopSoundSetting().MakeReadOnly();
    private static readonly string[] _desktopSoundSettingFieldNames = new string[] { "desktop_ring_sound_state", "desktop_sound_state" };
    private static readonly uint[] _desktopSoundSettingFieldTags = new uint[] { 16, 8 };
    public static DesktopSoundSetting DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DesktopSoundSetting DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DesktopSoundSetting ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DesktopSoundSetting__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DesktopSoundSetting, DesktopSoundSetting.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DesktopSoundSetting__FieldAccessorTable; }
    }
    
    public const int DesktopSoundStateFieldNumber = 1;
    private bool hasDesktopSoundState;
    private global::Hangups.Proto.SoundState desktopSoundState_ = global::Hangups.Proto.SoundState.SOUND_STATE_UNKNOWN;
    public bool HasDesktopSoundState {
      get { return hasDesktopSoundState; }
    }
    public global::Hangups.Proto.SoundState DesktopSoundState {
      get { return desktopSoundState_; }
    }
    
    public const int DesktopRingSoundStateFieldNumber = 2;
    private bool hasDesktopRingSoundState;
    private global::Hangups.Proto.SoundState desktopRingSoundState_ = global::Hangups.Proto.SoundState.SOUND_STATE_UNKNOWN;
    public bool HasDesktopRingSoundState {
      get { return hasDesktopRingSoundState; }
    }
    public global::Hangups.Proto.SoundState DesktopRingSoundState {
      get { return desktopRingSoundState_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _desktopSoundSettingFieldNames;
      if (hasDesktopSoundState) {
        output.WriteEnum(1, field_names[1], (int) DesktopSoundState, DesktopSoundState);
      }
      if (hasDesktopRingSoundState) {
        output.WriteEnum(2, field_names[0], (int) DesktopRingSoundState, DesktopRingSoundState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDesktopSoundState) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) DesktopSoundState);
      }
      if (hasDesktopRingSoundState) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) DesktopRingSoundState);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DesktopSoundSetting ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DesktopSoundSetting ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DesktopSoundSetting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DesktopSoundSetting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DesktopSoundSetting MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DesktopSoundSetting prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DesktopSoundSetting, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DesktopSoundSetting cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DesktopSoundSetting result;
      
      private DesktopSoundSetting PrepareBuilder() {
        if (resultIsReadOnly) {
          DesktopSoundSetting original = result;
          result = new DesktopSoundSetting();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DesktopSoundSetting MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DesktopSoundSetting.Descriptor; }
      }
      
      public override DesktopSoundSetting DefaultInstanceForType {
        get { return global::Hangups.Proto.DesktopSoundSetting.DefaultInstance; }
      }
      
      public override DesktopSoundSetting BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DesktopSoundSetting) {
          return MergeFrom((DesktopSoundSetting) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DesktopSoundSetting other) {
        if (other == global::Hangups.Proto.DesktopSoundSetting.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDesktopSoundState) {
          DesktopSoundState = other.DesktopSoundState;
        }
        if (other.HasDesktopRingSoundState) {
          DesktopRingSoundState = other.DesktopRingSoundState;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_desktopSoundSettingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _desktopSoundSettingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.desktopSoundState_, out unknown)) {
                result.hasDesktopSoundState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.desktopRingSoundState_, out unknown)) {
                result.hasDesktopRingSoundState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDesktopSoundState {
       get { return result.hasDesktopSoundState; }
      }
      public global::Hangups.Proto.SoundState DesktopSoundState {
        get { return result.DesktopSoundState; }
        set { SetDesktopSoundState(value); }
      }
      public Builder SetDesktopSoundState(global::Hangups.Proto.SoundState value) {
        PrepareBuilder();
        result.hasDesktopSoundState = true;
        result.desktopSoundState_ = value;
        return this;
      }
      public Builder ClearDesktopSoundState() {
        PrepareBuilder();
        result.hasDesktopSoundState = false;
        result.desktopSoundState_ = global::Hangups.Proto.SoundState.SOUND_STATE_UNKNOWN;
        return this;
      }
      
      public bool HasDesktopRingSoundState {
       get { return result.hasDesktopRingSoundState; }
      }
      public global::Hangups.Proto.SoundState DesktopRingSoundState {
        get { return result.DesktopRingSoundState; }
        set { SetDesktopRingSoundState(value); }
      }
      public Builder SetDesktopRingSoundState(global::Hangups.Proto.SoundState value) {
        PrepareBuilder();
        result.hasDesktopRingSoundState = true;
        result.desktopRingSoundState_ = value;
        return this;
      }
      public Builder ClearDesktopRingSoundState() {
        PrepareBuilder();
        result.hasDesktopRingSoundState = false;
        result.desktopRingSoundState_ = global::Hangups.Proto.SoundState.SOUND_STATE_UNKNOWN;
        return this;
      }
    }
    static DesktopSoundSetting() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PhoneData : pb::GeneratedMessage<PhoneData, PhoneData.Builder> {
    private PhoneData() { }
    private static readonly PhoneData defaultInstance = new PhoneData().MakeReadOnly();
    private static readonly string[] _phoneDataFieldNames = new string[] { "caller_id_settings_mask", "phone" };
    private static readonly uint[] _phoneDataFieldTags = new uint[] { 24, 10 };
    public static PhoneData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PhoneData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PhoneData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_PhoneData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PhoneData, PhoneData.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_PhoneData__FieldAccessorTable; }
    }
    
    public const int PhoneFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.Phone> phone_ = new pbc::PopsicleList<global::Hangups.Proto.Phone>();
    public scg::IList<global::Hangups.Proto.Phone> PhoneList {
      get { return phone_; }
    }
    public int PhoneCount {
      get { return phone_.Count; }
    }
    public global::Hangups.Proto.Phone GetPhone(int index) {
      return phone_[index];
    }
    
    public const int CallerIdSettingsMaskFieldNumber = 3;
    private bool hasCallerIdSettingsMask;
    private global::Hangups.Proto.CallerIdSettingsMask callerIdSettingsMask_ = global::Hangups.Proto.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN;
    public bool HasCallerIdSettingsMask {
      get { return hasCallerIdSettingsMask; }
    }
    public global::Hangups.Proto.CallerIdSettingsMask CallerIdSettingsMask {
      get { return callerIdSettingsMask_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _phoneDataFieldNames;
      if (phone_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], phone_);
      }
      if (hasCallerIdSettingsMask) {
        output.WriteEnum(3, field_names[0], (int) CallerIdSettingsMask, CallerIdSettingsMask);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.Phone element in PhoneList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasCallerIdSettingsMask) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) CallerIdSettingsMask);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PhoneData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PhoneData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PhoneData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PhoneData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PhoneData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PhoneData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PhoneData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PhoneData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PhoneData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PhoneData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PhoneData MakeReadOnly() {
      phone_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PhoneData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PhoneData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PhoneData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PhoneData result;
      
      private PhoneData PrepareBuilder() {
        if (resultIsReadOnly) {
          PhoneData original = result;
          result = new PhoneData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PhoneData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.PhoneData.Descriptor; }
      }
      
      public override PhoneData DefaultInstanceForType {
        get { return global::Hangups.Proto.PhoneData.DefaultInstance; }
      }
      
      public override PhoneData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PhoneData) {
          return MergeFrom((PhoneData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PhoneData other) {
        if (other == global::Hangups.Proto.PhoneData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.phone_.Count != 0) {
          result.phone_.Add(other.phone_);
        }
        if (other.HasCallerIdSettingsMask) {
          CallerIdSettingsMask = other.CallerIdSettingsMask;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_phoneDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _phoneDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.phone_, global::Hangups.Proto.Phone.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.callerIdSettingsMask_, out unknown)) {
                result.hasCallerIdSettingsMask = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.Phone> PhoneList {
        get { return PrepareBuilder().phone_; }
      }
      public int PhoneCount {
        get { return result.PhoneCount; }
      }
      public global::Hangups.Proto.Phone GetPhone(int index) {
        return result.GetPhone(index);
      }
      public Builder SetPhone(int index, global::Hangups.Proto.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.phone_[index] = value;
        return this;
      }
      public Builder SetPhone(int index, global::Hangups.Proto.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.phone_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPhone(global::Hangups.Proto.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.phone_.Add(value);
        return this;
      }
      public Builder AddPhone(global::Hangups.Proto.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.phone_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePhone(scg::IEnumerable<global::Hangups.Proto.Phone> values) {
        PrepareBuilder();
        result.phone_.Add(values);
        return this;
      }
      public Builder ClearPhone() {
        PrepareBuilder();
        result.phone_.Clear();
        return this;
      }
      
      public bool HasCallerIdSettingsMask {
       get { return result.hasCallerIdSettingsMask; }
      }
      public global::Hangups.Proto.CallerIdSettingsMask CallerIdSettingsMask {
        get { return result.CallerIdSettingsMask; }
        set { SetCallerIdSettingsMask(value); }
      }
      public Builder SetCallerIdSettingsMask(global::Hangups.Proto.CallerIdSettingsMask value) {
        PrepareBuilder();
        result.hasCallerIdSettingsMask = true;
        result.callerIdSettingsMask_ = value;
        return this;
      }
      public Builder ClearCallerIdSettingsMask() {
        PrepareBuilder();
        result.hasCallerIdSettingsMask = false;
        result.callerIdSettingsMask_ = global::Hangups.Proto.CallerIdSettingsMask.CALLER_ID_SETTINGS_MASK_UNKNOWN;
        return this;
      }
    }
    static PhoneData() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Phone : pb::GeneratedMessage<Phone, Phone.Builder> {
    private Phone() { }
    private static readonly Phone defaultInstance = new Phone().MakeReadOnly();
    private static readonly string[] _phoneFieldNames = new string[] { "discoverability_status", "discoverable", "google_voice", "phone_number", "primary", "verification_status" };
    private static readonly uint[] _phoneFieldTags = new uint[] { 40, 32, 16, 10, 48, 24 };
    public static Phone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Phone DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Phone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_Phone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Phone, Phone.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_Phone__FieldAccessorTable; }
    }
    
    public const int PhoneNumberFieldNumber = 1;
    private bool hasPhoneNumber;
    private global::Hangups.Proto.PhoneNumber phoneNumber_;
    public bool HasPhoneNumber {
      get { return hasPhoneNumber; }
    }
    public global::Hangups.Proto.PhoneNumber PhoneNumber {
      get { return phoneNumber_ ?? global::Hangups.Proto.PhoneNumber.DefaultInstance; }
    }
    
    public const int GoogleVoiceFieldNumber = 2;
    private bool hasGoogleVoice;
    private bool googleVoice_;
    public bool HasGoogleVoice {
      get { return hasGoogleVoice; }
    }
    public bool GoogleVoice {
      get { return googleVoice_; }
    }
    
    public const int VerificationStatusFieldNumber = 3;
    private bool hasVerificationStatus;
    private global::Hangups.Proto.PhoneVerificationStatus verificationStatus_ = global::Hangups.Proto.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN;
    public bool HasVerificationStatus {
      get { return hasVerificationStatus; }
    }
    public global::Hangups.Proto.PhoneVerificationStatus VerificationStatus {
      get { return verificationStatus_; }
    }
    
    public const int DiscoverableFieldNumber = 4;
    private bool hasDiscoverable;
    private bool discoverable_;
    public bool HasDiscoverable {
      get { return hasDiscoverable; }
    }
    public bool Discoverable {
      get { return discoverable_; }
    }
    
    public const int DiscoverabilityStatusFieldNumber = 5;
    private bool hasDiscoverabilityStatus;
    private global::Hangups.Proto.PhoneDiscoverabilityStatus discoverabilityStatus_ = global::Hangups.Proto.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN;
    public bool HasDiscoverabilityStatus {
      get { return hasDiscoverabilityStatus; }
    }
    public global::Hangups.Proto.PhoneDiscoverabilityStatus DiscoverabilityStatus {
      get { return discoverabilityStatus_; }
    }
    
    public const int PrimaryFieldNumber = 6;
    private bool hasPrimary;
    private bool primary_;
    public bool HasPrimary {
      get { return hasPrimary; }
    }
    public bool Primary {
      get { return primary_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _phoneFieldNames;
      if (hasPhoneNumber) {
        output.WriteMessage(1, field_names[3], PhoneNumber);
      }
      if (hasGoogleVoice) {
        output.WriteBool(2, field_names[2], GoogleVoice);
      }
      if (hasVerificationStatus) {
        output.WriteEnum(3, field_names[5], (int) VerificationStatus, VerificationStatus);
      }
      if (hasDiscoverable) {
        output.WriteBool(4, field_names[1], Discoverable);
      }
      if (hasDiscoverabilityStatus) {
        output.WriteEnum(5, field_names[0], (int) DiscoverabilityStatus, DiscoverabilityStatus);
      }
      if (hasPrimary) {
        output.WriteBool(6, field_names[4], Primary);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPhoneNumber) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, PhoneNumber);
      }
      if (hasGoogleVoice) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, GoogleVoice);
      }
      if (hasVerificationStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) VerificationStatus);
      }
      if (hasDiscoverable) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, Discoverable);
      }
      if (hasDiscoverabilityStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) DiscoverabilityStatus);
      }
      if (hasPrimary) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, Primary);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Phone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Phone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Phone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Phone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Phone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Phone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Phone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Phone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Phone ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Phone ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Phone MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Phone prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Phone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Phone cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Phone result;
      
      private Phone PrepareBuilder() {
        if (resultIsReadOnly) {
          Phone original = result;
          result = new Phone();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Phone MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.Phone.Descriptor; }
      }
      
      public override Phone DefaultInstanceForType {
        get { return global::Hangups.Proto.Phone.DefaultInstance; }
      }
      
      public override Phone BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Phone) {
          return MergeFrom((Phone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Phone other) {
        if (other == global::Hangups.Proto.Phone.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPhoneNumber) {
          MergePhoneNumber(other.PhoneNumber);
        }
        if (other.HasGoogleVoice) {
          GoogleVoice = other.GoogleVoice;
        }
        if (other.HasVerificationStatus) {
          VerificationStatus = other.VerificationStatus;
        }
        if (other.HasDiscoverable) {
          Discoverable = other.Discoverable;
        }
        if (other.HasDiscoverabilityStatus) {
          DiscoverabilityStatus = other.DiscoverabilityStatus;
        }
        if (other.HasPrimary) {
          Primary = other.Primary;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_phoneFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _phoneFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.PhoneNumber.Builder subBuilder = global::Hangups.Proto.PhoneNumber.CreateBuilder();
              if (result.hasPhoneNumber) {
                subBuilder.MergeFrom(PhoneNumber);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PhoneNumber = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasGoogleVoice = input.ReadBool(ref result.googleVoice_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.verificationStatus_, out unknown)) {
                result.hasVerificationStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasDiscoverable = input.ReadBool(ref result.discoverable_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.discoverabilityStatus_, out unknown)) {
                result.hasDiscoverabilityStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 48: {
              result.hasPrimary = input.ReadBool(ref result.primary_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPhoneNumber {
       get { return result.hasPhoneNumber; }
      }
      public global::Hangups.Proto.PhoneNumber PhoneNumber {
        get { return result.PhoneNumber; }
        set { SetPhoneNumber(value); }
      }
      public Builder SetPhoneNumber(global::Hangups.Proto.PhoneNumber value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhoneNumber = true;
        result.phoneNumber_ = value;
        return this;
      }
      public Builder SetPhoneNumber(global::Hangups.Proto.PhoneNumber.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPhoneNumber = true;
        result.phoneNumber_ = builderForValue.Build();
        return this;
      }
      public Builder MergePhoneNumber(global::Hangups.Proto.PhoneNumber value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPhoneNumber &&
            result.phoneNumber_ != global::Hangups.Proto.PhoneNumber.DefaultInstance) {
            result.phoneNumber_ = global::Hangups.Proto.PhoneNumber.CreateBuilder(result.phoneNumber_).MergeFrom(value).BuildPartial();
        } else {
          result.phoneNumber_ = value;
        }
        result.hasPhoneNumber = true;
        return this;
      }
      public Builder ClearPhoneNumber() {
        PrepareBuilder();
        result.hasPhoneNumber = false;
        result.phoneNumber_ = null;
        return this;
      }
      
      public bool HasGoogleVoice {
        get { return result.hasGoogleVoice; }
      }
      public bool GoogleVoice {
        get { return result.GoogleVoice; }
        set { SetGoogleVoice(value); }
      }
      public Builder SetGoogleVoice(bool value) {
        PrepareBuilder();
        result.hasGoogleVoice = true;
        result.googleVoice_ = value;
        return this;
      }
      public Builder ClearGoogleVoice() {
        PrepareBuilder();
        result.hasGoogleVoice = false;
        result.googleVoice_ = false;
        return this;
      }
      
      public bool HasVerificationStatus {
       get { return result.hasVerificationStatus; }
      }
      public global::Hangups.Proto.PhoneVerificationStatus VerificationStatus {
        get { return result.VerificationStatus; }
        set { SetVerificationStatus(value); }
      }
      public Builder SetVerificationStatus(global::Hangups.Proto.PhoneVerificationStatus value) {
        PrepareBuilder();
        result.hasVerificationStatus = true;
        result.verificationStatus_ = value;
        return this;
      }
      public Builder ClearVerificationStatus() {
        PrepareBuilder();
        result.hasVerificationStatus = false;
        result.verificationStatus_ = global::Hangups.Proto.PhoneVerificationStatus.PHONE_VERIFICATION_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasDiscoverable {
        get { return result.hasDiscoverable; }
      }
      public bool Discoverable {
        get { return result.Discoverable; }
        set { SetDiscoverable(value); }
      }
      public Builder SetDiscoverable(bool value) {
        PrepareBuilder();
        result.hasDiscoverable = true;
        result.discoverable_ = value;
        return this;
      }
      public Builder ClearDiscoverable() {
        PrepareBuilder();
        result.hasDiscoverable = false;
        result.discoverable_ = false;
        return this;
      }
      
      public bool HasDiscoverabilityStatus {
       get { return result.hasDiscoverabilityStatus; }
      }
      public global::Hangups.Proto.PhoneDiscoverabilityStatus DiscoverabilityStatus {
        get { return result.DiscoverabilityStatus; }
        set { SetDiscoverabilityStatus(value); }
      }
      public Builder SetDiscoverabilityStatus(global::Hangups.Proto.PhoneDiscoverabilityStatus value) {
        PrepareBuilder();
        result.hasDiscoverabilityStatus = true;
        result.discoverabilityStatus_ = value;
        return this;
      }
      public Builder ClearDiscoverabilityStatus() {
        PrepareBuilder();
        result.hasDiscoverabilityStatus = false;
        result.discoverabilityStatus_ = global::Hangups.Proto.PhoneDiscoverabilityStatus.PHONE_DISCOVERABILITY_STATUS_UNKNOWN;
        return this;
      }
      
      public bool HasPrimary {
        get { return result.hasPrimary; }
      }
      public bool Primary {
        get { return result.Primary; }
        set { SetPrimary(value); }
      }
      public Builder SetPrimary(bool value) {
        PrepareBuilder();
        result.hasPrimary = true;
        result.primary_ = value;
        return this;
      }
      public Builder ClearPrimary() {
        PrepareBuilder();
        result.hasPrimary = false;
        result.primary_ = false;
        return this;
      }
    }
    static Phone() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class I18nData : pb::GeneratedMessage<I18nData, I18nData.Builder> {
    private I18nData() { }
    private static readonly I18nData defaultInstance = new I18nData().MakeReadOnly();
    private static readonly string[] _i18NDataFieldNames = new string[] { "country_code", "international_number", "is_valid", "national_number", "region_code", "validation_result" };
    private static readonly uint[] _i18NDataFieldTags = new uint[] { 24, 18, 40, 10, 34, 48 };
    public static I18nData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override I18nData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override I18nData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_I18nData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<I18nData, I18nData.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_I18nData__FieldAccessorTable; }
    }
    
    public const int NationalNumberFieldNumber = 1;
    private bool hasNationalNumber;
    private string nationalNumber_ = "";
    public bool HasNationalNumber {
      get { return hasNationalNumber; }
    }
    public string NationalNumber {
      get { return nationalNumber_; }
    }
    
    public const int InternationalNumberFieldNumber = 2;
    private bool hasInternationalNumber;
    private string internationalNumber_ = "";
    public bool HasInternationalNumber {
      get { return hasInternationalNumber; }
    }
    public string InternationalNumber {
      get { return internationalNumber_; }
    }
    
    public const int CountryCodeFieldNumber = 3;
    private bool hasCountryCode;
    private ulong countryCode_;
    public bool HasCountryCode {
      get { return hasCountryCode; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CountryCode {
      get { return countryCode_; }
    }
    
    public const int RegionCodeFieldNumber = 4;
    private bool hasRegionCode;
    private string regionCode_ = "";
    public bool HasRegionCode {
      get { return hasRegionCode; }
    }
    public string RegionCode {
      get { return regionCode_; }
    }
    
    public const int IsValidFieldNumber = 5;
    private bool hasIsValid;
    private bool isValid_;
    public bool HasIsValid {
      get { return hasIsValid; }
    }
    public bool IsValid {
      get { return isValid_; }
    }
    
    public const int ValidationResultFieldNumber = 6;
    private bool hasValidationResult;
    private global::Hangups.Proto.PhoneValidationResult validationResult_ = global::Hangups.Proto.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE;
    public bool HasValidationResult {
      get { return hasValidationResult; }
    }
    public global::Hangups.Proto.PhoneValidationResult ValidationResult {
      get { return validationResult_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _i18NDataFieldNames;
      if (hasNationalNumber) {
        output.WriteString(1, field_names[3], NationalNumber);
      }
      if (hasInternationalNumber) {
        output.WriteString(2, field_names[1], InternationalNumber);
      }
      if (hasCountryCode) {
        output.WriteUInt64(3, field_names[0], CountryCode);
      }
      if (hasRegionCode) {
        output.WriteString(4, field_names[4], RegionCode);
      }
      if (hasIsValid) {
        output.WriteBool(5, field_names[2], IsValid);
      }
      if (hasValidationResult) {
        output.WriteEnum(6, field_names[5], (int) ValidationResult, ValidationResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNationalNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(1, NationalNumber);
      }
      if (hasInternationalNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(2, InternationalNumber);
      }
      if (hasCountryCode) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, CountryCode);
      }
      if (hasRegionCode) {
        size += pb::CodedOutputStream.ComputeStringSize(4, RegionCode);
      }
      if (hasIsValid) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IsValid);
      }
      if (hasValidationResult) {
        size += pb::CodedOutputStream.ComputeEnumSize(6, (int) ValidationResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static I18nData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static I18nData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static I18nData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static I18nData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static I18nData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static I18nData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static I18nData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static I18nData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static I18nData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static I18nData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private I18nData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(I18nData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<I18nData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(I18nData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private I18nData result;
      
      private I18nData PrepareBuilder() {
        if (resultIsReadOnly) {
          I18nData original = result;
          result = new I18nData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override I18nData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.I18nData.Descriptor; }
      }
      
      public override I18nData DefaultInstanceForType {
        get { return global::Hangups.Proto.I18nData.DefaultInstance; }
      }
      
      public override I18nData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is I18nData) {
          return MergeFrom((I18nData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(I18nData other) {
        if (other == global::Hangups.Proto.I18nData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNationalNumber) {
          NationalNumber = other.NationalNumber;
        }
        if (other.HasInternationalNumber) {
          InternationalNumber = other.InternationalNumber;
        }
        if (other.HasCountryCode) {
          CountryCode = other.CountryCode;
        }
        if (other.HasRegionCode) {
          RegionCode = other.RegionCode;
        }
        if (other.HasIsValid) {
          IsValid = other.IsValid;
        }
        if (other.HasValidationResult) {
          ValidationResult = other.ValidationResult;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_i18NDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _i18NDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNationalNumber = input.ReadString(ref result.nationalNumber_);
              break;
            }
            case 18: {
              result.hasInternationalNumber = input.ReadString(ref result.internationalNumber_);
              break;
            }
            case 24: {
              result.hasCountryCode = input.ReadUInt64(ref result.countryCode_);
              break;
            }
            case 34: {
              result.hasRegionCode = input.ReadString(ref result.regionCode_);
              break;
            }
            case 40: {
              result.hasIsValid = input.ReadBool(ref result.isValid_);
              break;
            }
            case 48: {
              object unknown;
              if(input.ReadEnum(ref result.validationResult_, out unknown)) {
                result.hasValidationResult = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(6, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNationalNumber {
        get { return result.hasNationalNumber; }
      }
      public string NationalNumber {
        get { return result.NationalNumber; }
        set { SetNationalNumber(value); }
      }
      public Builder SetNationalNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNationalNumber = true;
        result.nationalNumber_ = value;
        return this;
      }
      public Builder ClearNationalNumber() {
        PrepareBuilder();
        result.hasNationalNumber = false;
        result.nationalNumber_ = "";
        return this;
      }
      
      public bool HasInternationalNumber {
        get { return result.hasInternationalNumber; }
      }
      public string InternationalNumber {
        get { return result.InternationalNumber; }
        set { SetInternationalNumber(value); }
      }
      public Builder SetInternationalNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInternationalNumber = true;
        result.internationalNumber_ = value;
        return this;
      }
      public Builder ClearInternationalNumber() {
        PrepareBuilder();
        result.hasInternationalNumber = false;
        result.internationalNumber_ = "";
        return this;
      }
      
      public bool HasCountryCode {
        get { return result.hasCountryCode; }
      }
      [global::System.CLSCompliant(false)]
      public ulong CountryCode {
        get { return result.CountryCode; }
        set { SetCountryCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCountryCode(ulong value) {
        PrepareBuilder();
        result.hasCountryCode = true;
        result.countryCode_ = value;
        return this;
      }
      public Builder ClearCountryCode() {
        PrepareBuilder();
        result.hasCountryCode = false;
        result.countryCode_ = 0UL;
        return this;
      }
      
      public bool HasRegionCode {
        get { return result.hasRegionCode; }
      }
      public string RegionCode {
        get { return result.RegionCode; }
        set { SetRegionCode(value); }
      }
      public Builder SetRegionCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRegionCode = true;
        result.regionCode_ = value;
        return this;
      }
      public Builder ClearRegionCode() {
        PrepareBuilder();
        result.hasRegionCode = false;
        result.regionCode_ = "";
        return this;
      }
      
      public bool HasIsValid {
        get { return result.hasIsValid; }
      }
      public bool IsValid {
        get { return result.IsValid; }
        set { SetIsValid(value); }
      }
      public Builder SetIsValid(bool value) {
        PrepareBuilder();
        result.hasIsValid = true;
        result.isValid_ = value;
        return this;
      }
      public Builder ClearIsValid() {
        PrepareBuilder();
        result.hasIsValid = false;
        result.isValid_ = false;
        return this;
      }
      
      public bool HasValidationResult {
       get { return result.hasValidationResult; }
      }
      public global::Hangups.Proto.PhoneValidationResult ValidationResult {
        get { return result.ValidationResult; }
        set { SetValidationResult(value); }
      }
      public Builder SetValidationResult(global::Hangups.Proto.PhoneValidationResult value) {
        PrepareBuilder();
        result.hasValidationResult = true;
        result.validationResult_ = value;
        return this;
      }
      public Builder ClearValidationResult() {
        PrepareBuilder();
        result.hasValidationResult = false;
        result.validationResult_ = global::Hangups.Proto.PhoneValidationResult.PHONE_VALIDATION_RESULT_IS_POSSIBLE;
        return this;
      }
    }
    static I18nData() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PhoneNumber : pb::GeneratedMessage<PhoneNumber, PhoneNumber.Builder> {
    private PhoneNumber() { }
    private static readonly PhoneNumber defaultInstance = new PhoneNumber().MakeReadOnly();
    private static readonly string[] _phoneNumberFieldNames = new string[] { "e164", "i18n_data" };
    private static readonly uint[] _phoneNumberFieldTags = new uint[] { 10, 18 };
    public static PhoneNumber DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PhoneNumber DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PhoneNumber ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_PhoneNumber__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PhoneNumber, PhoneNumber.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_PhoneNumber__FieldAccessorTable; }
    }
    
    public const int E164FieldNumber = 1;
    private bool hasE164;
    private string e164_ = "";
    public bool HasE164 {
      get { return hasE164; }
    }
    public string E164 {
      get { return e164_; }
    }
    
    public const int I18NDataFieldNumber = 2;
    private bool hasI18NData;
    private global::Hangups.Proto.I18nData i18NData_;
    public bool HasI18NData {
      get { return hasI18NData; }
    }
    public global::Hangups.Proto.I18nData I18NData {
      get { return i18NData_ ?? global::Hangups.Proto.I18nData.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _phoneNumberFieldNames;
      if (hasE164) {
        output.WriteString(1, field_names[0], E164);
      }
      if (hasI18NData) {
        output.WriteMessage(2, field_names[1], I18NData);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasE164) {
        size += pb::CodedOutputStream.ComputeStringSize(1, E164);
      }
      if (hasI18NData) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, I18NData);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PhoneNumber ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PhoneNumber ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PhoneNumber ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PhoneNumber ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PhoneNumber ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PhoneNumber ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PhoneNumber ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PhoneNumber ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PhoneNumber ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PhoneNumber ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PhoneNumber MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PhoneNumber prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PhoneNumber, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PhoneNumber cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PhoneNumber result;
      
      private PhoneNumber PrepareBuilder() {
        if (resultIsReadOnly) {
          PhoneNumber original = result;
          result = new PhoneNumber();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PhoneNumber MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.PhoneNumber.Descriptor; }
      }
      
      public override PhoneNumber DefaultInstanceForType {
        get { return global::Hangups.Proto.PhoneNumber.DefaultInstance; }
      }
      
      public override PhoneNumber BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PhoneNumber) {
          return MergeFrom((PhoneNumber) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PhoneNumber other) {
        if (other == global::Hangups.Proto.PhoneNumber.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasE164) {
          E164 = other.E164;
        }
        if (other.HasI18NData) {
          MergeI18NData(other.I18NData);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_phoneNumberFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _phoneNumberFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasE164 = input.ReadString(ref result.e164_);
              break;
            }
            case 18: {
              global::Hangups.Proto.I18nData.Builder subBuilder = global::Hangups.Proto.I18nData.CreateBuilder();
              if (result.hasI18NData) {
                subBuilder.MergeFrom(I18NData);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              I18NData = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasE164 {
        get { return result.hasE164; }
      }
      public string E164 {
        get { return result.E164; }
        set { SetE164(value); }
      }
      public Builder SetE164(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasE164 = true;
        result.e164_ = value;
        return this;
      }
      public Builder ClearE164() {
        PrepareBuilder();
        result.hasE164 = false;
        result.e164_ = "";
        return this;
      }
      
      public bool HasI18NData {
       get { return result.hasI18NData; }
      }
      public global::Hangups.Proto.I18nData I18NData {
        get { return result.I18NData; }
        set { SetI18NData(value); }
      }
      public Builder SetI18NData(global::Hangups.Proto.I18nData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasI18NData = true;
        result.i18NData_ = value;
        return this;
      }
      public Builder SetI18NData(global::Hangups.Proto.I18nData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasI18NData = true;
        result.i18NData_ = builderForValue.Build();
        return this;
      }
      public Builder MergeI18NData(global::Hangups.Proto.I18nData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasI18NData &&
            result.i18NData_ != global::Hangups.Proto.I18nData.DefaultInstance) {
            result.i18NData_ = global::Hangups.Proto.I18nData.CreateBuilder(result.i18NData_).MergeFrom(value).BuildPartial();
        } else {
          result.i18NData_ = value;
        }
        result.hasI18NData = true;
        return this;
      }
      public Builder ClearI18NData() {
        PrepareBuilder();
        result.hasI18NData = false;
        result.i18NData_ = null;
        return this;
      }
    }
    static PhoneNumber() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuggestedContactGroupHash : pb::GeneratedMessage<SuggestedContactGroupHash, SuggestedContactGroupHash.Builder> {
    private SuggestedContactGroupHash() { }
    private static readonly SuggestedContactGroupHash defaultInstance = new SuggestedContactGroupHash().MakeReadOnly();
    private static readonly string[] _suggestedContactGroupHashFieldNames = new string[] { "hash", "max_results" };
    private static readonly uint[] _suggestedContactGroupHashFieldTags = new uint[] { 18, 8 };
    public static SuggestedContactGroupHash DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestedContactGroupHash DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestedContactGroupHash ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SuggestedContactGroupHash__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestedContactGroupHash, SuggestedContactGroupHash.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SuggestedContactGroupHash__FieldAccessorTable; }
    }
    
    public const int MaxResultsFieldNumber = 1;
    private bool hasMaxResults;
    private ulong maxResults_;
    public bool HasMaxResults {
      get { return hasMaxResults; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxResults {
      get { return maxResults_; }
    }
    
    public const int HashFieldNumber = 2;
    private bool hasHash;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    public bool HasHash {
      get { return hasHash; }
    }
    public pb::ByteString Hash {
      get { return hash_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _suggestedContactGroupHashFieldNames;
      if (hasMaxResults) {
        output.WriteUInt64(1, field_names[1], MaxResults);
      }
      if (hasHash) {
        output.WriteBytes(2, field_names[0], Hash);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMaxResults) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, MaxResults);
      }
      if (hasHash) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Hash);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SuggestedContactGroupHash ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestedContactGroupHash ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestedContactGroupHash MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestedContactGroupHash prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestedContactGroupHash, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestedContactGroupHash cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestedContactGroupHash result;
      
      private SuggestedContactGroupHash PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestedContactGroupHash original = result;
          result = new SuggestedContactGroupHash();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestedContactGroupHash MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SuggestedContactGroupHash.Descriptor; }
      }
      
      public override SuggestedContactGroupHash DefaultInstanceForType {
        get { return global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
      }
      
      public override SuggestedContactGroupHash BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestedContactGroupHash) {
          return MergeFrom((SuggestedContactGroupHash) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestedContactGroupHash other) {
        if (other == global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMaxResults) {
          MaxResults = other.MaxResults;
        }
        if (other.HasHash) {
          Hash = other.Hash;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestedContactGroupHashFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestedContactGroupHashFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMaxResults = input.ReadUInt64(ref result.maxResults_);
              break;
            }
            case 18: {
              result.hasHash = input.ReadBytes(ref result.hash_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMaxResults {
        get { return result.hasMaxResults; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MaxResults {
        get { return result.MaxResults; }
        set { SetMaxResults(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxResults(ulong value) {
        PrepareBuilder();
        result.hasMaxResults = true;
        result.maxResults_ = value;
        return this;
      }
      public Builder ClearMaxResults() {
        PrepareBuilder();
        result.hasMaxResults = false;
        result.maxResults_ = 0UL;
        return this;
      }
      
      public bool HasHash {
        get { return result.hasHash; }
      }
      public pb::ByteString Hash {
        get { return result.Hash; }
        set { SetHash(value); }
      }
      public Builder SetHash(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder ClearHash() {
        PrepareBuilder();
        result.hasHash = false;
        result.hash_ = pb::ByteString.Empty;
        return this;
      }
    }
    static SuggestedContactGroupHash() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuggestedContact : pb::GeneratedMessage<SuggestedContact, SuggestedContact.Builder> {
    private SuggestedContact() { }
    private static readonly SuggestedContact defaultInstance = new SuggestedContact().MakeReadOnly();
    private static readonly string[] _suggestedContactFieldNames = new string[] { "entity", "invitation_status" };
    private static readonly uint[] _suggestedContactFieldTags = new uint[] { 10, 16 };
    public static SuggestedContact DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestedContact DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestedContact ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SuggestedContact__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestedContact, SuggestedContact.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SuggestedContact__FieldAccessorTable; }
    }
    
    public const int EntityFieldNumber = 1;
    private bool hasEntity;
    private global::Hangups.Proto.Entity entity_;
    public bool HasEntity {
      get { return hasEntity; }
    }
    public global::Hangups.Proto.Entity Entity {
      get { return entity_ ?? global::Hangups.Proto.Entity.DefaultInstance; }
    }
    
    public const int InvitationStatusFieldNumber = 2;
    private bool hasInvitationStatus;
    private global::Hangups.Proto.InvitationStatus invitationStatus_ = global::Hangups.Proto.InvitationStatus.INVITATION_STATUS_UNKNOWN;
    public bool HasInvitationStatus {
      get { return hasInvitationStatus; }
    }
    public global::Hangups.Proto.InvitationStatus InvitationStatus {
      get { return invitationStatus_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEntity) {
          if (!Entity.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _suggestedContactFieldNames;
      if (hasEntity) {
        output.WriteMessage(1, field_names[0], Entity);
      }
      if (hasInvitationStatus) {
        output.WriteEnum(2, field_names[1], (int) InvitationStatus, InvitationStatus);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntity) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Entity);
      }
      if (hasInvitationStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) InvitationStatus);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SuggestedContact ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestedContact ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContact ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestedContact ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContact ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestedContact ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContact ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestedContact ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestedContact ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestedContact ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestedContact MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestedContact prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestedContact, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestedContact cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestedContact result;
      
      private SuggestedContact PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestedContact original = result;
          result = new SuggestedContact();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestedContact MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SuggestedContact.Descriptor; }
      }
      
      public override SuggestedContact DefaultInstanceForType {
        get { return global::Hangups.Proto.SuggestedContact.DefaultInstance; }
      }
      
      public override SuggestedContact BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestedContact) {
          return MergeFrom((SuggestedContact) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestedContact other) {
        if (other == global::Hangups.Proto.SuggestedContact.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntity) {
          MergeEntity(other.Entity);
        }
        if (other.HasInvitationStatus) {
          InvitationStatus = other.InvitationStatus;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestedContactFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestedContactFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.Entity.Builder subBuilder = global::Hangups.Proto.Entity.CreateBuilder();
              if (result.hasEntity) {
                subBuilder.MergeFrom(Entity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Entity = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.invitationStatus_, out unknown)) {
                result.hasInvitationStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntity {
       get { return result.hasEntity; }
      }
      public global::Hangups.Proto.Entity Entity {
        get { return result.Entity; }
        set { SetEntity(value); }
      }
      public Builder SetEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder SetEntity(global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEntity = true;
        result.entity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEntity &&
            result.entity_ != global::Hangups.Proto.Entity.DefaultInstance) {
            result.entity_ = global::Hangups.Proto.Entity.CreateBuilder(result.entity_).MergeFrom(value).BuildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.hasEntity = false;
        result.entity_ = null;
        return this;
      }
      
      public bool HasInvitationStatus {
       get { return result.hasInvitationStatus; }
      }
      public global::Hangups.Proto.InvitationStatus InvitationStatus {
        get { return result.InvitationStatus; }
        set { SetInvitationStatus(value); }
      }
      public Builder SetInvitationStatus(global::Hangups.Proto.InvitationStatus value) {
        PrepareBuilder();
        result.hasInvitationStatus = true;
        result.invitationStatus_ = value;
        return this;
      }
      public Builder ClearInvitationStatus() {
        PrepareBuilder();
        result.hasInvitationStatus = false;
        result.invitationStatus_ = global::Hangups.Proto.InvitationStatus.INVITATION_STATUS_UNKNOWN;
        return this;
      }
    }
    static SuggestedContact() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SuggestedContactGroup : pb::GeneratedMessage<SuggestedContactGroup, SuggestedContactGroup.Builder> {
    private SuggestedContactGroup() { }
    private static readonly SuggestedContactGroup defaultInstance = new SuggestedContactGroup().MakeReadOnly();
    private static readonly string[] _suggestedContactGroupFieldNames = new string[] { "contact", "hash", "hash_matched" };
    private static readonly uint[] _suggestedContactGroupFieldTags = new uint[] { 26, 18, 8 };
    public static SuggestedContactGroup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestedContactGroup DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestedContactGroup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SuggestedContactGroup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestedContactGroup, SuggestedContactGroup.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SuggestedContactGroup__FieldAccessorTable; }
    }
    
    public const int HashMatchedFieldNumber = 1;
    private bool hasHashMatched;
    private bool hashMatched_;
    public bool HasHashMatched {
      get { return hasHashMatched; }
    }
    public bool HashMatched {
      get { return hashMatched_; }
    }
    
    public const int HashFieldNumber = 2;
    private bool hasHash;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    public bool HasHash {
      get { return hasHash; }
    }
    public pb::ByteString Hash {
      get { return hash_; }
    }
    
    public const int ContactFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.SuggestedContact> contact_ = new pbc::PopsicleList<global::Hangups.Proto.SuggestedContact>();
    public scg::IList<global::Hangups.Proto.SuggestedContact> ContactList {
      get { return contact_; }
    }
    public int ContactCount {
      get { return contact_.Count; }
    }
    public global::Hangups.Proto.SuggestedContact GetContact(int index) {
      return contact_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.SuggestedContact element in ContactList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _suggestedContactGroupFieldNames;
      if (hasHashMatched) {
        output.WriteBool(1, field_names[2], HashMatched);
      }
      if (hasHash) {
        output.WriteBytes(2, field_names[1], Hash);
      }
      if (contact_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], contact_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasHashMatched) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, HashMatched);
      }
      if (hasHash) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Hash);
      }
      foreach (global::Hangups.Proto.SuggestedContact element in ContactList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SuggestedContactGroup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestedContactGroup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestedContactGroup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestedContactGroup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestedContactGroup MakeReadOnly() {
      contact_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestedContactGroup prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestedContactGroup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestedContactGroup cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestedContactGroup result;
      
      private SuggestedContactGroup PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestedContactGroup original = result;
          result = new SuggestedContactGroup();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestedContactGroup MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SuggestedContactGroup.Descriptor; }
      }
      
      public override SuggestedContactGroup DefaultInstanceForType {
        get { return global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
      }
      
      public override SuggestedContactGroup BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestedContactGroup) {
          return MergeFrom((SuggestedContactGroup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestedContactGroup other) {
        if (other == global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHashMatched) {
          HashMatched = other.HashMatched;
        }
        if (other.HasHash) {
          Hash = other.Hash;
        }
        if (other.contact_.Count != 0) {
          result.contact_.Add(other.contact_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestedContactGroupFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestedContactGroupFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasHashMatched = input.ReadBool(ref result.hashMatched_);
              break;
            }
            case 18: {
              result.hasHash = input.ReadBytes(ref result.hash_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.contact_, global::Hangups.Proto.SuggestedContact.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHashMatched {
        get { return result.hasHashMatched; }
      }
      public bool HashMatched {
        get { return result.HashMatched; }
        set { SetHashMatched(value); }
      }
      public Builder SetHashMatched(bool value) {
        PrepareBuilder();
        result.hasHashMatched = true;
        result.hashMatched_ = value;
        return this;
      }
      public Builder ClearHashMatched() {
        PrepareBuilder();
        result.hasHashMatched = false;
        result.hashMatched_ = false;
        return this;
      }
      
      public bool HasHash {
        get { return result.hasHash; }
      }
      public pb::ByteString Hash {
        get { return result.Hash; }
        set { SetHash(value); }
      }
      public Builder SetHash(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHash = true;
        result.hash_ = value;
        return this;
      }
      public Builder ClearHash() {
        PrepareBuilder();
        result.hasHash = false;
        result.hash_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.SuggestedContact> ContactList {
        get { return PrepareBuilder().contact_; }
      }
      public int ContactCount {
        get { return result.ContactCount; }
      }
      public global::Hangups.Proto.SuggestedContact GetContact(int index) {
        return result.GetContact(index);
      }
      public Builder SetContact(int index, global::Hangups.Proto.SuggestedContact value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contact_[index] = value;
        return this;
      }
      public Builder SetContact(int index, global::Hangups.Proto.SuggestedContact.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contact_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContact(global::Hangups.Proto.SuggestedContact value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contact_.Add(value);
        return this;
      }
      public Builder AddContact(global::Hangups.Proto.SuggestedContact.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contact_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContact(scg::IEnumerable<global::Hangups.Proto.SuggestedContact> values) {
        PrepareBuilder();
        result.contact_.Add(values);
        return this;
      }
      public Builder ClearContact() {
        PrepareBuilder();
        result.contact_.Clear();
        return this;
      }
    }
    static SuggestedContactGroup() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StateUpdateHeader : pb::GeneratedMessage<StateUpdateHeader, StateUpdateHeader.Builder> {
    private StateUpdateHeader() { }
    private static readonly StateUpdateHeader defaultInstance = new StateUpdateHeader().MakeReadOnly();
    private static readonly string[] _stateUpdateHeaderFieldNames = new string[] { "active_client_state", "current_server_time", "notification_settings", "request_trace_id" };
    private static readonly uint[] _stateUpdateHeaderFieldTags = new uint[] { 8, 40, 34, 26 };
    public static StateUpdateHeader DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StateUpdateHeader DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StateUpdateHeader ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_StateUpdateHeader__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StateUpdateHeader, StateUpdateHeader.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_StateUpdateHeader__FieldAccessorTable; }
    }
    
    public const int ActiveClientStateFieldNumber = 1;
    private bool hasActiveClientState;
    private global::Hangups.Proto.ActiveClientState activeClientState_ = global::Hangups.Proto.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE;
    public bool HasActiveClientState {
      get { return hasActiveClientState; }
    }
    public global::Hangups.Proto.ActiveClientState ActiveClientState {
      get { return activeClientState_; }
    }
    
    public const int RequestTraceIdFieldNumber = 3;
    private bool hasRequestTraceId;
    private string requestTraceId_ = "";
    public bool HasRequestTraceId {
      get { return hasRequestTraceId; }
    }
    public string RequestTraceId {
      get { return requestTraceId_; }
    }
    
    public const int NotificationSettingsFieldNumber = 4;
    private bool hasNotificationSettings;
    private global::Hangups.Proto.NotificationSettings notificationSettings_;
    public bool HasNotificationSettings {
      get { return hasNotificationSettings; }
    }
    public global::Hangups.Proto.NotificationSettings NotificationSettings {
      get { return notificationSettings_ ?? global::Hangups.Proto.NotificationSettings.DefaultInstance; }
    }
    
    public const int CurrentServerTimeFieldNumber = 5;
    private bool hasCurrentServerTime;
    private ulong currentServerTime_;
    public bool HasCurrentServerTime {
      get { return hasCurrentServerTime; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CurrentServerTime {
      get { return currentServerTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _stateUpdateHeaderFieldNames;
      if (hasActiveClientState) {
        output.WriteEnum(1, field_names[0], (int) ActiveClientState, ActiveClientState);
      }
      if (hasRequestTraceId) {
        output.WriteString(3, field_names[3], RequestTraceId);
      }
      if (hasNotificationSettings) {
        output.WriteMessage(4, field_names[2], NotificationSettings);
      }
      if (hasCurrentServerTime) {
        output.WriteUInt64(5, field_names[1], CurrentServerTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasActiveClientState) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ActiveClientState);
      }
      if (hasRequestTraceId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, RequestTraceId);
      }
      if (hasNotificationSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, NotificationSettings);
      }
      if (hasCurrentServerTime) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, CurrentServerTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StateUpdateHeader ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StateUpdateHeader ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StateUpdateHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StateUpdateHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StateUpdateHeader MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StateUpdateHeader prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StateUpdateHeader, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StateUpdateHeader cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StateUpdateHeader result;
      
      private StateUpdateHeader PrepareBuilder() {
        if (resultIsReadOnly) {
          StateUpdateHeader original = result;
          result = new StateUpdateHeader();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StateUpdateHeader MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.StateUpdateHeader.Descriptor; }
      }
      
      public override StateUpdateHeader DefaultInstanceForType {
        get { return global::Hangups.Proto.StateUpdateHeader.DefaultInstance; }
      }
      
      public override StateUpdateHeader BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StateUpdateHeader) {
          return MergeFrom((StateUpdateHeader) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StateUpdateHeader other) {
        if (other == global::Hangups.Proto.StateUpdateHeader.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActiveClientState) {
          ActiveClientState = other.ActiveClientState;
        }
        if (other.HasRequestTraceId) {
          RequestTraceId = other.RequestTraceId;
        }
        if (other.HasNotificationSettings) {
          MergeNotificationSettings(other.NotificationSettings);
        }
        if (other.HasCurrentServerTime) {
          CurrentServerTime = other.CurrentServerTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_stateUpdateHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _stateUpdateHeaderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.activeClientState_, out unknown)) {
                result.hasActiveClientState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              result.hasRequestTraceId = input.ReadString(ref result.requestTraceId_);
              break;
            }
            case 34: {
              global::Hangups.Proto.NotificationSettings.Builder subBuilder = global::Hangups.Proto.NotificationSettings.CreateBuilder();
              if (result.hasNotificationSettings) {
                subBuilder.MergeFrom(NotificationSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NotificationSettings = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasCurrentServerTime = input.ReadUInt64(ref result.currentServerTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActiveClientState {
       get { return result.hasActiveClientState; }
      }
      public global::Hangups.Proto.ActiveClientState ActiveClientState {
        get { return result.ActiveClientState; }
        set { SetActiveClientState(value); }
      }
      public Builder SetActiveClientState(global::Hangups.Proto.ActiveClientState value) {
        PrepareBuilder();
        result.hasActiveClientState = true;
        result.activeClientState_ = value;
        return this;
      }
      public Builder ClearActiveClientState() {
        PrepareBuilder();
        result.hasActiveClientState = false;
        result.activeClientState_ = global::Hangups.Proto.ActiveClientState.ACTIVE_CLIENT_STATE_NO_ACTIVE;
        return this;
      }
      
      public bool HasRequestTraceId {
        get { return result.hasRequestTraceId; }
      }
      public string RequestTraceId {
        get { return result.RequestTraceId; }
        set { SetRequestTraceId(value); }
      }
      public Builder SetRequestTraceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestTraceId = true;
        result.requestTraceId_ = value;
        return this;
      }
      public Builder ClearRequestTraceId() {
        PrepareBuilder();
        result.hasRequestTraceId = false;
        result.requestTraceId_ = "";
        return this;
      }
      
      public bool HasNotificationSettings {
       get { return result.hasNotificationSettings; }
      }
      public global::Hangups.Proto.NotificationSettings NotificationSettings {
        get { return result.NotificationSettings; }
        set { SetNotificationSettings(value); }
      }
      public Builder SetNotificationSettings(global::Hangups.Proto.NotificationSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNotificationSettings = true;
        result.notificationSettings_ = value;
        return this;
      }
      public Builder SetNotificationSettings(global::Hangups.Proto.NotificationSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNotificationSettings = true;
        result.notificationSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNotificationSettings(global::Hangups.Proto.NotificationSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNotificationSettings &&
            result.notificationSettings_ != global::Hangups.Proto.NotificationSettings.DefaultInstance) {
            result.notificationSettings_ = global::Hangups.Proto.NotificationSettings.CreateBuilder(result.notificationSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.notificationSettings_ = value;
        }
        result.hasNotificationSettings = true;
        return this;
      }
      public Builder ClearNotificationSettings() {
        PrepareBuilder();
        result.hasNotificationSettings = false;
        result.notificationSettings_ = null;
        return this;
      }
      
      public bool HasCurrentServerTime {
        get { return result.hasCurrentServerTime; }
      }
      [global::System.CLSCompliant(false)]
      public ulong CurrentServerTime {
        get { return result.CurrentServerTime; }
        set { SetCurrentServerTime(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCurrentServerTime(ulong value) {
        PrepareBuilder();
        result.hasCurrentServerTime = true;
        result.currentServerTime_ = value;
        return this;
      }
      public Builder ClearCurrentServerTime() {
        PrepareBuilder();
        result.hasCurrentServerTime = false;
        result.currentServerTime_ = 0UL;
        return this;
      }
    }
    static StateUpdateHeader() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EventNotification : pb::GeneratedMessage<EventNotification, EventNotification.Builder> {
    private EventNotification() { }
    private static readonly EventNotification defaultInstance = new EventNotification().MakeReadOnly();
    private static readonly string[] _eventNotificationFieldNames = new string[] { "event" };
    private static readonly uint[] _eventNotificationFieldTags = new uint[] { 10 };
    public static EventNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EventNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EventNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EventNotification, EventNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EventNotification__FieldAccessorTable; }
    }
    
    public const int EventFieldNumber = 1;
    private bool hasEvent;
    private global::Hangups.Proto.Event event_;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public global::Hangups.Proto.Event Event {
      get { return event_ ?? global::Hangups.Proto.Event.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasEvent) {
          if (!Event.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eventNotificationFieldNames;
      if (hasEvent) {
        output.WriteMessage(1, field_names[0], Event);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEvent) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Event);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EventNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EventNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EventNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EventNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EventNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EventNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EventNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EventNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EventNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EventNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EventNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EventNotification result;
      
      private EventNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          EventNotification original = result;
          result = new EventNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EventNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EventNotification.Descriptor; }
      }
      
      public override EventNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.EventNotification.DefaultInstance; }
      }
      
      public override EventNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EventNotification) {
          return MergeFrom((EventNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EventNotification other) {
        if (other == global::Hangups.Proto.EventNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEvent) {
          MergeEvent(other.Event);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eventNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eventNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.Event.Builder subBuilder = global::Hangups.Proto.Event.CreateBuilder();
              if (result.hasEvent) {
                subBuilder.MergeFrom(Event);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Event = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEvent {
       get { return result.hasEvent; }
      }
      public global::Hangups.Proto.Event Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder SetEvent(global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEvent &&
            result.event_ != global::Hangups.Proto.Event.DefaultInstance) {
            result.event_ = global::Hangups.Proto.Event.CreateBuilder(result.event_).MergeFrom(value).BuildPartial();
        } else {
          result.event_ = value;
        }
        result.hasEvent = true;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = null;
        return this;
      }
    }
    static EventNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetFocusNotification : pb::GeneratedMessage<SetFocusNotification, SetFocusNotification.Builder> {
    private SetFocusNotification() { }
    private static readonly SetFocusNotification defaultInstance = new SetFocusNotification().MakeReadOnly();
    private static readonly string[] _setFocusNotificationFieldNames = new string[] { "conversation_id", "device", "sender_id", "timestamp", "type" };
    private static readonly uint[] _setFocusNotificationFieldTags = new uint[] { 10, 40, 18, 24, 32 };
    public static SetFocusNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetFocusNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetFocusNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetFocusNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetFocusNotification, SetFocusNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetFocusNotification__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int SenderIdFieldNumber = 2;
    private bool hasSenderId;
    private global::Hangups.Proto.ParticipantId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::Hangups.Proto.ParticipantId SenderId {
      get { return senderId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private global::Hangups.Proto.FocusType type_ = global::Hangups.Proto.FocusType.FOCUS_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.FocusType Type {
      get { return type_; }
    }
    
    public const int DeviceFieldNumber = 5;
    private bool hasDevice;
    private global::Hangups.Proto.FocusDevice device_ = global::Hangups.Proto.FocusDevice.FOCUS_DEVICE_UNSPECIFIED;
    public bool HasDevice {
      get { return hasDevice; }
    }
    public global::Hangups.Proto.FocusDevice Device {
      get { return device_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setFocusNotificationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      if (hasSenderId) {
        output.WriteMessage(2, field_names[2], SenderId);
      }
      if (hasTimestamp) {
        output.WriteUInt64(3, field_names[3], Timestamp);
      }
      if (hasType) {
        output.WriteEnum(4, field_names[4], (int) Type, Type);
      }
      if (hasDevice) {
        output.WriteEnum(5, field_names[1], (int) Device, Device);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SenderId);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, Timestamp);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Type);
      }
      if (hasDevice) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Device);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetFocusNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetFocusNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetFocusNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetFocusNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetFocusNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetFocusNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetFocusNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetFocusNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetFocusNotification result;
      
      private SetFocusNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SetFocusNotification original = result;
          result = new SetFocusNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetFocusNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetFocusNotification.Descriptor; }
      }
      
      public override SetFocusNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.SetFocusNotification.DefaultInstance; }
      }
      
      public override SetFocusNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetFocusNotification) {
          return MergeFrom((SetFocusNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetFocusNotification other) {
        if (other == global::Hangups.Proto.SetFocusNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasDevice) {
          Device = other.Device;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setFocusNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setFocusNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.device_, out unknown)) {
                result.hasDevice = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::Hangups.Proto.ParticipantId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.senderId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.FocusType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.FocusType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.FocusType.FOCUS_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasDevice {
       get { return result.hasDevice; }
      }
      public global::Hangups.Proto.FocusDevice Device {
        get { return result.Device; }
        set { SetDevice(value); }
      }
      public Builder SetDevice(global::Hangups.Proto.FocusDevice value) {
        PrepareBuilder();
        result.hasDevice = true;
        result.device_ = value;
        return this;
      }
      public Builder ClearDevice() {
        PrepareBuilder();
        result.hasDevice = false;
        result.device_ = global::Hangups.Proto.FocusDevice.FOCUS_DEVICE_UNSPECIFIED;
        return this;
      }
    }
    static SetFocusNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetTypingNotification : pb::GeneratedMessage<SetTypingNotification, SetTypingNotification.Builder> {
    private SetTypingNotification() { }
    private static readonly SetTypingNotification defaultInstance = new SetTypingNotification().MakeReadOnly();
    private static readonly string[] _setTypingNotificationFieldNames = new string[] { "conversation_id", "sender_id", "timestamp", "type" };
    private static readonly uint[] _setTypingNotificationFieldTags = new uint[] { 10, 18, 24, 32 };
    public static SetTypingNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetTypingNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetTypingNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetTypingNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetTypingNotification, SetTypingNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetTypingNotification__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int SenderIdFieldNumber = 2;
    private bool hasSenderId;
    private global::Hangups.Proto.ParticipantId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::Hangups.Proto.ParticipantId SenderId {
      get { return senderId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private global::Hangups.Proto.TypingType type_ = global::Hangups.Proto.TypingType.TYPING_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.TypingType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setTypingNotificationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      if (hasSenderId) {
        output.WriteMessage(2, field_names[1], SenderId);
      }
      if (hasTimestamp) {
        output.WriteUInt64(3, field_names[2], Timestamp);
      }
      if (hasType) {
        output.WriteEnum(4, field_names[3], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SenderId);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, Timestamp);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetTypingNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetTypingNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetTypingNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetTypingNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetTypingNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetTypingNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetTypingNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetTypingNotification result;
      
      private SetTypingNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SetTypingNotification original = result;
          result = new SetTypingNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetTypingNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetTypingNotification.Descriptor; }
      }
      
      public override SetTypingNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.SetTypingNotification.DefaultInstance; }
      }
      
      public override SetTypingNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetTypingNotification) {
          return MergeFrom((SetTypingNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetTypingNotification other) {
        if (other == global::Hangups.Proto.SetTypingNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setTypingNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setTypingNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::Hangups.Proto.ParticipantId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.senderId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.TypingType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.TypingType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.TypingType.TYPING_TYPE_UNKNOWN;
        return this;
      }
    }
    static SetTypingNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationNotificationLevelNotification : pb::GeneratedMessage<SetConversationNotificationLevelNotification, SetConversationNotificationLevelNotification.Builder> {
    private SetConversationNotificationLevelNotification() { }
    private static readonly SetConversationNotificationLevelNotification defaultInstance = new SetConversationNotificationLevelNotification().MakeReadOnly();
    private static readonly string[] _setConversationNotificationLevelNotificationFieldNames = new string[] { "conversation_id", "level", "timestamp" };
    private static readonly uint[] _setConversationNotificationLevelNotificationFieldTags = new uint[] { 10, 16, 32 };
    public static SetConversationNotificationLevelNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetConversationNotificationLevelNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetConversationNotificationLevelNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationNotificationLevelNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetConversationNotificationLevelNotification, SetConversationNotificationLevelNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationNotificationLevelNotification__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int LevelFieldNumber = 2;
    private bool hasLevel;
    private global::Hangups.Proto.NotificationLevel level_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public global::Hangups.Proto.NotificationLevel Level {
      get { return level_; }
    }
    
    public const int TimestampFieldNumber = 4;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setConversationNotificationLevelNotificationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      if (hasLevel) {
        output.WriteEnum(2, field_names[1], (int) Level, Level);
      }
      if (hasTimestamp) {
        output.WriteUInt64(4, field_names[2], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Level);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetConversationNotificationLevelNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationNotificationLevelNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetConversationNotificationLevelNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetConversationNotificationLevelNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetConversationNotificationLevelNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetConversationNotificationLevelNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetConversationNotificationLevelNotification result;
      
      private SetConversationNotificationLevelNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SetConversationNotificationLevelNotification original = result;
          result = new SetConversationNotificationLevelNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetConversationNotificationLevelNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetConversationNotificationLevelNotification.Descriptor; }
      }
      
      public override SetConversationNotificationLevelNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.SetConversationNotificationLevelNotification.DefaultInstance; }
      }
      
      public override SetConversationNotificationLevelNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetConversationNotificationLevelNotification) {
          return MergeFrom((SetConversationNotificationLevelNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetConversationNotificationLevelNotification other) {
        if (other == global::Hangups.Proto.SetConversationNotificationLevelNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setConversationNotificationLevelNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setConversationNotificationLevelNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.level_, out unknown)) {
                result.hasLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasLevel {
       get { return result.hasLevel; }
      }
      public global::Hangups.Proto.NotificationLevel Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(global::Hangups.Proto.NotificationLevel value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
    }
    static SetConversationNotificationLevelNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReplyToInviteNotification : pb::GeneratedMessage<ReplyToInviteNotification, ReplyToInviteNotification.Builder> {
    private ReplyToInviteNotification() { }
    private static readonly ReplyToInviteNotification defaultInstance = new ReplyToInviteNotification().MakeReadOnly();
    private static readonly string[] _replyToInviteNotificationFieldNames = new string[] { "conversation_id", "type" };
    private static readonly uint[] _replyToInviteNotificationFieldTags = new uint[] { 10, 16 };
    public static ReplyToInviteNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReplyToInviteNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReplyToInviteNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ReplyToInviteNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReplyToInviteNotification, ReplyToInviteNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ReplyToInviteNotification__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::Hangups.Proto.ReplyToInviteType type_ = global::Hangups.Proto.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.ReplyToInviteType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _replyToInviteNotificationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[1], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReplyToInviteNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReplyToInviteNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReplyToInviteNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReplyToInviteNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReplyToInviteNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReplyToInviteNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReplyToInviteNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReplyToInviteNotification result;
      
      private ReplyToInviteNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ReplyToInviteNotification original = result;
          result = new ReplyToInviteNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReplyToInviteNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ReplyToInviteNotification.Descriptor; }
      }
      
      public override ReplyToInviteNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.ReplyToInviteNotification.DefaultInstance; }
      }
      
      public override ReplyToInviteNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReplyToInviteNotification) {
          return MergeFrom((ReplyToInviteNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReplyToInviteNotification other) {
        if (other == global::Hangups.Proto.ReplyToInviteNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_replyToInviteNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _replyToInviteNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.ReplyToInviteType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.ReplyToInviteType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.ReplyToInviteType.REPLY_TO_INVITE_TYPE_UNKNOWN;
        return this;
      }
    }
    static ReplyToInviteNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WatermarkNotification : pb::GeneratedMessage<WatermarkNotification, WatermarkNotification.Builder> {
    private WatermarkNotification() { }
    private static readonly WatermarkNotification defaultInstance = new WatermarkNotification().MakeReadOnly();
    private static readonly string[] _watermarkNotificationFieldNames = new string[] { "conversation_id", "latest_read_timestamp", "sender_id" };
    private static readonly uint[] _watermarkNotificationFieldTags = new uint[] { 18, 24, 10 };
    public static WatermarkNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override WatermarkNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override WatermarkNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_WatermarkNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<WatermarkNotification, WatermarkNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_WatermarkNotification__FieldAccessorTable; }
    }
    
    public const int SenderIdFieldNumber = 1;
    private bool hasSenderId;
    private global::Hangups.Proto.ParticipantId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::Hangups.Proto.ParticipantId SenderId {
      get { return senderId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int LatestReadTimestampFieldNumber = 3;
    private bool hasLatestReadTimestamp;
    private ulong latestReadTimestamp_;
    public bool HasLatestReadTimestamp {
      get { return hasLatestReadTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong LatestReadTimestamp {
      get { return latestReadTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _watermarkNotificationFieldNames;
      if (hasSenderId) {
        output.WriteMessage(1, field_names[2], SenderId);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasLatestReadTimestamp) {
        output.WriteUInt64(3, field_names[1], LatestReadTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, SenderId);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasLatestReadTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, LatestReadTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static WatermarkNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static WatermarkNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static WatermarkNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static WatermarkNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private WatermarkNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(WatermarkNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<WatermarkNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(WatermarkNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private WatermarkNotification result;
      
      private WatermarkNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          WatermarkNotification original = result;
          result = new WatermarkNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override WatermarkNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.WatermarkNotification.Descriptor; }
      }
      
      public override WatermarkNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.WatermarkNotification.DefaultInstance; }
      }
      
      public override WatermarkNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is WatermarkNotification) {
          return MergeFrom((WatermarkNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(WatermarkNotification other) {
        if (other == global::Hangups.Proto.WatermarkNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasLatestReadTimestamp) {
          LatestReadTimestamp = other.LatestReadTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_watermarkNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _watermarkNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasLatestReadTimestamp = input.ReadUInt64(ref result.latestReadTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::Hangups.Proto.ParticipantId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.senderId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasLatestReadTimestamp {
        get { return result.hasLatestReadTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong LatestReadTimestamp {
        get { return result.LatestReadTimestamp; }
        set { SetLatestReadTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLatestReadTimestamp(ulong value) {
        PrepareBuilder();
        result.hasLatestReadTimestamp = true;
        result.latestReadTimestamp_ = value;
        return this;
      }
      public Builder ClearLatestReadTimestamp() {
        PrepareBuilder();
        result.hasLatestReadTimestamp = false;
        result.latestReadTimestamp_ = 0UL;
        return this;
      }
    }
    static WatermarkNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationViewModification : pb::GeneratedMessage<ConversationViewModification, ConversationViewModification.Builder> {
    private ConversationViewModification() { }
    private static readonly ConversationViewModification defaultInstance = new ConversationViewModification().MakeReadOnly();
    private static readonly string[] _conversationViewModificationFieldNames = new string[] { "conversation_id", "new_view", "old_view" };
    private static readonly uint[] _conversationViewModificationFieldTags = new uint[] { 10, 24, 16 };
    public static ConversationViewModification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConversationViewModification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConversationViewModification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationViewModification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConversationViewModification, ConversationViewModification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationViewModification__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int OldViewFieldNumber = 2;
    private bool hasOldView;
    private global::Hangups.Proto.ConversationView oldView_ = global::Hangups.Proto.ConversationView.CONVERSATION_VIEW_UNKNOWN;
    public bool HasOldView {
      get { return hasOldView; }
    }
    public global::Hangups.Proto.ConversationView OldView {
      get { return oldView_; }
    }
    
    public const int NewViewFieldNumber = 3;
    private bool hasNewView;
    private global::Hangups.Proto.ConversationView newView_ = global::Hangups.Proto.ConversationView.CONVERSATION_VIEW_UNKNOWN;
    public bool HasNewView {
      get { return hasNewView; }
    }
    public global::Hangups.Proto.ConversationView NewView {
      get { return newView_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationViewModificationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      if (hasOldView) {
        output.WriteEnum(2, field_names[2], (int) OldView, OldView);
      }
      if (hasNewView) {
        output.WriteEnum(3, field_names[1], (int) NewView, NewView);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasOldView) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) OldView);
      }
      if (hasNewView) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) NewView);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConversationViewModification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConversationViewModification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConversationViewModification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationViewModification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConversationViewModification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConversationViewModification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConversationViewModification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConversationViewModification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConversationViewModification result;
      
      private ConversationViewModification PrepareBuilder() {
        if (resultIsReadOnly) {
          ConversationViewModification original = result;
          result = new ConversationViewModification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConversationViewModification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConversationViewModification.Descriptor; }
      }
      
      public override ConversationViewModification DefaultInstanceForType {
        get { return global::Hangups.Proto.ConversationViewModification.DefaultInstance; }
      }
      
      public override ConversationViewModification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConversationViewModification) {
          return MergeFrom((ConversationViewModification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConversationViewModification other) {
        if (other == global::Hangups.Proto.ConversationViewModification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasOldView) {
          OldView = other.OldView;
        }
        if (other.HasNewView) {
          NewView = other.NewView;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationViewModificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationViewModificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.oldView_, out unknown)) {
                result.hasOldView = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.newView_, out unknown)) {
                result.hasNewView = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasOldView {
       get { return result.hasOldView; }
      }
      public global::Hangups.Proto.ConversationView OldView {
        get { return result.OldView; }
        set { SetOldView(value); }
      }
      public Builder SetOldView(global::Hangups.Proto.ConversationView value) {
        PrepareBuilder();
        result.hasOldView = true;
        result.oldView_ = value;
        return this;
      }
      public Builder ClearOldView() {
        PrepareBuilder();
        result.hasOldView = false;
        result.oldView_ = global::Hangups.Proto.ConversationView.CONVERSATION_VIEW_UNKNOWN;
        return this;
      }
      
      public bool HasNewView {
       get { return result.hasNewView; }
      }
      public global::Hangups.Proto.ConversationView NewView {
        get { return result.NewView; }
        set { SetNewView(value); }
      }
      public Builder SetNewView(global::Hangups.Proto.ConversationView value) {
        PrepareBuilder();
        result.hasNewView = true;
        result.newView_ = value;
        return this;
      }
      public Builder ClearNewView() {
        PrepareBuilder();
        result.hasNewView = false;
        result.newView_ = global::Hangups.Proto.ConversationView.CONVERSATION_VIEW_UNKNOWN;
        return this;
      }
    }
    static ConversationViewModification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEggNotification : pb::GeneratedMessage<EasterEggNotification, EasterEggNotification.Builder> {
    private EasterEggNotification() { }
    private static readonly EasterEggNotification defaultInstance = new EasterEggNotification().MakeReadOnly();
    private static readonly string[] _easterEggNotificationFieldNames = new string[] { "conversation_id", "easter_egg", "sender_id" };
    private static readonly uint[] _easterEggNotificationFieldTags = new uint[] { 18, 26, 10 };
    public static EasterEggNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EasterEggNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EasterEggNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEggNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EasterEggNotification, EasterEggNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEggNotification__FieldAccessorTable; }
    }
    
    public const int SenderIdFieldNumber = 1;
    private bool hasSenderId;
    private global::Hangups.Proto.ParticipantId senderId_;
    public bool HasSenderId {
      get { return hasSenderId; }
    }
    public global::Hangups.Proto.ParticipantId SenderId {
      get { return senderId_ ?? global::Hangups.Proto.ParticipantId.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int EasterEggFieldNumber = 3;
    private bool hasEasterEgg;
    private global::Hangups.Proto.EasterEgg easterEgg_;
    public bool HasEasterEgg {
      get { return hasEasterEgg; }
    }
    public global::Hangups.Proto.EasterEgg EasterEgg {
      get { return easterEgg_ ?? global::Hangups.Proto.EasterEgg.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _easterEggNotificationFieldNames;
      if (hasSenderId) {
        output.WriteMessage(1, field_names[2], SenderId);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasEasterEgg) {
        output.WriteMessage(3, field_names[1], EasterEgg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, SenderId);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasEasterEgg) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, EasterEgg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EasterEggNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EasterEggNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EasterEggNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEggNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EasterEggNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EasterEggNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EasterEggNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EasterEggNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EasterEggNotification result;
      
      private EasterEggNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          EasterEggNotification original = result;
          result = new EasterEggNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EasterEggNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EasterEggNotification.Descriptor; }
      }
      
      public override EasterEggNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.EasterEggNotification.DefaultInstance; }
      }
      
      public override EasterEggNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EasterEggNotification) {
          return MergeFrom((EasterEggNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EasterEggNotification other) {
        if (other == global::Hangups.Proto.EasterEggNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSenderId) {
          MergeSenderId(other.SenderId);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasEasterEgg) {
          MergeEasterEgg(other.EasterEgg);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_easterEggNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _easterEggNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ParticipantId.Builder subBuilder = global::Hangups.Proto.ParticipantId.CreateBuilder();
              if (result.hasSenderId) {
                subBuilder.MergeFrom(SenderId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SenderId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::Hangups.Proto.EasterEgg.Builder subBuilder = global::Hangups.Proto.EasterEgg.CreateBuilder();
              if (result.hasEasterEgg) {
                subBuilder.MergeFrom(EasterEgg);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EasterEgg = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSenderId {
       get { return result.hasSenderId; }
      }
      public global::Hangups.Proto.ParticipantId SenderId {
        get { return result.SenderId; }
        set { SetSenderId(value); }
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = value;
        return this;
      }
      public Builder SetSenderId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSenderId = true;
        result.senderId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSenderId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSenderId &&
            result.senderId_ != global::Hangups.Proto.ParticipantId.DefaultInstance) {
            result.senderId_ = global::Hangups.Proto.ParticipantId.CreateBuilder(result.senderId_).MergeFrom(value).BuildPartial();
        } else {
          result.senderId_ = value;
        }
        result.hasSenderId = true;
        return this;
      }
      public Builder ClearSenderId() {
        PrepareBuilder();
        result.hasSenderId = false;
        result.senderId_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasEasterEgg {
       get { return result.hasEasterEgg; }
      }
      public global::Hangups.Proto.EasterEgg EasterEgg {
        get { return result.EasterEgg; }
        set { SetEasterEgg(value); }
      }
      public Builder SetEasterEgg(global::Hangups.Proto.EasterEgg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEasterEgg = true;
        result.easterEgg_ = value;
        return this;
      }
      public Builder SetEasterEgg(global::Hangups.Proto.EasterEgg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEasterEgg = true;
        result.easterEgg_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEasterEgg(global::Hangups.Proto.EasterEgg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEasterEgg &&
            result.easterEgg_ != global::Hangups.Proto.EasterEgg.DefaultInstance) {
            result.easterEgg_ = global::Hangups.Proto.EasterEgg.CreateBuilder(result.easterEgg_).MergeFrom(value).BuildPartial();
        } else {
          result.easterEgg_ = value;
        }
        result.hasEasterEgg = true;
        return this;
      }
      public Builder ClearEasterEgg() {
        PrepareBuilder();
        result.hasEasterEgg = false;
        result.easterEgg_ = null;
        return this;
      }
    }
    static EasterEggNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SelfPresenceNotification : pb::GeneratedMessage<SelfPresenceNotification, SelfPresenceNotification.Builder> {
    private SelfPresenceNotification() { }
    private static readonly SelfPresenceNotification defaultInstance = new SelfPresenceNotification().MakeReadOnly();
    private static readonly string[] _selfPresenceNotificationFieldNames = new string[] { "client_presence_state", "desktop_off_setting", "desktop_off_state", "do_not_disturb_setting", "mood_state" };
    private static readonly uint[] _selfPresenceNotificationFieldTags = new uint[] { 10, 34, 42, 26, 50 };
    public static SelfPresenceNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SelfPresenceNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SelfPresenceNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SelfPresenceNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SelfPresenceNotification, SelfPresenceNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SelfPresenceNotification__FieldAccessorTable; }
    }
    
    public const int ClientPresenceStateFieldNumber = 1;
    private bool hasClientPresenceState;
    private global::Hangups.Proto.ClientPresenceState clientPresenceState_;
    public bool HasClientPresenceState {
      get { return hasClientPresenceState; }
    }
    public global::Hangups.Proto.ClientPresenceState ClientPresenceState {
      get { return clientPresenceState_ ?? global::Hangups.Proto.ClientPresenceState.DefaultInstance; }
    }
    
    public const int DoNotDisturbSettingFieldNumber = 3;
    private bool hasDoNotDisturbSetting;
    private global::Hangups.Proto.DoNotDisturbSetting doNotDisturbSetting_;
    public bool HasDoNotDisturbSetting {
      get { return hasDoNotDisturbSetting; }
    }
    public global::Hangups.Proto.DoNotDisturbSetting DoNotDisturbSetting {
      get { return doNotDisturbSetting_ ?? global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance; }
    }
    
    public const int DesktopOffSettingFieldNumber = 4;
    private bool hasDesktopOffSetting;
    private global::Hangups.Proto.DesktopOffSetting desktopOffSetting_;
    public bool HasDesktopOffSetting {
      get { return hasDesktopOffSetting; }
    }
    public global::Hangups.Proto.DesktopOffSetting DesktopOffSetting {
      get { return desktopOffSetting_ ?? global::Hangups.Proto.DesktopOffSetting.DefaultInstance; }
    }
    
    public const int DesktopOffStateFieldNumber = 5;
    private bool hasDesktopOffState;
    private global::Hangups.Proto.DesktopOffState desktopOffState_;
    public bool HasDesktopOffState {
      get { return hasDesktopOffState; }
    }
    public global::Hangups.Proto.DesktopOffState DesktopOffState {
      get { return desktopOffState_ ?? global::Hangups.Proto.DesktopOffState.DefaultInstance; }
    }
    
    public const int MoodStateFieldNumber = 6;
    private bool hasMoodState;
    private global::Hangups.Proto.MoodState moodState_;
    public bool HasMoodState {
      get { return hasMoodState; }
    }
    public global::Hangups.Proto.MoodState MoodState {
      get { return moodState_ ?? global::Hangups.Proto.MoodState.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMoodState) {
          if (!MoodState.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _selfPresenceNotificationFieldNames;
      if (hasClientPresenceState) {
        output.WriteMessage(1, field_names[0], ClientPresenceState);
      }
      if (hasDoNotDisturbSetting) {
        output.WriteMessage(3, field_names[3], DoNotDisturbSetting);
      }
      if (hasDesktopOffSetting) {
        output.WriteMessage(4, field_names[1], DesktopOffSetting);
      }
      if (hasDesktopOffState) {
        output.WriteMessage(5, field_names[2], DesktopOffState);
      }
      if (hasMoodState) {
        output.WriteMessage(6, field_names[4], MoodState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientPresenceState) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ClientPresenceState);
      }
      if (hasDoNotDisturbSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, DoNotDisturbSetting);
      }
      if (hasDesktopOffSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, DesktopOffSetting);
      }
      if (hasDesktopOffState) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, DesktopOffState);
      }
      if (hasMoodState) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, MoodState);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SelfPresenceNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SelfPresenceNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SelfPresenceNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SelfPresenceNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SelfPresenceNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SelfPresenceNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SelfPresenceNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SelfPresenceNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SelfPresenceNotification result;
      
      private SelfPresenceNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SelfPresenceNotification original = result;
          result = new SelfPresenceNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SelfPresenceNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SelfPresenceNotification.Descriptor; }
      }
      
      public override SelfPresenceNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.SelfPresenceNotification.DefaultInstance; }
      }
      
      public override SelfPresenceNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SelfPresenceNotification) {
          return MergeFrom((SelfPresenceNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SelfPresenceNotification other) {
        if (other == global::Hangups.Proto.SelfPresenceNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClientPresenceState) {
          MergeClientPresenceState(other.ClientPresenceState);
        }
        if (other.HasDoNotDisturbSetting) {
          MergeDoNotDisturbSetting(other.DoNotDisturbSetting);
        }
        if (other.HasDesktopOffSetting) {
          MergeDesktopOffSetting(other.DesktopOffSetting);
        }
        if (other.HasDesktopOffState) {
          MergeDesktopOffState(other.DesktopOffState);
        }
        if (other.HasMoodState) {
          MergeMoodState(other.MoodState);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_selfPresenceNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _selfPresenceNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ClientPresenceState.Builder subBuilder = global::Hangups.Proto.ClientPresenceState.CreateBuilder();
              if (result.hasClientPresenceState) {
                subBuilder.MergeFrom(ClientPresenceState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ClientPresenceState = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::Hangups.Proto.DoNotDisturbSetting.Builder subBuilder = global::Hangups.Proto.DoNotDisturbSetting.CreateBuilder();
              if (result.hasDoNotDisturbSetting) {
                subBuilder.MergeFrom(DoNotDisturbSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DoNotDisturbSetting = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::Hangups.Proto.DesktopOffSetting.Builder subBuilder = global::Hangups.Proto.DesktopOffSetting.CreateBuilder();
              if (result.hasDesktopOffSetting) {
                subBuilder.MergeFrom(DesktopOffSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopOffSetting = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Hangups.Proto.DesktopOffState.Builder subBuilder = global::Hangups.Proto.DesktopOffState.CreateBuilder();
              if (result.hasDesktopOffState) {
                subBuilder.MergeFrom(DesktopOffState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopOffState = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::Hangups.Proto.MoodState.Builder subBuilder = global::Hangups.Proto.MoodState.CreateBuilder();
              if (result.hasMoodState) {
                subBuilder.MergeFrom(MoodState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MoodState = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClientPresenceState {
       get { return result.hasClientPresenceState; }
      }
      public global::Hangups.Proto.ClientPresenceState ClientPresenceState {
        get { return result.ClientPresenceState; }
        set { SetClientPresenceState(value); }
      }
      public Builder SetClientPresenceState(global::Hangups.Proto.ClientPresenceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientPresenceState = true;
        result.clientPresenceState_ = value;
        return this;
      }
      public Builder SetClientPresenceState(global::Hangups.Proto.ClientPresenceState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasClientPresenceState = true;
        result.clientPresenceState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeClientPresenceState(global::Hangups.Proto.ClientPresenceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasClientPresenceState &&
            result.clientPresenceState_ != global::Hangups.Proto.ClientPresenceState.DefaultInstance) {
            result.clientPresenceState_ = global::Hangups.Proto.ClientPresenceState.CreateBuilder(result.clientPresenceState_).MergeFrom(value).BuildPartial();
        } else {
          result.clientPresenceState_ = value;
        }
        result.hasClientPresenceState = true;
        return this;
      }
      public Builder ClearClientPresenceState() {
        PrepareBuilder();
        result.hasClientPresenceState = false;
        result.clientPresenceState_ = null;
        return this;
      }
      
      public bool HasDoNotDisturbSetting {
       get { return result.hasDoNotDisturbSetting; }
      }
      public global::Hangups.Proto.DoNotDisturbSetting DoNotDisturbSetting {
        get { return result.DoNotDisturbSetting; }
        set { SetDoNotDisturbSetting(value); }
      }
      public Builder SetDoNotDisturbSetting(global::Hangups.Proto.DoNotDisturbSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDoNotDisturbSetting = true;
        result.doNotDisturbSetting_ = value;
        return this;
      }
      public Builder SetDoNotDisturbSetting(global::Hangups.Proto.DoNotDisturbSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDoNotDisturbSetting = true;
        result.doNotDisturbSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDoNotDisturbSetting(global::Hangups.Proto.DoNotDisturbSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDoNotDisturbSetting &&
            result.doNotDisturbSetting_ != global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance) {
            result.doNotDisturbSetting_ = global::Hangups.Proto.DoNotDisturbSetting.CreateBuilder(result.doNotDisturbSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.doNotDisturbSetting_ = value;
        }
        result.hasDoNotDisturbSetting = true;
        return this;
      }
      public Builder ClearDoNotDisturbSetting() {
        PrepareBuilder();
        result.hasDoNotDisturbSetting = false;
        result.doNotDisturbSetting_ = null;
        return this;
      }
      
      public bool HasDesktopOffSetting {
       get { return result.hasDesktopOffSetting; }
      }
      public global::Hangups.Proto.DesktopOffSetting DesktopOffSetting {
        get { return result.DesktopOffSetting; }
        set { SetDesktopOffSetting(value); }
      }
      public Builder SetDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopOffSetting = true;
        result.desktopOffSetting_ = value;
        return this;
      }
      public Builder SetDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopOffSetting = true;
        result.desktopOffSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopOffSetting &&
            result.desktopOffSetting_ != global::Hangups.Proto.DesktopOffSetting.DefaultInstance) {
            result.desktopOffSetting_ = global::Hangups.Proto.DesktopOffSetting.CreateBuilder(result.desktopOffSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopOffSetting_ = value;
        }
        result.hasDesktopOffSetting = true;
        return this;
      }
      public Builder ClearDesktopOffSetting() {
        PrepareBuilder();
        result.hasDesktopOffSetting = false;
        result.desktopOffSetting_ = null;
        return this;
      }
      
      public bool HasDesktopOffState {
       get { return result.hasDesktopOffState; }
      }
      public global::Hangups.Proto.DesktopOffState DesktopOffState {
        get { return result.DesktopOffState; }
        set { SetDesktopOffState(value); }
      }
      public Builder SetDesktopOffState(global::Hangups.Proto.DesktopOffState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopOffState = true;
        result.desktopOffState_ = value;
        return this;
      }
      public Builder SetDesktopOffState(global::Hangups.Proto.DesktopOffState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopOffState = true;
        result.desktopOffState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopOffState(global::Hangups.Proto.DesktopOffState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopOffState &&
            result.desktopOffState_ != global::Hangups.Proto.DesktopOffState.DefaultInstance) {
            result.desktopOffState_ = global::Hangups.Proto.DesktopOffState.CreateBuilder(result.desktopOffState_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopOffState_ = value;
        }
        result.hasDesktopOffState = true;
        return this;
      }
      public Builder ClearDesktopOffState() {
        PrepareBuilder();
        result.hasDesktopOffState = false;
        result.desktopOffState_ = null;
        return this;
      }
      
      public bool HasMoodState {
       get { return result.hasMoodState; }
      }
      public global::Hangups.Proto.MoodState MoodState {
        get { return result.MoodState; }
        set { SetMoodState(value); }
      }
      public Builder SetMoodState(global::Hangups.Proto.MoodState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMoodState = true;
        result.moodState_ = value;
        return this;
      }
      public Builder SetMoodState(global::Hangups.Proto.MoodState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMoodState = true;
        result.moodState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMoodState(global::Hangups.Proto.MoodState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMoodState &&
            result.moodState_ != global::Hangups.Proto.MoodState.DefaultInstance) {
            result.moodState_ = global::Hangups.Proto.MoodState.CreateBuilder(result.moodState_).MergeFrom(value).BuildPartial();
        } else {
          result.moodState_ = value;
        }
        result.hasMoodState = true;
        return this;
      }
      public Builder ClearMoodState() {
        PrepareBuilder();
        result.hasMoodState = false;
        result.moodState_ = null;
        return this;
      }
    }
    static SelfPresenceNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteActionNotification : pb::GeneratedMessage<DeleteActionNotification, DeleteActionNotification.Builder> {
    private DeleteActionNotification() { }
    private static readonly DeleteActionNotification defaultInstance = new DeleteActionNotification().MakeReadOnly();
    private static readonly string[] _deleteActionNotificationFieldNames = new string[] { "conversation_id", "delete_action" };
    private static readonly uint[] _deleteActionNotificationFieldTags = new uint[] { 10, 18 };
    public static DeleteActionNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteActionNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteActionNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteActionNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteActionNotification, DeleteActionNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteActionNotification__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int DeleteActionFieldNumber = 2;
    private bool hasDeleteAction;
    private global::Hangups.Proto.DeleteAction deleteAction_;
    public bool HasDeleteAction {
      get { return hasDeleteAction; }
    }
    public global::Hangups.Proto.DeleteAction DeleteAction {
      get { return deleteAction_ ?? global::Hangups.Proto.DeleteAction.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteActionNotificationFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      if (hasDeleteAction) {
        output.WriteMessage(2, field_names[1], DeleteAction);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      if (hasDeleteAction) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, DeleteAction);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteActionNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteActionNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteActionNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteActionNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteActionNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteActionNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteActionNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteActionNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteActionNotification result;
      
      private DeleteActionNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteActionNotification original = result;
          result = new DeleteActionNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteActionNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeleteActionNotification.Descriptor; }
      }
      
      public override DeleteActionNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.DeleteActionNotification.DefaultInstance; }
      }
      
      public override DeleteActionNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteActionNotification) {
          return MergeFrom((DeleteActionNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteActionNotification other) {
        if (other == global::Hangups.Proto.DeleteActionNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasDeleteAction) {
          MergeDeleteAction(other.DeleteAction);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteActionNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteActionNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.DeleteAction.Builder subBuilder = global::Hangups.Proto.DeleteAction.CreateBuilder();
              if (result.hasDeleteAction) {
                subBuilder.MergeFrom(DeleteAction);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DeleteAction = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasDeleteAction {
       get { return result.hasDeleteAction; }
      }
      public global::Hangups.Proto.DeleteAction DeleteAction {
        get { return result.DeleteAction; }
        set { SetDeleteAction(value); }
      }
      public Builder SetDeleteAction(global::Hangups.Proto.DeleteAction value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeleteAction = true;
        result.deleteAction_ = value;
        return this;
      }
      public Builder SetDeleteAction(global::Hangups.Proto.DeleteAction.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDeleteAction = true;
        result.deleteAction_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDeleteAction(global::Hangups.Proto.DeleteAction value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDeleteAction &&
            result.deleteAction_ != global::Hangups.Proto.DeleteAction.DefaultInstance) {
            result.deleteAction_ = global::Hangups.Proto.DeleteAction.CreateBuilder(result.deleteAction_).MergeFrom(value).BuildPartial();
        } else {
          result.deleteAction_ = value;
        }
        result.hasDeleteAction = true;
        return this;
      }
      public Builder ClearDeleteAction() {
        PrepareBuilder();
        result.hasDeleteAction = false;
        result.deleteAction_ = null;
        return this;
      }
    }
    static DeleteActionNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PresenceNotification : pb::GeneratedMessage<PresenceNotification, PresenceNotification.Builder> {
    private PresenceNotification() { }
    private static readonly PresenceNotification defaultInstance = new PresenceNotification().MakeReadOnly();
    private static readonly string[] _presenceNotificationFieldNames = new string[] { "presence" };
    private static readonly uint[] _presenceNotificationFieldTags = new uint[] { 10 };
    public static PresenceNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PresenceNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PresenceNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_PresenceNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PresenceNotification, PresenceNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_PresenceNotification__FieldAccessorTable; }
    }
    
    public const int PresenceFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.PresenceResult> presence_ = new pbc::PopsicleList<global::Hangups.Proto.PresenceResult>();
    public scg::IList<global::Hangups.Proto.PresenceResult> PresenceList {
      get { return presence_; }
    }
    public int PresenceCount {
      get { return presence_.Count; }
    }
    public global::Hangups.Proto.PresenceResult GetPresence(int index) {
      return presence_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.PresenceResult element in PresenceList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _presenceNotificationFieldNames;
      if (presence_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], presence_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.PresenceResult element in PresenceList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PresenceNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PresenceNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PresenceNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PresenceNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PresenceNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PresenceNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PresenceNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PresenceNotification MakeReadOnly() {
      presence_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PresenceNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PresenceNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PresenceNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PresenceNotification result;
      
      private PresenceNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          PresenceNotification original = result;
          result = new PresenceNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PresenceNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.PresenceNotification.Descriptor; }
      }
      
      public override PresenceNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.PresenceNotification.DefaultInstance; }
      }
      
      public override PresenceNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PresenceNotification) {
          return MergeFrom((PresenceNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PresenceNotification other) {
        if (other == global::Hangups.Proto.PresenceNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.presence_.Count != 0) {
          result.presence_.Add(other.presence_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_presenceNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _presenceNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.presence_, global::Hangups.Proto.PresenceResult.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.PresenceResult> PresenceList {
        get { return PrepareBuilder().presence_; }
      }
      public int PresenceCount {
        get { return result.PresenceCount; }
      }
      public global::Hangups.Proto.PresenceResult GetPresence(int index) {
        return result.GetPresence(index);
      }
      public Builder SetPresence(int index, global::Hangups.Proto.PresenceResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.presence_[index] = value;
        return this;
      }
      public Builder SetPresence(int index, global::Hangups.Proto.PresenceResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.presence_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPresence(global::Hangups.Proto.PresenceResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.presence_.Add(value);
        return this;
      }
      public Builder AddPresence(global::Hangups.Proto.PresenceResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.presence_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePresence(scg::IEnumerable<global::Hangups.Proto.PresenceResult> values) {
        PrepareBuilder();
        result.presence_.Add(values);
        return this;
      }
      public Builder ClearPresence() {
        PrepareBuilder();
        result.presence_.Clear();
        return this;
      }
    }
    static PresenceNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BlockNotification : pb::GeneratedMessage<BlockNotification, BlockNotification.Builder> {
    private BlockNotification() { }
    private static readonly BlockNotification defaultInstance = new BlockNotification().MakeReadOnly();
    private static readonly string[] _blockNotificationFieldNames = new string[] { "block_state_change" };
    private static readonly uint[] _blockNotificationFieldTags = new uint[] { 10 };
    public static BlockNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BlockNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_BlockNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockNotification, BlockNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_BlockNotification__FieldAccessorTable; }
    }
    
    public const int BlockStateChangeFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.BlockStateChange> blockStateChange_ = new pbc::PopsicleList<global::Hangups.Proto.BlockStateChange>();
    public scg::IList<global::Hangups.Proto.BlockStateChange> BlockStateChangeList {
      get { return blockStateChange_; }
    }
    public int BlockStateChangeCount {
      get { return blockStateChange_.Count; }
    }
    public global::Hangups.Proto.BlockStateChange GetBlockStateChange(int index) {
      return blockStateChange_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _blockNotificationFieldNames;
      if (blockStateChange_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], blockStateChange_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.BlockStateChange element in BlockStateChangeList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BlockNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BlockNotification MakeReadOnly() {
      blockStateChange_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BlockNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BlockNotification result;
      
      private BlockNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          BlockNotification original = result;
          result = new BlockNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BlockNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.BlockNotification.Descriptor; }
      }
      
      public override BlockNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.BlockNotification.DefaultInstance; }
      }
      
      public override BlockNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockNotification) {
          return MergeFrom((BlockNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockNotification other) {
        if (other == global::Hangups.Proto.BlockNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.blockStateChange_.Count != 0) {
          result.blockStateChange_.Add(other.blockStateChange_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.blockStateChange_, global::Hangups.Proto.BlockStateChange.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.BlockStateChange> BlockStateChangeList {
        get { return PrepareBuilder().blockStateChange_; }
      }
      public int BlockStateChangeCount {
        get { return result.BlockStateChangeCount; }
      }
      public global::Hangups.Proto.BlockStateChange GetBlockStateChange(int index) {
        return result.GetBlockStateChange(index);
      }
      public Builder SetBlockStateChange(int index, global::Hangups.Proto.BlockStateChange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blockStateChange_[index] = value;
        return this;
      }
      public Builder SetBlockStateChange(int index, global::Hangups.Proto.BlockStateChange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blockStateChange_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBlockStateChange(global::Hangups.Proto.BlockStateChange value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blockStateChange_.Add(value);
        return this;
      }
      public Builder AddBlockStateChange(global::Hangups.Proto.BlockStateChange.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blockStateChange_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBlockStateChange(scg::IEnumerable<global::Hangups.Proto.BlockStateChange> values) {
        PrepareBuilder();
        result.blockStateChange_.Add(values);
        return this;
      }
      public Builder ClearBlockStateChange() {
        PrepareBuilder();
        result.blockStateChange_.Clear();
        return this;
      }
    }
    static BlockNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetNotificationSettingNotification : pb::GeneratedMessage<SetNotificationSettingNotification, SetNotificationSettingNotification.Builder> {
    private SetNotificationSettingNotification() { }
    private static readonly SetNotificationSettingNotification defaultInstance = new SetNotificationSettingNotification().MakeReadOnly();
    private static readonly string[] _setNotificationSettingNotificationFieldNames = new string[] { "desktop_sound_setting" };
    private static readonly uint[] _setNotificationSettingNotificationFieldTags = new uint[] { 18 };
    public static SetNotificationSettingNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetNotificationSettingNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetNotificationSettingNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetNotificationSettingNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetNotificationSettingNotification, SetNotificationSettingNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetNotificationSettingNotification__FieldAccessorTable; }
    }
    
    public const int DesktopSoundSettingFieldNumber = 2;
    private bool hasDesktopSoundSetting;
    private global::Hangups.Proto.DesktopSoundSetting desktopSoundSetting_;
    public bool HasDesktopSoundSetting {
      get { return hasDesktopSoundSetting; }
    }
    public global::Hangups.Proto.DesktopSoundSetting DesktopSoundSetting {
      get { return desktopSoundSetting_ ?? global::Hangups.Proto.DesktopSoundSetting.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setNotificationSettingNotificationFieldNames;
      if (hasDesktopSoundSetting) {
        output.WriteMessage(2, field_names[0], DesktopSoundSetting);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDesktopSoundSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, DesktopSoundSetting);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetNotificationSettingNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetNotificationSettingNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetNotificationSettingNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetNotificationSettingNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetNotificationSettingNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetNotificationSettingNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetNotificationSettingNotification result;
      
      private SetNotificationSettingNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SetNotificationSettingNotification original = result;
          result = new SetNotificationSettingNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetNotificationSettingNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetNotificationSettingNotification.Descriptor; }
      }
      
      public override SetNotificationSettingNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.SetNotificationSettingNotification.DefaultInstance; }
      }
      
      public override SetNotificationSettingNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetNotificationSettingNotification) {
          return MergeFrom((SetNotificationSettingNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetNotificationSettingNotification other) {
        if (other == global::Hangups.Proto.SetNotificationSettingNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDesktopSoundSetting) {
          MergeDesktopSoundSetting(other.DesktopSoundSetting);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setNotificationSettingNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setNotificationSettingNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::Hangups.Proto.DesktopSoundSetting.Builder subBuilder = global::Hangups.Proto.DesktopSoundSetting.CreateBuilder();
              if (result.hasDesktopSoundSetting) {
                subBuilder.MergeFrom(DesktopSoundSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopSoundSetting = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDesktopSoundSetting {
       get { return result.hasDesktopSoundSetting; }
      }
      public global::Hangups.Proto.DesktopSoundSetting DesktopSoundSetting {
        get { return result.DesktopSoundSetting; }
        set { SetDesktopSoundSetting(value); }
      }
      public Builder SetDesktopSoundSetting(global::Hangups.Proto.DesktopSoundSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopSoundSetting = true;
        result.desktopSoundSetting_ = value;
        return this;
      }
      public Builder SetDesktopSoundSetting(global::Hangups.Proto.DesktopSoundSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopSoundSetting = true;
        result.desktopSoundSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopSoundSetting(global::Hangups.Proto.DesktopSoundSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopSoundSetting &&
            result.desktopSoundSetting_ != global::Hangups.Proto.DesktopSoundSetting.DefaultInstance) {
            result.desktopSoundSetting_ = global::Hangups.Proto.DesktopSoundSetting.CreateBuilder(result.desktopSoundSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopSoundSetting_ = value;
        }
        result.hasDesktopSoundSetting = true;
        return this;
      }
      public Builder ClearDesktopSoundSetting() {
        PrepareBuilder();
        result.hasDesktopSoundSetting = false;
        result.desktopSoundSetting_ = null;
        return this;
      }
    }
    static SetNotificationSettingNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RichPresenceEnabledStateNotification : pb::GeneratedMessage<RichPresenceEnabledStateNotification, RichPresenceEnabledStateNotification.Builder> {
    private RichPresenceEnabledStateNotification() { }
    private static readonly RichPresenceEnabledStateNotification defaultInstance = new RichPresenceEnabledStateNotification().MakeReadOnly();
    private static readonly string[] _richPresenceEnabledStateNotificationFieldNames = new string[] { "rich_presence_enabled_state" };
    private static readonly uint[] _richPresenceEnabledStateNotificationFieldTags = new uint[] { 10 };
    public static RichPresenceEnabledStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RichPresenceEnabledStateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RichPresenceEnabledStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RichPresenceEnabledStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RichPresenceEnabledStateNotification, RichPresenceEnabledStateNotification.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RichPresenceEnabledStateNotification__FieldAccessorTable; }
    }
    
    public const int RichPresenceEnabledStateFieldNumber = 1;
    private pbc::PopsicleList<global::Hangups.Proto.RichPresenceEnabledState> richPresenceEnabledState_ = new pbc::PopsicleList<global::Hangups.Proto.RichPresenceEnabledState>();
    public scg::IList<global::Hangups.Proto.RichPresenceEnabledState> RichPresenceEnabledStateList {
      get { return richPresenceEnabledState_; }
    }
    public int RichPresenceEnabledStateCount {
      get { return richPresenceEnabledState_.Count; }
    }
    public global::Hangups.Proto.RichPresenceEnabledState GetRichPresenceEnabledState(int index) {
      return richPresenceEnabledState_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _richPresenceEnabledStateNotificationFieldNames;
      if (richPresenceEnabledState_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], richPresenceEnabledState_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Hangups.Proto.RichPresenceEnabledState element in RichPresenceEnabledStateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RichPresenceEnabledStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RichPresenceEnabledStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RichPresenceEnabledStateNotification MakeReadOnly() {
      richPresenceEnabledState_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RichPresenceEnabledStateNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RichPresenceEnabledStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RichPresenceEnabledStateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RichPresenceEnabledStateNotification result;
      
      private RichPresenceEnabledStateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          RichPresenceEnabledStateNotification original = result;
          result = new RichPresenceEnabledStateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RichPresenceEnabledStateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RichPresenceEnabledStateNotification.Descriptor; }
      }
      
      public override RichPresenceEnabledStateNotification DefaultInstanceForType {
        get { return global::Hangups.Proto.RichPresenceEnabledStateNotification.DefaultInstance; }
      }
      
      public override RichPresenceEnabledStateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RichPresenceEnabledStateNotification) {
          return MergeFrom((RichPresenceEnabledStateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RichPresenceEnabledStateNotification other) {
        if (other == global::Hangups.Proto.RichPresenceEnabledStateNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.richPresenceEnabledState_.Count != 0) {
          result.richPresenceEnabledState_.Add(other.richPresenceEnabledState_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_richPresenceEnabledStateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _richPresenceEnabledStateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.richPresenceEnabledState_, global::Hangups.Proto.RichPresenceEnabledState.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Hangups.Proto.RichPresenceEnabledState> RichPresenceEnabledStateList {
        get { return PrepareBuilder().richPresenceEnabledState_; }
      }
      public int RichPresenceEnabledStateCount {
        get { return result.RichPresenceEnabledStateCount; }
      }
      public global::Hangups.Proto.RichPresenceEnabledState GetRichPresenceEnabledState(int index) {
        return result.GetRichPresenceEnabledState(index);
      }
      public Builder SetRichPresenceEnabledState(int index, global::Hangups.Proto.RichPresenceEnabledState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.richPresenceEnabledState_[index] = value;
        return this;
      }
      public Builder SetRichPresenceEnabledState(int index, global::Hangups.Proto.RichPresenceEnabledState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.richPresenceEnabledState_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRichPresenceEnabledState(global::Hangups.Proto.RichPresenceEnabledState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.richPresenceEnabledState_.Add(value);
        return this;
      }
      public Builder AddRichPresenceEnabledState(global::Hangups.Proto.RichPresenceEnabledState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.richPresenceEnabledState_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRichPresenceEnabledState(scg::IEnumerable<global::Hangups.Proto.RichPresenceEnabledState> values) {
        PrepareBuilder();
        result.richPresenceEnabledState_.Add(values);
        return this;
      }
      public Builder ClearRichPresenceEnabledState() {
        PrepareBuilder();
        result.richPresenceEnabledState_.Clear();
        return this;
      }
    }
    static RichPresenceEnabledStateNotification() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ConversationSpec : pb::GeneratedMessage<ConversationSpec, ConversationSpec.Builder> {
    private ConversationSpec() { }
    private static readonly ConversationSpec defaultInstance = new ConversationSpec().MakeReadOnly();
    private static readonly string[] _conversationSpecFieldNames = new string[] { "conversation_id" };
    private static readonly uint[] _conversationSpecFieldTags = new uint[] { 10 };
    public static ConversationSpec DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ConversationSpec DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ConversationSpec ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationSpec__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ConversationSpec, ConversationSpec.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_ConversationSpec__FieldAccessorTable; }
    }
    
    public const int ConversationIdFieldNumber = 1;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _conversationSpecFieldNames;
      if (hasConversationId) {
        output.WriteMessage(1, field_names[0], ConversationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ConversationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ConversationSpec ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationSpec ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationSpec ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ConversationSpec ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ConversationSpec ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationSpec ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ConversationSpec ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ConversationSpec ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ConversationSpec ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ConversationSpec ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ConversationSpec MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ConversationSpec prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ConversationSpec, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ConversationSpec cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ConversationSpec result;
      
      private ConversationSpec PrepareBuilder() {
        if (resultIsReadOnly) {
          ConversationSpec original = result;
          result = new ConversationSpec();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ConversationSpec MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.ConversationSpec.Descriptor; }
      }
      
      public override ConversationSpec DefaultInstanceForType {
        get { return global::Hangups.Proto.ConversationSpec.DefaultInstance; }
      }
      
      public override ConversationSpec BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ConversationSpec) {
          return MergeFrom((ConversationSpec) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ConversationSpec other) {
        if (other == global::Hangups.Proto.ConversationSpec.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_conversationSpecFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _conversationSpecFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
    }
    static ConversationSpec() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddUserRequest : pb::GeneratedMessage<AddUserRequest, AddUserRequest.Builder> {
    private AddUserRequest() { }
    private static readonly AddUserRequest defaultInstance = new AddUserRequest().MakeReadOnly();
    private static readonly string[] _addUserRequestFieldNames = new string[] { "event_request_header", "invitee_id", "request_header" };
    private static readonly uint[] _addUserRequestFieldTags = new uint[] { 42, 26, 10 };
    public static AddUserRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddUserRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddUserRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_AddUserRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddUserRequest, AddUserRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_AddUserRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int InviteeIdFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.InviteeID> inviteeId_ = new pbc::PopsicleList<global::Hangups.Proto.InviteeID>();
    public scg::IList<global::Hangups.Proto.InviteeID> InviteeIdList {
      get { return inviteeId_; }
    }
    public int InviteeIdCount {
      get { return inviteeId_.Count; }
    }
    public global::Hangups.Proto.InviteeID GetInviteeId(int index) {
      return inviteeId_[index];
    }
    
    public const int EventRequestHeaderFieldNumber = 5;
    private bool hasEventRequestHeader;
    private global::Hangups.Proto.EventRequestHeader eventRequestHeader_;
    public bool HasEventRequestHeader {
      get { return hasEventRequestHeader; }
    }
    public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_ ?? global::Hangups.Proto.EventRequestHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addUserRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (inviteeId_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], inviteeId_);
      }
      if (hasEventRequestHeader) {
        output.WriteMessage(5, field_names[0], EventRequestHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      foreach (global::Hangups.Proto.InviteeID element in InviteeIdList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasEventRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, EventRequestHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddUserRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddUserRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddUserRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddUserRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddUserRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddUserRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddUserRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddUserRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddUserRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddUserRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddUserRequest MakeReadOnly() {
      inviteeId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddUserRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddUserRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddUserRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddUserRequest result;
      
      private AddUserRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddUserRequest original = result;
          result = new AddUserRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddUserRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.AddUserRequest.Descriptor; }
      }
      
      public override AddUserRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.AddUserRequest.DefaultInstance; }
      }
      
      public override AddUserRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddUserRequest) {
          return MergeFrom((AddUserRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddUserRequest other) {
        if (other == global::Hangups.Proto.AddUserRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.inviteeId_.Count != 0) {
          result.inviteeId_.Add(other.inviteeId_);
        }
        if (other.HasEventRequestHeader) {
          MergeEventRequestHeader(other.EventRequestHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addUserRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addUserRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.inviteeId_, global::Hangups.Proto.InviteeID.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::Hangups.Proto.EventRequestHeader.Builder subBuilder = global::Hangups.Proto.EventRequestHeader.CreateBuilder();
              if (result.hasEventRequestHeader) {
                subBuilder.MergeFrom(EventRequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EventRequestHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.InviteeID> InviteeIdList {
        get { return PrepareBuilder().inviteeId_; }
      }
      public int InviteeIdCount {
        get { return result.InviteeIdCount; }
      }
      public global::Hangups.Proto.InviteeID GetInviteeId(int index) {
        return result.GetInviteeId(index);
      }
      public Builder SetInviteeId(int index, global::Hangups.Proto.InviteeID value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.inviteeId_[index] = value;
        return this;
      }
      public Builder SetInviteeId(int index, global::Hangups.Proto.InviteeID.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.inviteeId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInviteeId(global::Hangups.Proto.InviteeID value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.inviteeId_.Add(value);
        return this;
      }
      public Builder AddInviteeId(global::Hangups.Proto.InviteeID.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.inviteeId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInviteeId(scg::IEnumerable<global::Hangups.Proto.InviteeID> values) {
        PrepareBuilder();
        result.inviteeId_.Add(values);
        return this;
      }
      public Builder ClearInviteeId() {
        PrepareBuilder();
        result.inviteeId_.Clear();
        return this;
      }
      
      public bool HasEventRequestHeader {
       get { return result.hasEventRequestHeader; }
      }
      public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
        get { return result.EventRequestHeader; }
        set { SetEventRequestHeader(value); }
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = value;
        return this;
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEventRequestHeader &&
            result.eventRequestHeader_ != global::Hangups.Proto.EventRequestHeader.DefaultInstance) {
            result.eventRequestHeader_ = global::Hangups.Proto.EventRequestHeader.CreateBuilder(result.eventRequestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.eventRequestHeader_ = value;
        }
        result.hasEventRequestHeader = true;
        return this;
      }
      public Builder ClearEventRequestHeader() {
        PrepareBuilder();
        result.hasEventRequestHeader = false;
        result.eventRequestHeader_ = null;
        return this;
      }
    }
    static AddUserRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddUserResponse : pb::GeneratedMessage<AddUserResponse, AddUserResponse.Builder> {
    private AddUserResponse() { }
    private static readonly AddUserResponse defaultInstance = new AddUserResponse().MakeReadOnly();
    private static readonly string[] _addUserResponseFieldNames = new string[] { "created_event", "response_header" };
    private static readonly uint[] _addUserResponseFieldTags = new uint[] { 42, 10 };
    public static AddUserResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddUserResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddUserResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_AddUserResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddUserResponse, AddUserResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_AddUserResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int CreatedEventFieldNumber = 5;
    private bool hasCreatedEvent;
    private global::Hangups.Proto.Event createdEvent_;
    public bool HasCreatedEvent {
      get { return hasCreatedEvent; }
    }
    public global::Hangups.Proto.Event CreatedEvent {
      get { return createdEvent_ ?? global::Hangups.Proto.Event.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCreatedEvent) {
          if (!CreatedEvent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addUserResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasCreatedEvent) {
        output.WriteMessage(5, field_names[0], CreatedEvent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasCreatedEvent) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, CreatedEvent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddUserResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddUserResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddUserResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddUserResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddUserResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddUserResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddUserResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddUserResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddUserResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddUserResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddUserResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddUserResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddUserResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddUserResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddUserResponse result;
      
      private AddUserResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AddUserResponse original = result;
          result = new AddUserResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddUserResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.AddUserResponse.Descriptor; }
      }
      
      public override AddUserResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.AddUserResponse.DefaultInstance; }
      }
      
      public override AddUserResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddUserResponse) {
          return MergeFrom((AddUserResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddUserResponse other) {
        if (other == global::Hangups.Proto.AddUserResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasCreatedEvent) {
          MergeCreatedEvent(other.CreatedEvent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addUserResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addUserResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Hangups.Proto.Event.Builder subBuilder = global::Hangups.Proto.Event.CreateBuilder();
              if (result.hasCreatedEvent) {
                subBuilder.MergeFrom(CreatedEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreatedEvent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasCreatedEvent {
       get { return result.hasCreatedEvent; }
      }
      public global::Hangups.Proto.Event CreatedEvent {
        get { return result.CreatedEvent; }
        set { SetCreatedEvent(value); }
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = value;
        return this;
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreatedEvent &&
            result.createdEvent_ != global::Hangups.Proto.Event.DefaultInstance) {
            result.createdEvent_ = global::Hangups.Proto.Event.CreateBuilder(result.createdEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.createdEvent_ = value;
        }
        result.hasCreatedEvent = true;
        return this;
      }
      public Builder ClearCreatedEvent() {
        PrepareBuilder();
        result.hasCreatedEvent = false;
        result.createdEvent_ = null;
        return this;
      }
    }
    static AddUserResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateConversationRequest : pb::GeneratedMessage<CreateConversationRequest, CreateConversationRequest.Builder> {
    private CreateConversationRequest() { }
    private static readonly CreateConversationRequest defaultInstance = new CreateConversationRequest().MakeReadOnly();
    private static readonly string[] _createConversationRequestFieldNames = new string[] { "client_generated_id", "invitee_id", "name", "request_header", "type" };
    private static readonly uint[] _createConversationRequestFieldTags = new uint[] { 24, 42, 34, 10, 16 };
    public static CreateConversationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateConversationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateConversationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_CreateConversationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateConversationRequest, CreateConversationRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_CreateConversationRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::Hangups.Proto.ConversationType type_ = global::Hangups.Proto.ConversationType.CONVERSATION_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.ConversationType Type {
      get { return type_; }
    }
    
    public const int ClientGeneratedIdFieldNumber = 3;
    private bool hasClientGeneratedId;
    private ulong clientGeneratedId_;
    public bool HasClientGeneratedId {
      get { return hasClientGeneratedId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ClientGeneratedId {
      get { return clientGeneratedId_; }
    }
    
    public const int NameFieldNumber = 4;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int InviteeIdFieldNumber = 5;
    private pbc::PopsicleList<global::Hangups.Proto.InviteeID> inviteeId_ = new pbc::PopsicleList<global::Hangups.Proto.InviteeID>();
    public scg::IList<global::Hangups.Proto.InviteeID> InviteeIdList {
      get { return inviteeId_; }
    }
    public int InviteeIdCount {
      get { return inviteeId_.Count; }
    }
    public global::Hangups.Proto.InviteeID GetInviteeId(int index) {
      return inviteeId_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createConversationRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[3], RequestHeader);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[4], (int) Type, Type);
      }
      if (hasClientGeneratedId) {
        output.WriteUInt64(3, field_names[0], ClientGeneratedId);
      }
      if (hasName) {
        output.WriteString(4, field_names[2], Name);
      }
      if (inviteeId_.Count > 0) {
        output.WriteMessageArray(5, field_names[1], inviteeId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasClientGeneratedId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, ClientGeneratedId);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Name);
      }
      foreach (global::Hangups.Proto.InviteeID element in InviteeIdList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateConversationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateConversationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateConversationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateConversationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateConversationRequest MakeReadOnly() {
      inviteeId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateConversationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateConversationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateConversationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateConversationRequest result;
      
      private CreateConversationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateConversationRequest original = result;
          result = new CreateConversationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateConversationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.CreateConversationRequest.Descriptor; }
      }
      
      public override CreateConversationRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.CreateConversationRequest.DefaultInstance; }
      }
      
      public override CreateConversationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateConversationRequest) {
          return MergeFrom((CreateConversationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateConversationRequest other) {
        if (other == global::Hangups.Proto.CreateConversationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasClientGeneratedId) {
          ClientGeneratedId = other.ClientGeneratedId;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.inviteeId_.Count != 0) {
          result.inviteeId_.Add(other.inviteeId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createConversationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createConversationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasClientGeneratedId = input.ReadUInt64(ref result.clientGeneratedId_);
              break;
            }
            case 34: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.inviteeId_, global::Hangups.Proto.InviteeID.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.ConversationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.ConversationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.ConversationType.CONVERSATION_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasClientGeneratedId {
        get { return result.hasClientGeneratedId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong ClientGeneratedId {
        get { return result.ClientGeneratedId; }
        set { SetClientGeneratedId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClientGeneratedId(ulong value) {
        PrepareBuilder();
        result.hasClientGeneratedId = true;
        result.clientGeneratedId_ = value;
        return this;
      }
      public Builder ClearClientGeneratedId() {
        PrepareBuilder();
        result.hasClientGeneratedId = false;
        result.clientGeneratedId_ = 0UL;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.InviteeID> InviteeIdList {
        get { return PrepareBuilder().inviteeId_; }
      }
      public int InviteeIdCount {
        get { return result.InviteeIdCount; }
      }
      public global::Hangups.Proto.InviteeID GetInviteeId(int index) {
        return result.GetInviteeId(index);
      }
      public Builder SetInviteeId(int index, global::Hangups.Proto.InviteeID value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.inviteeId_[index] = value;
        return this;
      }
      public Builder SetInviteeId(int index, global::Hangups.Proto.InviteeID.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.inviteeId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInviteeId(global::Hangups.Proto.InviteeID value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.inviteeId_.Add(value);
        return this;
      }
      public Builder AddInviteeId(global::Hangups.Proto.InviteeID.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.inviteeId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInviteeId(scg::IEnumerable<global::Hangups.Proto.InviteeID> values) {
        PrepareBuilder();
        result.inviteeId_.Add(values);
        return this;
      }
      public Builder ClearInviteeId() {
        PrepareBuilder();
        result.inviteeId_.Clear();
        return this;
      }
    }
    static CreateConversationRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateConversationResponse : pb::GeneratedMessage<CreateConversationResponse, CreateConversationResponse.Builder> {
    private CreateConversationResponse() { }
    private static readonly CreateConversationResponse defaultInstance = new CreateConversationResponse().MakeReadOnly();
    private static readonly string[] _createConversationResponseFieldNames = new string[] { "conversation", "new_conversation_created", "response_header" };
    private static readonly uint[] _createConversationResponseFieldTags = new uint[] { 18, 56, 10 };
    public static CreateConversationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateConversationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateConversationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_CreateConversationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateConversationResponse, CreateConversationResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_CreateConversationResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int ConversationFieldNumber = 2;
    private bool hasConversation;
    private global::Hangups.Proto.Conversation conversation_;
    public bool HasConversation {
      get { return hasConversation; }
    }
    public global::Hangups.Proto.Conversation Conversation {
      get { return conversation_ ?? global::Hangups.Proto.Conversation.DefaultInstance; }
    }
    
    public const int NewConversationCreatedFieldNumber = 7;
    private bool hasNewConversationCreated;
    private bool newConversationCreated_;
    public bool HasNewConversationCreated {
      get { return hasNewConversationCreated; }
    }
    public bool NewConversationCreated {
      get { return newConversationCreated_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createConversationResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[2], ResponseHeader);
      }
      if (hasConversation) {
        output.WriteMessage(2, field_names[0], Conversation);
      }
      if (hasNewConversationCreated) {
        output.WriteBool(7, field_names[1], NewConversationCreated);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasConversation) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Conversation);
      }
      if (hasNewConversationCreated) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, NewConversationCreated);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateConversationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateConversationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateConversationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateConversationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateConversationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateConversationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateConversationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateConversationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateConversationResponse result;
      
      private CreateConversationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateConversationResponse original = result;
          result = new CreateConversationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateConversationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.CreateConversationResponse.Descriptor; }
      }
      
      public override CreateConversationResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.CreateConversationResponse.DefaultInstance; }
      }
      
      public override CreateConversationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateConversationResponse) {
          return MergeFrom((CreateConversationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateConversationResponse other) {
        if (other == global::Hangups.Proto.CreateConversationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasConversation) {
          MergeConversation(other.Conversation);
        }
        if (other.HasNewConversationCreated) {
          NewConversationCreated = other.NewConversationCreated;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createConversationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createConversationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.Conversation.Builder subBuilder = global::Hangups.Proto.Conversation.CreateBuilder();
              if (result.hasConversation) {
                subBuilder.MergeFrom(Conversation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Conversation = subBuilder.BuildPartial();
              break;
            }
            case 56: {
              result.hasNewConversationCreated = input.ReadBool(ref result.newConversationCreated_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasConversation {
       get { return result.hasConversation; }
      }
      public global::Hangups.Proto.Conversation Conversation {
        get { return result.Conversation; }
        set { SetConversation(value); }
      }
      public Builder SetConversation(global::Hangups.Proto.Conversation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversation = true;
        result.conversation_ = value;
        return this;
      }
      public Builder SetConversation(global::Hangups.Proto.Conversation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversation = true;
        result.conversation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversation(global::Hangups.Proto.Conversation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversation &&
            result.conversation_ != global::Hangups.Proto.Conversation.DefaultInstance) {
            result.conversation_ = global::Hangups.Proto.Conversation.CreateBuilder(result.conversation_).MergeFrom(value).BuildPartial();
        } else {
          result.conversation_ = value;
        }
        result.hasConversation = true;
        return this;
      }
      public Builder ClearConversation() {
        PrepareBuilder();
        result.hasConversation = false;
        result.conversation_ = null;
        return this;
      }
      
      public bool HasNewConversationCreated {
        get { return result.hasNewConversationCreated; }
      }
      public bool NewConversationCreated {
        get { return result.NewConversationCreated; }
        set { SetNewConversationCreated(value); }
      }
      public Builder SetNewConversationCreated(bool value) {
        PrepareBuilder();
        result.hasNewConversationCreated = true;
        result.newConversationCreated_ = value;
        return this;
      }
      public Builder ClearNewConversationCreated() {
        PrepareBuilder();
        result.hasNewConversationCreated = false;
        result.newConversationCreated_ = false;
        return this;
      }
    }
    static CreateConversationResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteConversationRequest : pb::GeneratedMessage<DeleteConversationRequest, DeleteConversationRequest.Builder> {
    private DeleteConversationRequest() { }
    private static readonly DeleteConversationRequest defaultInstance = new DeleteConversationRequest().MakeReadOnly();
    private static readonly string[] _deleteConversationRequestFieldNames = new string[] { "conversation_id", "delete_upper_bound_timestamp", "request_header" };
    private static readonly uint[] _deleteConversationRequestFieldTags = new uint[] { 18, 24, 10 };
    public static DeleteConversationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteConversationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteConversationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteConversationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteConversationRequest, DeleteConversationRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteConversationRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int DeleteUpperBoundTimestampFieldNumber = 3;
    private bool hasDeleteUpperBoundTimestamp;
    private ulong deleteUpperBoundTimestamp_;
    public bool HasDeleteUpperBoundTimestamp {
      get { return hasDeleteUpperBoundTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeleteUpperBoundTimestamp {
      get { return deleteUpperBoundTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteConversationRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasDeleteUpperBoundTimestamp) {
        output.WriteUInt64(3, field_names[1], DeleteUpperBoundTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasDeleteUpperBoundTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, DeleteUpperBoundTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteConversationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteConversationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteConversationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteConversationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteConversationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteConversationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteConversationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteConversationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteConversationRequest result;
      
      private DeleteConversationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteConversationRequest original = result;
          result = new DeleteConversationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteConversationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeleteConversationRequest.Descriptor; }
      }
      
      public override DeleteConversationRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.DeleteConversationRequest.DefaultInstance; }
      }
      
      public override DeleteConversationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteConversationRequest) {
          return MergeFrom((DeleteConversationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteConversationRequest other) {
        if (other == global::Hangups.Proto.DeleteConversationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasDeleteUpperBoundTimestamp) {
          DeleteUpperBoundTimestamp = other.DeleteUpperBoundTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteConversationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteConversationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasDeleteUpperBoundTimestamp = input.ReadUInt64(ref result.deleteUpperBoundTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasDeleteUpperBoundTimestamp {
        get { return result.hasDeleteUpperBoundTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong DeleteUpperBoundTimestamp {
        get { return result.DeleteUpperBoundTimestamp; }
        set { SetDeleteUpperBoundTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDeleteUpperBoundTimestamp(ulong value) {
        PrepareBuilder();
        result.hasDeleteUpperBoundTimestamp = true;
        result.deleteUpperBoundTimestamp_ = value;
        return this;
      }
      public Builder ClearDeleteUpperBoundTimestamp() {
        PrepareBuilder();
        result.hasDeleteUpperBoundTimestamp = false;
        result.deleteUpperBoundTimestamp_ = 0UL;
        return this;
      }
    }
    static DeleteConversationRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeleteConversationResponse : pb::GeneratedMessage<DeleteConversationResponse, DeleteConversationResponse.Builder> {
    private DeleteConversationResponse() { }
    private static readonly DeleteConversationResponse defaultInstance = new DeleteConversationResponse().MakeReadOnly();
    private static readonly string[] _deleteConversationResponseFieldNames = new string[] { "delete_action", "response_header" };
    private static readonly uint[] _deleteConversationResponseFieldTags = new uint[] { 18, 10 };
    public static DeleteConversationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeleteConversationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeleteConversationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteConversationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeleteConversationResponse, DeleteConversationResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_DeleteConversationResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int DeleteActionFieldNumber = 2;
    private bool hasDeleteAction;
    private global::Hangups.Proto.DeleteAction deleteAction_;
    public bool HasDeleteAction {
      get { return hasDeleteAction; }
    }
    public global::Hangups.Proto.DeleteAction DeleteAction {
      get { return deleteAction_ ?? global::Hangups.Proto.DeleteAction.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deleteConversationResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasDeleteAction) {
        output.WriteMessage(2, field_names[0], DeleteAction);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasDeleteAction) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, DeleteAction);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeleteConversationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeleteConversationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeleteConversationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeleteConversationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeleteConversationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeleteConversationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeleteConversationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeleteConversationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeleteConversationResponse result;
      
      private DeleteConversationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          DeleteConversationResponse original = result;
          result = new DeleteConversationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeleteConversationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.DeleteConversationResponse.Descriptor; }
      }
      
      public override DeleteConversationResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.DeleteConversationResponse.DefaultInstance; }
      }
      
      public override DeleteConversationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeleteConversationResponse) {
          return MergeFrom((DeleteConversationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeleteConversationResponse other) {
        if (other == global::Hangups.Proto.DeleteConversationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasDeleteAction) {
          MergeDeleteAction(other.DeleteAction);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deleteConversationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deleteConversationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.DeleteAction.Builder subBuilder = global::Hangups.Proto.DeleteAction.CreateBuilder();
              if (result.hasDeleteAction) {
                subBuilder.MergeFrom(DeleteAction);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DeleteAction = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasDeleteAction {
       get { return result.hasDeleteAction; }
      }
      public global::Hangups.Proto.DeleteAction DeleteAction {
        get { return result.DeleteAction; }
        set { SetDeleteAction(value); }
      }
      public Builder SetDeleteAction(global::Hangups.Proto.DeleteAction value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeleteAction = true;
        result.deleteAction_ = value;
        return this;
      }
      public Builder SetDeleteAction(global::Hangups.Proto.DeleteAction.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDeleteAction = true;
        result.deleteAction_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDeleteAction(global::Hangups.Proto.DeleteAction value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDeleteAction &&
            result.deleteAction_ != global::Hangups.Proto.DeleteAction.DefaultInstance) {
            result.deleteAction_ = global::Hangups.Proto.DeleteAction.CreateBuilder(result.deleteAction_).MergeFrom(value).BuildPartial();
        } else {
          result.deleteAction_ = value;
        }
        result.hasDeleteAction = true;
        return this;
      }
      public Builder ClearDeleteAction() {
        PrepareBuilder();
        result.hasDeleteAction = false;
        result.deleteAction_ = null;
        return this;
      }
    }
    static DeleteConversationResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEggRequest : pb::GeneratedMessage<EasterEggRequest, EasterEggRequest.Builder> {
    private EasterEggRequest() { }
    private static readonly EasterEggRequest defaultInstance = new EasterEggRequest().MakeReadOnly();
    private static readonly string[] _easterEggRequestFieldNames = new string[] { "conversation_id", "easter_egg", "request_header" };
    private static readonly uint[] _easterEggRequestFieldTags = new uint[] { 18, 26, 10 };
    public static EasterEggRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EasterEggRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EasterEggRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEggRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EasterEggRequest, EasterEggRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEggRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int EasterEggFieldNumber = 3;
    private bool hasEasterEgg;
    private global::Hangups.Proto.EasterEgg easterEgg_;
    public bool HasEasterEgg {
      get { return hasEasterEgg; }
    }
    public global::Hangups.Proto.EasterEgg EasterEgg {
      get { return easterEgg_ ?? global::Hangups.Proto.EasterEgg.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _easterEggRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasEasterEgg) {
        output.WriteMessage(3, field_names[1], EasterEgg);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasEasterEgg) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, EasterEgg);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EasterEggRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EasterEggRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EasterEggRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEggRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EasterEggRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EasterEggRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EasterEggRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EasterEggRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EasterEggRequest result;
      
      private EasterEggRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EasterEggRequest original = result;
          result = new EasterEggRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EasterEggRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EasterEggRequest.Descriptor; }
      }
      
      public override EasterEggRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.EasterEggRequest.DefaultInstance; }
      }
      
      public override EasterEggRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EasterEggRequest) {
          return MergeFrom((EasterEggRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EasterEggRequest other) {
        if (other == global::Hangups.Proto.EasterEggRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasEasterEgg) {
          MergeEasterEgg(other.EasterEgg);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_easterEggRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _easterEggRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::Hangups.Proto.EasterEgg.Builder subBuilder = global::Hangups.Proto.EasterEgg.CreateBuilder();
              if (result.hasEasterEgg) {
                subBuilder.MergeFrom(EasterEgg);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EasterEgg = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasEasterEgg {
       get { return result.hasEasterEgg; }
      }
      public global::Hangups.Proto.EasterEgg EasterEgg {
        get { return result.EasterEgg; }
        set { SetEasterEgg(value); }
      }
      public Builder SetEasterEgg(global::Hangups.Proto.EasterEgg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEasterEgg = true;
        result.easterEgg_ = value;
        return this;
      }
      public Builder SetEasterEgg(global::Hangups.Proto.EasterEgg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEasterEgg = true;
        result.easterEgg_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEasterEgg(global::Hangups.Proto.EasterEgg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEasterEgg &&
            result.easterEgg_ != global::Hangups.Proto.EasterEgg.DefaultInstance) {
            result.easterEgg_ = global::Hangups.Proto.EasterEgg.CreateBuilder(result.easterEgg_).MergeFrom(value).BuildPartial();
        } else {
          result.easterEgg_ = value;
        }
        result.hasEasterEgg = true;
        return this;
      }
      public Builder ClearEasterEgg() {
        PrepareBuilder();
        result.hasEasterEgg = false;
        result.easterEgg_ = null;
        return this;
      }
    }
    static EasterEggRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EasterEggResponse : pb::GeneratedMessage<EasterEggResponse, EasterEggResponse.Builder> {
    private EasterEggResponse() { }
    private static readonly EasterEggResponse defaultInstance = new EasterEggResponse().MakeReadOnly();
    private static readonly string[] _easterEggResponseFieldNames = new string[] { "response_header", "timestamp" };
    private static readonly uint[] _easterEggResponseFieldTags = new uint[] { 10, 16 };
    public static EasterEggResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EasterEggResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EasterEggResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEggResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EasterEggResponse, EasterEggResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_EasterEggResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 2;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _easterEggResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      if (hasTimestamp) {
        output.WriteUInt64(2, field_names[1], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EasterEggResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EasterEggResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EasterEggResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EasterEggResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EasterEggResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EasterEggResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EasterEggResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EasterEggResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EasterEggResponse result;
      
      private EasterEggResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          EasterEggResponse original = result;
          result = new EasterEggResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EasterEggResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.EasterEggResponse.Descriptor; }
      }
      
      public override EasterEggResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.EasterEggResponse.DefaultInstance; }
      }
      
      public override EasterEggResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EasterEggResponse) {
          return MergeFrom((EasterEggResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EasterEggResponse other) {
        if (other == global::Hangups.Proto.EasterEggResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_easterEggResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _easterEggResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
    }
    static EasterEggResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetConversationRequest : pb::GeneratedMessage<GetConversationRequest, GetConversationRequest.Builder> {
    private GetConversationRequest() { }
    private static readonly GetConversationRequest defaultInstance = new GetConversationRequest().MakeReadOnly();
    private static readonly string[] _getConversationRequestFieldNames = new string[] { "conversation_spec", "event_continuation_token", "include_event", "max_events_per_conversation", "request_header" };
    private static readonly uint[] _getConversationRequestFieldTags = new uint[] { 18, 58, 32, 48, 10 };
    public static GetConversationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetConversationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetConversationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetConversationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetConversationRequest, GetConversationRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetConversationRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationSpecFieldNumber = 2;
    private bool hasConversationSpec;
    private global::Hangups.Proto.ConversationSpec conversationSpec_;
    public bool HasConversationSpec {
      get { return hasConversationSpec; }
    }
    public global::Hangups.Proto.ConversationSpec ConversationSpec {
      get { return conversationSpec_ ?? global::Hangups.Proto.ConversationSpec.DefaultInstance; }
    }
    
    public const int IncludeEventFieldNumber = 4;
    private bool hasIncludeEvent;
    private bool includeEvent_;
    public bool HasIncludeEvent {
      get { return hasIncludeEvent; }
    }
    public bool IncludeEvent {
      get { return includeEvent_; }
    }
    
    public const int MaxEventsPerConversationFieldNumber = 6;
    private bool hasMaxEventsPerConversation;
    private ulong maxEventsPerConversation_;
    public bool HasMaxEventsPerConversation {
      get { return hasMaxEventsPerConversation; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxEventsPerConversation {
      get { return maxEventsPerConversation_; }
    }
    
    public const int EventContinuationTokenFieldNumber = 7;
    private bool hasEventContinuationToken;
    private global::Hangups.Proto.EventContinuationToken eventContinuationToken_;
    public bool HasEventContinuationToken {
      get { return hasEventContinuationToken; }
    }
    public global::Hangups.Proto.EventContinuationToken EventContinuationToken {
      get { return eventContinuationToken_ ?? global::Hangups.Proto.EventContinuationToken.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getConversationRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[4], RequestHeader);
      }
      if (hasConversationSpec) {
        output.WriteMessage(2, field_names[0], ConversationSpec);
      }
      if (hasIncludeEvent) {
        output.WriteBool(4, field_names[2], IncludeEvent);
      }
      if (hasMaxEventsPerConversation) {
        output.WriteUInt64(6, field_names[3], MaxEventsPerConversation);
      }
      if (hasEventContinuationToken) {
        output.WriteMessage(7, field_names[1], EventContinuationToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationSpec) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationSpec);
      }
      if (hasIncludeEvent) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IncludeEvent);
      }
      if (hasMaxEventsPerConversation) {
        size += pb::CodedOutputStream.ComputeUInt64Size(6, MaxEventsPerConversation);
      }
      if (hasEventContinuationToken) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, EventContinuationToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetConversationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetConversationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetConversationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConversationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetConversationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetConversationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetConversationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetConversationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetConversationRequest result;
      
      private GetConversationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetConversationRequest original = result;
          result = new GetConversationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetConversationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetConversationRequest.Descriptor; }
      }
      
      public override GetConversationRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.GetConversationRequest.DefaultInstance; }
      }
      
      public override GetConversationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetConversationRequest) {
          return MergeFrom((GetConversationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetConversationRequest other) {
        if (other == global::Hangups.Proto.GetConversationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationSpec) {
          MergeConversationSpec(other.ConversationSpec);
        }
        if (other.HasIncludeEvent) {
          IncludeEvent = other.IncludeEvent;
        }
        if (other.HasMaxEventsPerConversation) {
          MaxEventsPerConversation = other.MaxEventsPerConversation;
        }
        if (other.HasEventContinuationToken) {
          MergeEventContinuationToken(other.EventContinuationToken);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getConversationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getConversationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationSpec.Builder subBuilder = global::Hangups.Proto.ConversationSpec.CreateBuilder();
              if (result.hasConversationSpec) {
                subBuilder.MergeFrom(ConversationSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationSpec = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasIncludeEvent = input.ReadBool(ref result.includeEvent_);
              break;
            }
            case 48: {
              result.hasMaxEventsPerConversation = input.ReadUInt64(ref result.maxEventsPerConversation_);
              break;
            }
            case 58: {
              global::Hangups.Proto.EventContinuationToken.Builder subBuilder = global::Hangups.Proto.EventContinuationToken.CreateBuilder();
              if (result.hasEventContinuationToken) {
                subBuilder.MergeFrom(EventContinuationToken);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EventContinuationToken = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationSpec {
       get { return result.hasConversationSpec; }
      }
      public global::Hangups.Proto.ConversationSpec ConversationSpec {
        get { return result.ConversationSpec; }
        set { SetConversationSpec(value); }
      }
      public Builder SetConversationSpec(global::Hangups.Proto.ConversationSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationSpec = true;
        result.conversationSpec_ = value;
        return this;
      }
      public Builder SetConversationSpec(global::Hangups.Proto.ConversationSpec.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationSpec = true;
        result.conversationSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationSpec(global::Hangups.Proto.ConversationSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationSpec &&
            result.conversationSpec_ != global::Hangups.Proto.ConversationSpec.DefaultInstance) {
            result.conversationSpec_ = global::Hangups.Proto.ConversationSpec.CreateBuilder(result.conversationSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationSpec_ = value;
        }
        result.hasConversationSpec = true;
        return this;
      }
      public Builder ClearConversationSpec() {
        PrepareBuilder();
        result.hasConversationSpec = false;
        result.conversationSpec_ = null;
        return this;
      }
      
      public bool HasIncludeEvent {
        get { return result.hasIncludeEvent; }
      }
      public bool IncludeEvent {
        get { return result.IncludeEvent; }
        set { SetIncludeEvent(value); }
      }
      public Builder SetIncludeEvent(bool value) {
        PrepareBuilder();
        result.hasIncludeEvent = true;
        result.includeEvent_ = value;
        return this;
      }
      public Builder ClearIncludeEvent() {
        PrepareBuilder();
        result.hasIncludeEvent = false;
        result.includeEvent_ = false;
        return this;
      }
      
      public bool HasMaxEventsPerConversation {
        get { return result.hasMaxEventsPerConversation; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MaxEventsPerConversation {
        get { return result.MaxEventsPerConversation; }
        set { SetMaxEventsPerConversation(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxEventsPerConversation(ulong value) {
        PrepareBuilder();
        result.hasMaxEventsPerConversation = true;
        result.maxEventsPerConversation_ = value;
        return this;
      }
      public Builder ClearMaxEventsPerConversation() {
        PrepareBuilder();
        result.hasMaxEventsPerConversation = false;
        result.maxEventsPerConversation_ = 0UL;
        return this;
      }
      
      public bool HasEventContinuationToken {
       get { return result.hasEventContinuationToken; }
      }
      public global::Hangups.Proto.EventContinuationToken EventContinuationToken {
        get { return result.EventContinuationToken; }
        set { SetEventContinuationToken(value); }
      }
      public Builder SetEventContinuationToken(global::Hangups.Proto.EventContinuationToken value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventContinuationToken = true;
        result.eventContinuationToken_ = value;
        return this;
      }
      public Builder SetEventContinuationToken(global::Hangups.Proto.EventContinuationToken.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEventContinuationToken = true;
        result.eventContinuationToken_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEventContinuationToken(global::Hangups.Proto.EventContinuationToken value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEventContinuationToken &&
            result.eventContinuationToken_ != global::Hangups.Proto.EventContinuationToken.DefaultInstance) {
            result.eventContinuationToken_ = global::Hangups.Proto.EventContinuationToken.CreateBuilder(result.eventContinuationToken_).MergeFrom(value).BuildPartial();
        } else {
          result.eventContinuationToken_ = value;
        }
        result.hasEventContinuationToken = true;
        return this;
      }
      public Builder ClearEventContinuationToken() {
        PrepareBuilder();
        result.hasEventContinuationToken = false;
        result.eventContinuationToken_ = null;
        return this;
      }
    }
    static GetConversationRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetConversationResponse : pb::GeneratedMessage<GetConversationResponse, GetConversationResponse.Builder> {
    private GetConversationResponse() { }
    private static readonly GetConversationResponse defaultInstance = new GetConversationResponse().MakeReadOnly();
    private static readonly string[] _getConversationResponseFieldNames = new string[] { "conversation_state", "response_header" };
    private static readonly uint[] _getConversationResponseFieldTags = new uint[] { 18, 10 };
    public static GetConversationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetConversationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetConversationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetConversationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetConversationResponse, GetConversationResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetConversationResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int ConversationStateFieldNumber = 2;
    private bool hasConversationState;
    private global::Hangups.Proto.ConversationState conversationState_;
    public bool HasConversationState {
      get { return hasConversationState; }
    }
    public global::Hangups.Proto.ConversationState ConversationState {
      get { return conversationState_ ?? global::Hangups.Proto.ConversationState.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasConversationState) {
          if (!ConversationState.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getConversationResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasConversationState) {
        output.WriteMessage(2, field_names[0], ConversationState);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasConversationState) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationState);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetConversationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetConversationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetConversationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConversationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetConversationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetConversationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetConversationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetConversationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetConversationResponse result;
      
      private GetConversationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetConversationResponse original = result;
          result = new GetConversationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetConversationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetConversationResponse.Descriptor; }
      }
      
      public override GetConversationResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.GetConversationResponse.DefaultInstance; }
      }
      
      public override GetConversationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetConversationResponse) {
          return MergeFrom((GetConversationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetConversationResponse other) {
        if (other == global::Hangups.Proto.GetConversationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasConversationState) {
          MergeConversationState(other.ConversationState);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getConversationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getConversationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationState.Builder subBuilder = global::Hangups.Proto.ConversationState.CreateBuilder();
              if (result.hasConversationState) {
                subBuilder.MergeFrom(ConversationState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationState = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasConversationState {
       get { return result.hasConversationState; }
      }
      public global::Hangups.Proto.ConversationState ConversationState {
        get { return result.ConversationState; }
        set { SetConversationState(value); }
      }
      public Builder SetConversationState(global::Hangups.Proto.ConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationState = true;
        result.conversationState_ = value;
        return this;
      }
      public Builder SetConversationState(global::Hangups.Proto.ConversationState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationState = true;
        result.conversationState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationState(global::Hangups.Proto.ConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationState &&
            result.conversationState_ != global::Hangups.Proto.ConversationState.DefaultInstance) {
            result.conversationState_ = global::Hangups.Proto.ConversationState.CreateBuilder(result.conversationState_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationState_ = value;
        }
        result.hasConversationState = true;
        return this;
      }
      public Builder ClearConversationState() {
        PrepareBuilder();
        result.hasConversationState = false;
        result.conversationState_ = null;
        return this;
      }
    }
    static GetConversationResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetEntityByIdRequest : pb::GeneratedMessage<GetEntityByIdRequest, GetEntityByIdRequest.Builder> {
    private GetEntityByIdRequest() { }
    private static readonly GetEntityByIdRequest defaultInstance = new GetEntityByIdRequest().MakeReadOnly();
    private static readonly string[] _getEntityByIdRequestFieldNames = new string[] { "batch_lookup_spec", "request_header" };
    private static readonly uint[] _getEntityByIdRequestFieldTags = new uint[] { 26, 10 };
    public static GetEntityByIdRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetEntityByIdRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetEntityByIdRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetEntityByIdRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetEntityByIdRequest, GetEntityByIdRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetEntityByIdRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int BatchLookupSpecFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.EntityLookupSpec> batchLookupSpec_ = new pbc::PopsicleList<global::Hangups.Proto.EntityLookupSpec>();
    public scg::IList<global::Hangups.Proto.EntityLookupSpec> BatchLookupSpecList {
      get { return batchLookupSpec_; }
    }
    public int BatchLookupSpecCount {
      get { return batchLookupSpec_.Count; }
    }
    public global::Hangups.Proto.EntityLookupSpec GetBatchLookupSpec(int index) {
      return batchLookupSpec_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getEntityByIdRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[1], RequestHeader);
      }
      if (batchLookupSpec_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], batchLookupSpec_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      foreach (global::Hangups.Proto.EntityLookupSpec element in BatchLookupSpecList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetEntityByIdRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetEntityByIdRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetEntityByIdRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetEntityByIdRequest MakeReadOnly() {
      batchLookupSpec_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetEntityByIdRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetEntityByIdRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetEntityByIdRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetEntityByIdRequest result;
      
      private GetEntityByIdRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetEntityByIdRequest original = result;
          result = new GetEntityByIdRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetEntityByIdRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetEntityByIdRequest.Descriptor; }
      }
      
      public override GetEntityByIdRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.GetEntityByIdRequest.DefaultInstance; }
      }
      
      public override GetEntityByIdRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetEntityByIdRequest) {
          return MergeFrom((GetEntityByIdRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetEntityByIdRequest other) {
        if (other == global::Hangups.Proto.GetEntityByIdRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.batchLookupSpec_.Count != 0) {
          result.batchLookupSpec_.Add(other.batchLookupSpec_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getEntityByIdRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getEntityByIdRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.batchLookupSpec_, global::Hangups.Proto.EntityLookupSpec.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.EntityLookupSpec> BatchLookupSpecList {
        get { return PrepareBuilder().batchLookupSpec_; }
      }
      public int BatchLookupSpecCount {
        get { return result.BatchLookupSpecCount; }
      }
      public global::Hangups.Proto.EntityLookupSpec GetBatchLookupSpec(int index) {
        return result.GetBatchLookupSpec(index);
      }
      public Builder SetBatchLookupSpec(int index, global::Hangups.Proto.EntityLookupSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batchLookupSpec_[index] = value;
        return this;
      }
      public Builder SetBatchLookupSpec(int index, global::Hangups.Proto.EntityLookupSpec.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.batchLookupSpec_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBatchLookupSpec(global::Hangups.Proto.EntityLookupSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batchLookupSpec_.Add(value);
        return this;
      }
      public Builder AddBatchLookupSpec(global::Hangups.Proto.EntityLookupSpec.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.batchLookupSpec_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBatchLookupSpec(scg::IEnumerable<global::Hangups.Proto.EntityLookupSpec> values) {
        PrepareBuilder();
        result.batchLookupSpec_.Add(values);
        return this;
      }
      public Builder ClearBatchLookupSpec() {
        PrepareBuilder();
        result.batchLookupSpec_.Clear();
        return this;
      }
    }
    static GetEntityByIdRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetEntityByIdResponse : pb::GeneratedMessage<GetEntityByIdResponse, GetEntityByIdResponse.Builder> {
    private GetEntityByIdResponse() { }
    private static readonly GetEntityByIdResponse defaultInstance = new GetEntityByIdResponse().MakeReadOnly();
    private static readonly string[] _getEntityByIdResponseFieldNames = new string[] { "entity", "response_header" };
    private static readonly uint[] _getEntityByIdResponseFieldTags = new uint[] { 18, 10 };
    public static GetEntityByIdResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetEntityByIdResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetEntityByIdResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetEntityByIdResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetEntityByIdResponse, GetEntityByIdResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetEntityByIdResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int EntityFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.Entity> entity_ = new pbc::PopsicleList<global::Hangups.Proto.Entity>();
    public scg::IList<global::Hangups.Proto.Entity> EntityList {
      get { return entity_; }
    }
    public int EntityCount {
      get { return entity_.Count; }
    }
    public global::Hangups.Proto.Entity GetEntity(int index) {
      return entity_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.Entity element in EntityList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getEntityByIdResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (entity_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], entity_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      foreach (global::Hangups.Proto.Entity element in EntityList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetEntityByIdResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetEntityByIdResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetEntityByIdResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetEntityByIdResponse MakeReadOnly() {
      entity_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetEntityByIdResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetEntityByIdResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetEntityByIdResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetEntityByIdResponse result;
      
      private GetEntityByIdResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetEntityByIdResponse original = result;
          result = new GetEntityByIdResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetEntityByIdResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetEntityByIdResponse.Descriptor; }
      }
      
      public override GetEntityByIdResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.GetEntityByIdResponse.DefaultInstance; }
      }
      
      public override GetEntityByIdResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetEntityByIdResponse) {
          return MergeFrom((GetEntityByIdResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetEntityByIdResponse other) {
        if (other == global::Hangups.Proto.GetEntityByIdResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.entity_.Count != 0) {
          result.entity_.Add(other.entity_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getEntityByIdResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getEntityByIdResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.entity_, global::Hangups.Proto.Entity.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.Entity> EntityList {
        get { return PrepareBuilder().entity_; }
      }
      public int EntityCount {
        get { return result.EntityCount; }
      }
      public global::Hangups.Proto.Entity GetEntity(int index) {
        return result.GetEntity(index);
      }
      public Builder SetEntity(int index, global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entity_[index] = value;
        return this;
      }
      public Builder SetEntity(int index, global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entity_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entity_.Add(value);
        return this;
      }
      public Builder AddEntity(global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entity_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntity(scg::IEnumerable<global::Hangups.Proto.Entity> values) {
        PrepareBuilder();
        result.entity_.Add(values);
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.entity_.Clear();
        return this;
      }
    }
    static GetEntityByIdResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSuggestedEntitiesRequest : pb::GeneratedMessage<GetSuggestedEntitiesRequest, GetSuggestedEntitiesRequest.Builder> {
    private GetSuggestedEntitiesRequest() { }
    private static readonly GetSuggestedEntitiesRequest defaultInstance = new GetSuggestedEntitiesRequest().MakeReadOnly();
    private static readonly string[] _getSuggestedEntitiesRequestFieldNames = new string[] { "contacts_you_hangout_with", "dismissed_contacts", "favorites", "other_contacts", "other_contacts_on_hangouts", "pinned_favorites", "request_header" };
    private static readonly uint[] _getSuggestedEntitiesRequestFieldTags = new uint[] { 74, 98, 66, 90, 82, 106, 10 };
    public static GetSuggestedEntitiesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSuggestedEntitiesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSuggestedEntitiesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSuggestedEntitiesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSuggestedEntitiesRequest, GetSuggestedEntitiesRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSuggestedEntitiesRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int FavoritesFieldNumber = 8;
    private bool hasFavorites;
    private global::Hangups.Proto.SuggestedContactGroupHash favorites_;
    public bool HasFavorites {
      get { return hasFavorites; }
    }
    public global::Hangups.Proto.SuggestedContactGroupHash Favorites {
      get { return favorites_ ?? global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
    }
    
    public const int ContactsYouHangoutWithFieldNumber = 9;
    private bool hasContactsYouHangoutWith;
    private global::Hangups.Proto.SuggestedContactGroupHash contactsYouHangoutWith_;
    public bool HasContactsYouHangoutWith {
      get { return hasContactsYouHangoutWith; }
    }
    public global::Hangups.Proto.SuggestedContactGroupHash ContactsYouHangoutWith {
      get { return contactsYouHangoutWith_ ?? global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
    }
    
    public const int OtherContactsOnHangoutsFieldNumber = 10;
    private bool hasOtherContactsOnHangouts;
    private global::Hangups.Proto.SuggestedContactGroupHash otherContactsOnHangouts_;
    public bool HasOtherContactsOnHangouts {
      get { return hasOtherContactsOnHangouts; }
    }
    public global::Hangups.Proto.SuggestedContactGroupHash OtherContactsOnHangouts {
      get { return otherContactsOnHangouts_ ?? global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
    }
    
    public const int OtherContactsFieldNumber = 11;
    private bool hasOtherContacts;
    private global::Hangups.Proto.SuggestedContactGroupHash otherContacts_;
    public bool HasOtherContacts {
      get { return hasOtherContacts; }
    }
    public global::Hangups.Proto.SuggestedContactGroupHash OtherContacts {
      get { return otherContacts_ ?? global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
    }
    
    public const int DismissedContactsFieldNumber = 12;
    private bool hasDismissedContacts;
    private global::Hangups.Proto.SuggestedContactGroupHash dismissedContacts_;
    public bool HasDismissedContacts {
      get { return hasDismissedContacts; }
    }
    public global::Hangups.Proto.SuggestedContactGroupHash DismissedContacts {
      get { return dismissedContacts_ ?? global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
    }
    
    public const int PinnedFavoritesFieldNumber = 13;
    private bool hasPinnedFavorites;
    private global::Hangups.Proto.SuggestedContactGroupHash pinnedFavorites_;
    public bool HasPinnedFavorites {
      get { return hasPinnedFavorites; }
    }
    public global::Hangups.Proto.SuggestedContactGroupHash PinnedFavorites {
      get { return pinnedFavorites_ ?? global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getSuggestedEntitiesRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[6], RequestHeader);
      }
      if (hasFavorites) {
        output.WriteMessage(8, field_names[2], Favorites);
      }
      if (hasContactsYouHangoutWith) {
        output.WriteMessage(9, field_names[0], ContactsYouHangoutWith);
      }
      if (hasOtherContactsOnHangouts) {
        output.WriteMessage(10, field_names[4], OtherContactsOnHangouts);
      }
      if (hasOtherContacts) {
        output.WriteMessage(11, field_names[3], OtherContacts);
      }
      if (hasDismissedContacts) {
        output.WriteMessage(12, field_names[1], DismissedContacts);
      }
      if (hasPinnedFavorites) {
        output.WriteMessage(13, field_names[5], PinnedFavorites);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasFavorites) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, Favorites);
      }
      if (hasContactsYouHangoutWith) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, ContactsYouHangoutWith);
      }
      if (hasOtherContactsOnHangouts) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, OtherContactsOnHangouts);
      }
      if (hasOtherContacts) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, OtherContacts);
      }
      if (hasDismissedContacts) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, DismissedContacts);
      }
      if (hasPinnedFavorites) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, PinnedFavorites);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetSuggestedEntitiesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestedEntitiesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSuggestedEntitiesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSuggestedEntitiesRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSuggestedEntitiesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSuggestedEntitiesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSuggestedEntitiesRequest result;
      
      private GetSuggestedEntitiesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSuggestedEntitiesRequest original = result;
          result = new GetSuggestedEntitiesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSuggestedEntitiesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetSuggestedEntitiesRequest.Descriptor; }
      }
      
      public override GetSuggestedEntitiesRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.GetSuggestedEntitiesRequest.DefaultInstance; }
      }
      
      public override GetSuggestedEntitiesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSuggestedEntitiesRequest) {
          return MergeFrom((GetSuggestedEntitiesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSuggestedEntitiesRequest other) {
        if (other == global::Hangups.Proto.GetSuggestedEntitiesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasFavorites) {
          MergeFavorites(other.Favorites);
        }
        if (other.HasContactsYouHangoutWith) {
          MergeContactsYouHangoutWith(other.ContactsYouHangoutWith);
        }
        if (other.HasOtherContactsOnHangouts) {
          MergeOtherContactsOnHangouts(other.OtherContactsOnHangouts);
        }
        if (other.HasOtherContacts) {
          MergeOtherContacts(other.OtherContacts);
        }
        if (other.HasDismissedContacts) {
          MergeDismissedContacts(other.DismissedContacts);
        }
        if (other.HasPinnedFavorites) {
          MergePinnedFavorites(other.PinnedFavorites);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSuggestedEntitiesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSuggestedEntitiesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::Hangups.Proto.SuggestedContactGroupHash.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder();
              if (result.hasFavorites) {
                subBuilder.MergeFrom(Favorites);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Favorites = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::Hangups.Proto.SuggestedContactGroupHash.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder();
              if (result.hasContactsYouHangoutWith) {
                subBuilder.MergeFrom(ContactsYouHangoutWith);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ContactsYouHangoutWith = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::Hangups.Proto.SuggestedContactGroupHash.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder();
              if (result.hasOtherContactsOnHangouts) {
                subBuilder.MergeFrom(OtherContactsOnHangouts);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OtherContactsOnHangouts = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::Hangups.Proto.SuggestedContactGroupHash.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder();
              if (result.hasOtherContacts) {
                subBuilder.MergeFrom(OtherContacts);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OtherContacts = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              global::Hangups.Proto.SuggestedContactGroupHash.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder();
              if (result.hasDismissedContacts) {
                subBuilder.MergeFrom(DismissedContacts);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DismissedContacts = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::Hangups.Proto.SuggestedContactGroupHash.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder();
              if (result.hasPinnedFavorites) {
                subBuilder.MergeFrom(PinnedFavorites);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PinnedFavorites = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasFavorites {
       get { return result.hasFavorites; }
      }
      public global::Hangups.Proto.SuggestedContactGroupHash Favorites {
        get { return result.Favorites; }
        set { SetFavorites(value); }
      }
      public Builder SetFavorites(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFavorites = true;
        result.favorites_ = value;
        return this;
      }
      public Builder SetFavorites(global::Hangups.Proto.SuggestedContactGroupHash.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFavorites = true;
        result.favorites_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFavorites(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFavorites &&
            result.favorites_ != global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) {
            result.favorites_ = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder(result.favorites_).MergeFrom(value).BuildPartial();
        } else {
          result.favorites_ = value;
        }
        result.hasFavorites = true;
        return this;
      }
      public Builder ClearFavorites() {
        PrepareBuilder();
        result.hasFavorites = false;
        result.favorites_ = null;
        return this;
      }
      
      public bool HasContactsYouHangoutWith {
       get { return result.hasContactsYouHangoutWith; }
      }
      public global::Hangups.Proto.SuggestedContactGroupHash ContactsYouHangoutWith {
        get { return result.ContactsYouHangoutWith; }
        set { SetContactsYouHangoutWith(value); }
      }
      public Builder SetContactsYouHangoutWith(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContactsYouHangoutWith = true;
        result.contactsYouHangoutWith_ = value;
        return this;
      }
      public Builder SetContactsYouHangoutWith(global::Hangups.Proto.SuggestedContactGroupHash.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasContactsYouHangoutWith = true;
        result.contactsYouHangoutWith_ = builderForValue.Build();
        return this;
      }
      public Builder MergeContactsYouHangoutWith(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasContactsYouHangoutWith &&
            result.contactsYouHangoutWith_ != global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) {
            result.contactsYouHangoutWith_ = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder(result.contactsYouHangoutWith_).MergeFrom(value).BuildPartial();
        } else {
          result.contactsYouHangoutWith_ = value;
        }
        result.hasContactsYouHangoutWith = true;
        return this;
      }
      public Builder ClearContactsYouHangoutWith() {
        PrepareBuilder();
        result.hasContactsYouHangoutWith = false;
        result.contactsYouHangoutWith_ = null;
        return this;
      }
      
      public bool HasOtherContactsOnHangouts {
       get { return result.hasOtherContactsOnHangouts; }
      }
      public global::Hangups.Proto.SuggestedContactGroupHash OtherContactsOnHangouts {
        get { return result.OtherContactsOnHangouts; }
        set { SetOtherContactsOnHangouts(value); }
      }
      public Builder SetOtherContactsOnHangouts(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOtherContactsOnHangouts = true;
        result.otherContactsOnHangouts_ = value;
        return this;
      }
      public Builder SetOtherContactsOnHangouts(global::Hangups.Proto.SuggestedContactGroupHash.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOtherContactsOnHangouts = true;
        result.otherContactsOnHangouts_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOtherContactsOnHangouts(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOtherContactsOnHangouts &&
            result.otherContactsOnHangouts_ != global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) {
            result.otherContactsOnHangouts_ = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder(result.otherContactsOnHangouts_).MergeFrom(value).BuildPartial();
        } else {
          result.otherContactsOnHangouts_ = value;
        }
        result.hasOtherContactsOnHangouts = true;
        return this;
      }
      public Builder ClearOtherContactsOnHangouts() {
        PrepareBuilder();
        result.hasOtherContactsOnHangouts = false;
        result.otherContactsOnHangouts_ = null;
        return this;
      }
      
      public bool HasOtherContacts {
       get { return result.hasOtherContacts; }
      }
      public global::Hangups.Proto.SuggestedContactGroupHash OtherContacts {
        get { return result.OtherContacts; }
        set { SetOtherContacts(value); }
      }
      public Builder SetOtherContacts(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOtherContacts = true;
        result.otherContacts_ = value;
        return this;
      }
      public Builder SetOtherContacts(global::Hangups.Proto.SuggestedContactGroupHash.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOtherContacts = true;
        result.otherContacts_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOtherContacts(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOtherContacts &&
            result.otherContacts_ != global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) {
            result.otherContacts_ = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder(result.otherContacts_).MergeFrom(value).BuildPartial();
        } else {
          result.otherContacts_ = value;
        }
        result.hasOtherContacts = true;
        return this;
      }
      public Builder ClearOtherContacts() {
        PrepareBuilder();
        result.hasOtherContacts = false;
        result.otherContacts_ = null;
        return this;
      }
      
      public bool HasDismissedContacts {
       get { return result.hasDismissedContacts; }
      }
      public global::Hangups.Proto.SuggestedContactGroupHash DismissedContacts {
        get { return result.DismissedContacts; }
        set { SetDismissedContacts(value); }
      }
      public Builder SetDismissedContacts(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDismissedContacts = true;
        result.dismissedContacts_ = value;
        return this;
      }
      public Builder SetDismissedContacts(global::Hangups.Proto.SuggestedContactGroupHash.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDismissedContacts = true;
        result.dismissedContacts_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDismissedContacts(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDismissedContacts &&
            result.dismissedContacts_ != global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) {
            result.dismissedContacts_ = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder(result.dismissedContacts_).MergeFrom(value).BuildPartial();
        } else {
          result.dismissedContacts_ = value;
        }
        result.hasDismissedContacts = true;
        return this;
      }
      public Builder ClearDismissedContacts() {
        PrepareBuilder();
        result.hasDismissedContacts = false;
        result.dismissedContacts_ = null;
        return this;
      }
      
      public bool HasPinnedFavorites {
       get { return result.hasPinnedFavorites; }
      }
      public global::Hangups.Proto.SuggestedContactGroupHash PinnedFavorites {
        get { return result.PinnedFavorites; }
        set { SetPinnedFavorites(value); }
      }
      public Builder SetPinnedFavorites(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPinnedFavorites = true;
        result.pinnedFavorites_ = value;
        return this;
      }
      public Builder SetPinnedFavorites(global::Hangups.Proto.SuggestedContactGroupHash.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPinnedFavorites = true;
        result.pinnedFavorites_ = builderForValue.Build();
        return this;
      }
      public Builder MergePinnedFavorites(global::Hangups.Proto.SuggestedContactGroupHash value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPinnedFavorites &&
            result.pinnedFavorites_ != global::Hangups.Proto.SuggestedContactGroupHash.DefaultInstance) {
            result.pinnedFavorites_ = global::Hangups.Proto.SuggestedContactGroupHash.CreateBuilder(result.pinnedFavorites_).MergeFrom(value).BuildPartial();
        } else {
          result.pinnedFavorites_ = value;
        }
        result.hasPinnedFavorites = true;
        return this;
      }
      public Builder ClearPinnedFavorites() {
        PrepareBuilder();
        result.hasPinnedFavorites = false;
        result.pinnedFavorites_ = null;
        return this;
      }
    }
    static GetSuggestedEntitiesRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSuggestedEntitiesResponse : pb::GeneratedMessage<GetSuggestedEntitiesResponse, GetSuggestedEntitiesResponse.Builder> {
    private GetSuggestedEntitiesResponse() { }
    private static readonly GetSuggestedEntitiesResponse defaultInstance = new GetSuggestedEntitiesResponse().MakeReadOnly();
    private static readonly string[] _getSuggestedEntitiesResponseFieldNames = new string[] { "contacts_you_hangout_with", "dismissed_contacts", "entity", "favorites", "other_contacts", "other_contacts_on_hangouts", "pinned_favorites", "response_header" };
    private static readonly uint[] _getSuggestedEntitiesResponseFieldTags = new uint[] { 42, 66, 18, 34, 58, 50, 74, 10 };
    public static GetSuggestedEntitiesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSuggestedEntitiesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSuggestedEntitiesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSuggestedEntitiesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSuggestedEntitiesResponse, GetSuggestedEntitiesResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSuggestedEntitiesResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int EntityFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.Entity> entity_ = new pbc::PopsicleList<global::Hangups.Proto.Entity>();
    public scg::IList<global::Hangups.Proto.Entity> EntityList {
      get { return entity_; }
    }
    public int EntityCount {
      get { return entity_.Count; }
    }
    public global::Hangups.Proto.Entity GetEntity(int index) {
      return entity_[index];
    }
    
    public const int FavoritesFieldNumber = 4;
    private bool hasFavorites;
    private global::Hangups.Proto.SuggestedContactGroup favorites_;
    public bool HasFavorites {
      get { return hasFavorites; }
    }
    public global::Hangups.Proto.SuggestedContactGroup Favorites {
      get { return favorites_ ?? global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
    }
    
    public const int ContactsYouHangoutWithFieldNumber = 5;
    private bool hasContactsYouHangoutWith;
    private global::Hangups.Proto.SuggestedContactGroup contactsYouHangoutWith_;
    public bool HasContactsYouHangoutWith {
      get { return hasContactsYouHangoutWith; }
    }
    public global::Hangups.Proto.SuggestedContactGroup ContactsYouHangoutWith {
      get { return contactsYouHangoutWith_ ?? global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
    }
    
    public const int OtherContactsOnHangoutsFieldNumber = 6;
    private bool hasOtherContactsOnHangouts;
    private global::Hangups.Proto.SuggestedContactGroup otherContactsOnHangouts_;
    public bool HasOtherContactsOnHangouts {
      get { return hasOtherContactsOnHangouts; }
    }
    public global::Hangups.Proto.SuggestedContactGroup OtherContactsOnHangouts {
      get { return otherContactsOnHangouts_ ?? global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
    }
    
    public const int OtherContactsFieldNumber = 7;
    private bool hasOtherContacts;
    private global::Hangups.Proto.SuggestedContactGroup otherContacts_;
    public bool HasOtherContacts {
      get { return hasOtherContacts; }
    }
    public global::Hangups.Proto.SuggestedContactGroup OtherContacts {
      get { return otherContacts_ ?? global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
    }
    
    public const int DismissedContactsFieldNumber = 8;
    private bool hasDismissedContacts;
    private global::Hangups.Proto.SuggestedContactGroup dismissedContacts_;
    public bool HasDismissedContacts {
      get { return hasDismissedContacts; }
    }
    public global::Hangups.Proto.SuggestedContactGroup DismissedContacts {
      get { return dismissedContacts_ ?? global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
    }
    
    public const int PinnedFavoritesFieldNumber = 9;
    private bool hasPinnedFavorites;
    private global::Hangups.Proto.SuggestedContactGroup pinnedFavorites_;
    public bool HasPinnedFavorites {
      get { return hasPinnedFavorites; }
    }
    public global::Hangups.Proto.SuggestedContactGroup PinnedFavorites {
      get { return pinnedFavorites_ ?? global::Hangups.Proto.SuggestedContactGroup.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.Entity element in EntityList) {
          if (!element.IsInitialized) return false;
        }
        if (HasFavorites) {
          if (!Favorites.IsInitialized) return false;
        }
        if (HasContactsYouHangoutWith) {
          if (!ContactsYouHangoutWith.IsInitialized) return false;
        }
        if (HasOtherContactsOnHangouts) {
          if (!OtherContactsOnHangouts.IsInitialized) return false;
        }
        if (HasOtherContacts) {
          if (!OtherContacts.IsInitialized) return false;
        }
        if (HasDismissedContacts) {
          if (!DismissedContacts.IsInitialized) return false;
        }
        if (HasPinnedFavorites) {
          if (!PinnedFavorites.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getSuggestedEntitiesResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[7], ResponseHeader);
      }
      if (entity_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], entity_);
      }
      if (hasFavorites) {
        output.WriteMessage(4, field_names[3], Favorites);
      }
      if (hasContactsYouHangoutWith) {
        output.WriteMessage(5, field_names[0], ContactsYouHangoutWith);
      }
      if (hasOtherContactsOnHangouts) {
        output.WriteMessage(6, field_names[5], OtherContactsOnHangouts);
      }
      if (hasOtherContacts) {
        output.WriteMessage(7, field_names[4], OtherContacts);
      }
      if (hasDismissedContacts) {
        output.WriteMessage(8, field_names[1], DismissedContacts);
      }
      if (hasPinnedFavorites) {
        output.WriteMessage(9, field_names[6], PinnedFavorites);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      foreach (global::Hangups.Proto.Entity element in EntityList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasFavorites) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Favorites);
      }
      if (hasContactsYouHangoutWith) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, ContactsYouHangoutWith);
      }
      if (hasOtherContactsOnHangouts) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, OtherContactsOnHangouts);
      }
      if (hasOtherContacts) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, OtherContacts);
      }
      if (hasDismissedContacts) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, DismissedContacts);
      }
      if (hasPinnedFavorites) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, PinnedFavorites);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetSuggestedEntitiesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSuggestedEntitiesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSuggestedEntitiesResponse MakeReadOnly() {
      entity_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSuggestedEntitiesResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSuggestedEntitiesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSuggestedEntitiesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSuggestedEntitiesResponse result;
      
      private GetSuggestedEntitiesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSuggestedEntitiesResponse original = result;
          result = new GetSuggestedEntitiesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSuggestedEntitiesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetSuggestedEntitiesResponse.Descriptor; }
      }
      
      public override GetSuggestedEntitiesResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.GetSuggestedEntitiesResponse.DefaultInstance; }
      }
      
      public override GetSuggestedEntitiesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSuggestedEntitiesResponse) {
          return MergeFrom((GetSuggestedEntitiesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSuggestedEntitiesResponse other) {
        if (other == global::Hangups.Proto.GetSuggestedEntitiesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.entity_.Count != 0) {
          result.entity_.Add(other.entity_);
        }
        if (other.HasFavorites) {
          MergeFavorites(other.Favorites);
        }
        if (other.HasContactsYouHangoutWith) {
          MergeContactsYouHangoutWith(other.ContactsYouHangoutWith);
        }
        if (other.HasOtherContactsOnHangouts) {
          MergeOtherContactsOnHangouts(other.OtherContactsOnHangouts);
        }
        if (other.HasOtherContacts) {
          MergeOtherContacts(other.OtherContacts);
        }
        if (other.HasDismissedContacts) {
          MergeDismissedContacts(other.DismissedContacts);
        }
        if (other.HasPinnedFavorites) {
          MergePinnedFavorites(other.PinnedFavorites);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSuggestedEntitiesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSuggestedEntitiesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.entity_, global::Hangups.Proto.Entity.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              global::Hangups.Proto.SuggestedContactGroup.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder();
              if (result.hasFavorites) {
                subBuilder.MergeFrom(Favorites);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Favorites = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Hangups.Proto.SuggestedContactGroup.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder();
              if (result.hasContactsYouHangoutWith) {
                subBuilder.MergeFrom(ContactsYouHangoutWith);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ContactsYouHangoutWith = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::Hangups.Proto.SuggestedContactGroup.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder();
              if (result.hasOtherContactsOnHangouts) {
                subBuilder.MergeFrom(OtherContactsOnHangouts);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OtherContactsOnHangouts = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::Hangups.Proto.SuggestedContactGroup.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder();
              if (result.hasOtherContacts) {
                subBuilder.MergeFrom(OtherContacts);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OtherContacts = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::Hangups.Proto.SuggestedContactGroup.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder();
              if (result.hasDismissedContacts) {
                subBuilder.MergeFrom(DismissedContacts);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DismissedContacts = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::Hangups.Proto.SuggestedContactGroup.Builder subBuilder = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder();
              if (result.hasPinnedFavorites) {
                subBuilder.MergeFrom(PinnedFavorites);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PinnedFavorites = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.Entity> EntityList {
        get { return PrepareBuilder().entity_; }
      }
      public int EntityCount {
        get { return result.EntityCount; }
      }
      public global::Hangups.Proto.Entity GetEntity(int index) {
        return result.GetEntity(index);
      }
      public Builder SetEntity(int index, global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entity_[index] = value;
        return this;
      }
      public Builder SetEntity(int index, global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entity_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entity_.Add(value);
        return this;
      }
      public Builder AddEntity(global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entity_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntity(scg::IEnumerable<global::Hangups.Proto.Entity> values) {
        PrepareBuilder();
        result.entity_.Add(values);
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.entity_.Clear();
        return this;
      }
      
      public bool HasFavorites {
       get { return result.hasFavorites; }
      }
      public global::Hangups.Proto.SuggestedContactGroup Favorites {
        get { return result.Favorites; }
        set { SetFavorites(value); }
      }
      public Builder SetFavorites(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFavorites = true;
        result.favorites_ = value;
        return this;
      }
      public Builder SetFavorites(global::Hangups.Proto.SuggestedContactGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFavorites = true;
        result.favorites_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFavorites(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFavorites &&
            result.favorites_ != global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) {
            result.favorites_ = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder(result.favorites_).MergeFrom(value).BuildPartial();
        } else {
          result.favorites_ = value;
        }
        result.hasFavorites = true;
        return this;
      }
      public Builder ClearFavorites() {
        PrepareBuilder();
        result.hasFavorites = false;
        result.favorites_ = null;
        return this;
      }
      
      public bool HasContactsYouHangoutWith {
       get { return result.hasContactsYouHangoutWith; }
      }
      public global::Hangups.Proto.SuggestedContactGroup ContactsYouHangoutWith {
        get { return result.ContactsYouHangoutWith; }
        set { SetContactsYouHangoutWith(value); }
      }
      public Builder SetContactsYouHangoutWith(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContactsYouHangoutWith = true;
        result.contactsYouHangoutWith_ = value;
        return this;
      }
      public Builder SetContactsYouHangoutWith(global::Hangups.Proto.SuggestedContactGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasContactsYouHangoutWith = true;
        result.contactsYouHangoutWith_ = builderForValue.Build();
        return this;
      }
      public Builder MergeContactsYouHangoutWith(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasContactsYouHangoutWith &&
            result.contactsYouHangoutWith_ != global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) {
            result.contactsYouHangoutWith_ = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder(result.contactsYouHangoutWith_).MergeFrom(value).BuildPartial();
        } else {
          result.contactsYouHangoutWith_ = value;
        }
        result.hasContactsYouHangoutWith = true;
        return this;
      }
      public Builder ClearContactsYouHangoutWith() {
        PrepareBuilder();
        result.hasContactsYouHangoutWith = false;
        result.contactsYouHangoutWith_ = null;
        return this;
      }
      
      public bool HasOtherContactsOnHangouts {
       get { return result.hasOtherContactsOnHangouts; }
      }
      public global::Hangups.Proto.SuggestedContactGroup OtherContactsOnHangouts {
        get { return result.OtherContactsOnHangouts; }
        set { SetOtherContactsOnHangouts(value); }
      }
      public Builder SetOtherContactsOnHangouts(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOtherContactsOnHangouts = true;
        result.otherContactsOnHangouts_ = value;
        return this;
      }
      public Builder SetOtherContactsOnHangouts(global::Hangups.Proto.SuggestedContactGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOtherContactsOnHangouts = true;
        result.otherContactsOnHangouts_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOtherContactsOnHangouts(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOtherContactsOnHangouts &&
            result.otherContactsOnHangouts_ != global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) {
            result.otherContactsOnHangouts_ = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder(result.otherContactsOnHangouts_).MergeFrom(value).BuildPartial();
        } else {
          result.otherContactsOnHangouts_ = value;
        }
        result.hasOtherContactsOnHangouts = true;
        return this;
      }
      public Builder ClearOtherContactsOnHangouts() {
        PrepareBuilder();
        result.hasOtherContactsOnHangouts = false;
        result.otherContactsOnHangouts_ = null;
        return this;
      }
      
      public bool HasOtherContacts {
       get { return result.hasOtherContacts; }
      }
      public global::Hangups.Proto.SuggestedContactGroup OtherContacts {
        get { return result.OtherContacts; }
        set { SetOtherContacts(value); }
      }
      public Builder SetOtherContacts(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOtherContacts = true;
        result.otherContacts_ = value;
        return this;
      }
      public Builder SetOtherContacts(global::Hangups.Proto.SuggestedContactGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOtherContacts = true;
        result.otherContacts_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOtherContacts(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOtherContacts &&
            result.otherContacts_ != global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) {
            result.otherContacts_ = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder(result.otherContacts_).MergeFrom(value).BuildPartial();
        } else {
          result.otherContacts_ = value;
        }
        result.hasOtherContacts = true;
        return this;
      }
      public Builder ClearOtherContacts() {
        PrepareBuilder();
        result.hasOtherContacts = false;
        result.otherContacts_ = null;
        return this;
      }
      
      public bool HasDismissedContacts {
       get { return result.hasDismissedContacts; }
      }
      public global::Hangups.Proto.SuggestedContactGroup DismissedContacts {
        get { return result.DismissedContacts; }
        set { SetDismissedContacts(value); }
      }
      public Builder SetDismissedContacts(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDismissedContacts = true;
        result.dismissedContacts_ = value;
        return this;
      }
      public Builder SetDismissedContacts(global::Hangups.Proto.SuggestedContactGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDismissedContacts = true;
        result.dismissedContacts_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDismissedContacts(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDismissedContacts &&
            result.dismissedContacts_ != global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) {
            result.dismissedContacts_ = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder(result.dismissedContacts_).MergeFrom(value).BuildPartial();
        } else {
          result.dismissedContacts_ = value;
        }
        result.hasDismissedContacts = true;
        return this;
      }
      public Builder ClearDismissedContacts() {
        PrepareBuilder();
        result.hasDismissedContacts = false;
        result.dismissedContacts_ = null;
        return this;
      }
      
      public bool HasPinnedFavorites {
       get { return result.hasPinnedFavorites; }
      }
      public global::Hangups.Proto.SuggestedContactGroup PinnedFavorites {
        get { return result.PinnedFavorites; }
        set { SetPinnedFavorites(value); }
      }
      public Builder SetPinnedFavorites(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPinnedFavorites = true;
        result.pinnedFavorites_ = value;
        return this;
      }
      public Builder SetPinnedFavorites(global::Hangups.Proto.SuggestedContactGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPinnedFavorites = true;
        result.pinnedFavorites_ = builderForValue.Build();
        return this;
      }
      public Builder MergePinnedFavorites(global::Hangups.Proto.SuggestedContactGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPinnedFavorites &&
            result.pinnedFavorites_ != global::Hangups.Proto.SuggestedContactGroup.DefaultInstance) {
            result.pinnedFavorites_ = global::Hangups.Proto.SuggestedContactGroup.CreateBuilder(result.pinnedFavorites_).MergeFrom(value).BuildPartial();
        } else {
          result.pinnedFavorites_ = value;
        }
        result.hasPinnedFavorites = true;
        return this;
      }
      public Builder ClearPinnedFavorites() {
        PrepareBuilder();
        result.hasPinnedFavorites = false;
        result.pinnedFavorites_ = null;
        return this;
      }
    }
    static GetSuggestedEntitiesResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSelfInfoRequest : pb::GeneratedMessage<GetSelfInfoRequest, GetSelfInfoRequest.Builder> {
    private GetSelfInfoRequest() { }
    private static readonly GetSelfInfoRequest defaultInstance = new GetSelfInfoRequest().MakeReadOnly();
    private static readonly string[] _getSelfInfoRequestFieldNames = new string[] { "request_header" };
    private static readonly uint[] _getSelfInfoRequestFieldTags = new uint[] { 10 };
    public static GetSelfInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSelfInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSelfInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSelfInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSelfInfoRequest, GetSelfInfoRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSelfInfoRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getSelfInfoRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[0], RequestHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetSelfInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSelfInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSelfInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSelfInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSelfInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSelfInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSelfInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSelfInfoRequest result;
      
      private GetSelfInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSelfInfoRequest original = result;
          result = new GetSelfInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSelfInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetSelfInfoRequest.Descriptor; }
      }
      
      public override GetSelfInfoRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.GetSelfInfoRequest.DefaultInstance; }
      }
      
      public override GetSelfInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSelfInfoRequest) {
          return MergeFrom((GetSelfInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSelfInfoRequest other) {
        if (other == global::Hangups.Proto.GetSelfInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSelfInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSelfInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
    }
    static GetSelfInfoRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetSelfInfoResponse : pb::GeneratedMessage<GetSelfInfoResponse, GetSelfInfoResponse.Builder> {
    private GetSelfInfoResponse() { }
    private static readonly GetSelfInfoResponse defaultInstance = new GetSelfInfoResponse().MakeReadOnly();
    private static readonly string[] _getSelfInfoResponseFieldNames = new string[] { "configuration_bit", "default_country", "desktop_off_setting", "desktop_off_state", "desktop_sound_setting", "dnd_state", "google_plus_user", "is_known_minor", "phone_data", "response_header", "rich_presence_state", "self_entity" };
    private static readonly uint[] _getSelfInfoResponseFieldTags = new uint[] { 66, 154, 50, 74, 90, 42, 80, 24, 58, 10, 98, 18 };
    public static GetSelfInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSelfInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSelfInfoResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSelfInfoResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSelfInfoResponse, GetSelfInfoResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_GetSelfInfoResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int SelfEntityFieldNumber = 2;
    private bool hasSelfEntity;
    private global::Hangups.Proto.Entity selfEntity_;
    public bool HasSelfEntity {
      get { return hasSelfEntity; }
    }
    public global::Hangups.Proto.Entity SelfEntity {
      get { return selfEntity_ ?? global::Hangups.Proto.Entity.DefaultInstance; }
    }
    
    public const int IsKnownMinorFieldNumber = 3;
    private bool hasIsKnownMinor;
    private bool isKnownMinor_;
    public bool HasIsKnownMinor {
      get { return hasIsKnownMinor; }
    }
    public bool IsKnownMinor {
      get { return isKnownMinor_; }
    }
    
    public const int DndStateFieldNumber = 5;
    private bool hasDndState;
    private global::Hangups.Proto.DoNotDisturbSetting dndState_;
    public bool HasDndState {
      get { return hasDndState; }
    }
    public global::Hangups.Proto.DoNotDisturbSetting DndState {
      get { return dndState_ ?? global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance; }
    }
    
    public const int DesktopOffSettingFieldNumber = 6;
    private bool hasDesktopOffSetting;
    private global::Hangups.Proto.DesktopOffSetting desktopOffSetting_;
    public bool HasDesktopOffSetting {
      get { return hasDesktopOffSetting; }
    }
    public global::Hangups.Proto.DesktopOffSetting DesktopOffSetting {
      get { return desktopOffSetting_ ?? global::Hangups.Proto.DesktopOffSetting.DefaultInstance; }
    }
    
    public const int PhoneDataFieldNumber = 7;
    private bool hasPhoneData;
    private global::Hangups.Proto.PhoneData phoneData_;
    public bool HasPhoneData {
      get { return hasPhoneData; }
    }
    public global::Hangups.Proto.PhoneData PhoneData {
      get { return phoneData_ ?? global::Hangups.Proto.PhoneData.DefaultInstance; }
    }
    
    public const int ConfigurationBitFieldNumber = 8;
    private pbc::PopsicleList<global::Hangups.Proto.ConfigurationBit> configurationBit_ = new pbc::PopsicleList<global::Hangups.Proto.ConfigurationBit>();
    public scg::IList<global::Hangups.Proto.ConfigurationBit> ConfigurationBitList {
      get { return configurationBit_; }
    }
    public int ConfigurationBitCount {
      get { return configurationBit_.Count; }
    }
    public global::Hangups.Proto.ConfigurationBit GetConfigurationBit(int index) {
      return configurationBit_[index];
    }
    
    public const int DesktopOffStateFieldNumber = 9;
    private bool hasDesktopOffState;
    private global::Hangups.Proto.DesktopOffState desktopOffState_;
    public bool HasDesktopOffState {
      get { return hasDesktopOffState; }
    }
    public global::Hangups.Proto.DesktopOffState DesktopOffState {
      get { return desktopOffState_ ?? global::Hangups.Proto.DesktopOffState.DefaultInstance; }
    }
    
    public const int GooglePlusUserFieldNumber = 10;
    private bool hasGooglePlusUser;
    private bool googlePlusUser_;
    public bool HasGooglePlusUser {
      get { return hasGooglePlusUser; }
    }
    public bool GooglePlusUser {
      get { return googlePlusUser_; }
    }
    
    public const int DesktopSoundSettingFieldNumber = 11;
    private bool hasDesktopSoundSetting;
    private global::Hangups.Proto.DesktopSoundSetting desktopSoundSetting_;
    public bool HasDesktopSoundSetting {
      get { return hasDesktopSoundSetting; }
    }
    public global::Hangups.Proto.DesktopSoundSetting DesktopSoundSetting {
      get { return desktopSoundSetting_ ?? global::Hangups.Proto.DesktopSoundSetting.DefaultInstance; }
    }
    
    public const int RichPresenceStateFieldNumber = 12;
    private bool hasRichPresenceState;
    private global::Hangups.Proto.RichPresenceState richPresenceState_;
    public bool HasRichPresenceState {
      get { return hasRichPresenceState; }
    }
    public global::Hangups.Proto.RichPresenceState RichPresenceState {
      get { return richPresenceState_ ?? global::Hangups.Proto.RichPresenceState.DefaultInstance; }
    }
    
    public const int DefaultCountryFieldNumber = 19;
    private bool hasDefaultCountry;
    private global::Hangups.Proto.Country defaultCountry_;
    public bool HasDefaultCountry {
      get { return hasDefaultCountry; }
    }
    public global::Hangups.Proto.Country DefaultCountry {
      get { return defaultCountry_ ?? global::Hangups.Proto.Country.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasSelfEntity) {
          if (!SelfEntity.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getSelfInfoResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[9], ResponseHeader);
      }
      if (hasSelfEntity) {
        output.WriteMessage(2, field_names[11], SelfEntity);
      }
      if (hasIsKnownMinor) {
        output.WriteBool(3, field_names[7], IsKnownMinor);
      }
      if (hasDndState) {
        output.WriteMessage(5, field_names[5], DndState);
      }
      if (hasDesktopOffSetting) {
        output.WriteMessage(6, field_names[2], DesktopOffSetting);
      }
      if (hasPhoneData) {
        output.WriteMessage(7, field_names[8], PhoneData);
      }
      if (configurationBit_.Count > 0) {
        output.WriteMessageArray(8, field_names[0], configurationBit_);
      }
      if (hasDesktopOffState) {
        output.WriteMessage(9, field_names[3], DesktopOffState);
      }
      if (hasGooglePlusUser) {
        output.WriteBool(10, field_names[6], GooglePlusUser);
      }
      if (hasDesktopSoundSetting) {
        output.WriteMessage(11, field_names[4], DesktopSoundSetting);
      }
      if (hasRichPresenceState) {
        output.WriteMessage(12, field_names[10], RichPresenceState);
      }
      if (hasDefaultCountry) {
        output.WriteMessage(19, field_names[1], DefaultCountry);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasSelfEntity) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, SelfEntity);
      }
      if (hasIsKnownMinor) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, IsKnownMinor);
      }
      if (hasDndState) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, DndState);
      }
      if (hasDesktopOffSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, DesktopOffSetting);
      }
      if (hasPhoneData) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, PhoneData);
      }
      foreach (global::Hangups.Proto.ConfigurationBit element in ConfigurationBitList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasDesktopOffState) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, DesktopOffState);
      }
      if (hasGooglePlusUser) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, GooglePlusUser);
      }
      if (hasDesktopSoundSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, DesktopSoundSetting);
      }
      if (hasRichPresenceState) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, RichPresenceState);
      }
      if (hasDefaultCountry) {
        size += pb::CodedOutputStream.ComputeMessageSize(19, DefaultCountry);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetSelfInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSelfInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSelfInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSelfInfoResponse MakeReadOnly() {
      configurationBit_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSelfInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSelfInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSelfInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSelfInfoResponse result;
      
      private GetSelfInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSelfInfoResponse original = result;
          result = new GetSelfInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSelfInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.GetSelfInfoResponse.Descriptor; }
      }
      
      public override GetSelfInfoResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.GetSelfInfoResponse.DefaultInstance; }
      }
      
      public override GetSelfInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSelfInfoResponse) {
          return MergeFrom((GetSelfInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSelfInfoResponse other) {
        if (other == global::Hangups.Proto.GetSelfInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasSelfEntity) {
          MergeSelfEntity(other.SelfEntity);
        }
        if (other.HasIsKnownMinor) {
          IsKnownMinor = other.IsKnownMinor;
        }
        if (other.HasDndState) {
          MergeDndState(other.DndState);
        }
        if (other.HasDesktopOffSetting) {
          MergeDesktopOffSetting(other.DesktopOffSetting);
        }
        if (other.HasPhoneData) {
          MergePhoneData(other.PhoneData);
        }
        if (other.configurationBit_.Count != 0) {
          result.configurationBit_.Add(other.configurationBit_);
        }
        if (other.HasDesktopOffState) {
          MergeDesktopOffState(other.DesktopOffState);
        }
        if (other.HasGooglePlusUser) {
          GooglePlusUser = other.GooglePlusUser;
        }
        if (other.HasDesktopSoundSetting) {
          MergeDesktopSoundSetting(other.DesktopSoundSetting);
        }
        if (other.HasRichPresenceState) {
          MergeRichPresenceState(other.RichPresenceState);
        }
        if (other.HasDefaultCountry) {
          MergeDefaultCountry(other.DefaultCountry);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSelfInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSelfInfoResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.Entity.Builder subBuilder = global::Hangups.Proto.Entity.CreateBuilder();
              if (result.hasSelfEntity) {
                subBuilder.MergeFrom(SelfEntity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SelfEntity = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasIsKnownMinor = input.ReadBool(ref result.isKnownMinor_);
              break;
            }
            case 42: {
              global::Hangups.Proto.DoNotDisturbSetting.Builder subBuilder = global::Hangups.Proto.DoNotDisturbSetting.CreateBuilder();
              if (result.hasDndState) {
                subBuilder.MergeFrom(DndState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DndState = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::Hangups.Proto.DesktopOffSetting.Builder subBuilder = global::Hangups.Proto.DesktopOffSetting.CreateBuilder();
              if (result.hasDesktopOffSetting) {
                subBuilder.MergeFrom(DesktopOffSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopOffSetting = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::Hangups.Proto.PhoneData.Builder subBuilder = global::Hangups.Proto.PhoneData.CreateBuilder();
              if (result.hasPhoneData) {
                subBuilder.MergeFrom(PhoneData);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PhoneData = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.configurationBit_, global::Hangups.Proto.ConfigurationBit.DefaultInstance, extensionRegistry);
              break;
            }
            case 74: {
              global::Hangups.Proto.DesktopOffState.Builder subBuilder = global::Hangups.Proto.DesktopOffState.CreateBuilder();
              if (result.hasDesktopOffState) {
                subBuilder.MergeFrom(DesktopOffState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopOffState = subBuilder.BuildPartial();
              break;
            }
            case 80: {
              result.hasGooglePlusUser = input.ReadBool(ref result.googlePlusUser_);
              break;
            }
            case 90: {
              global::Hangups.Proto.DesktopSoundSetting.Builder subBuilder = global::Hangups.Proto.DesktopSoundSetting.CreateBuilder();
              if (result.hasDesktopSoundSetting) {
                subBuilder.MergeFrom(DesktopSoundSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopSoundSetting = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              global::Hangups.Proto.RichPresenceState.Builder subBuilder = global::Hangups.Proto.RichPresenceState.CreateBuilder();
              if (result.hasRichPresenceState) {
                subBuilder.MergeFrom(RichPresenceState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RichPresenceState = subBuilder.BuildPartial();
              break;
            }
            case 154: {
              global::Hangups.Proto.Country.Builder subBuilder = global::Hangups.Proto.Country.CreateBuilder();
              if (result.hasDefaultCountry) {
                subBuilder.MergeFrom(DefaultCountry);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DefaultCountry = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasSelfEntity {
       get { return result.hasSelfEntity; }
      }
      public global::Hangups.Proto.Entity SelfEntity {
        get { return result.SelfEntity; }
        set { SetSelfEntity(value); }
      }
      public Builder SetSelfEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSelfEntity = true;
        result.selfEntity_ = value;
        return this;
      }
      public Builder SetSelfEntity(global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSelfEntity = true;
        result.selfEntity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSelfEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSelfEntity &&
            result.selfEntity_ != global::Hangups.Proto.Entity.DefaultInstance) {
            result.selfEntity_ = global::Hangups.Proto.Entity.CreateBuilder(result.selfEntity_).MergeFrom(value).BuildPartial();
        } else {
          result.selfEntity_ = value;
        }
        result.hasSelfEntity = true;
        return this;
      }
      public Builder ClearSelfEntity() {
        PrepareBuilder();
        result.hasSelfEntity = false;
        result.selfEntity_ = null;
        return this;
      }
      
      public bool HasIsKnownMinor {
        get { return result.hasIsKnownMinor; }
      }
      public bool IsKnownMinor {
        get { return result.IsKnownMinor; }
        set { SetIsKnownMinor(value); }
      }
      public Builder SetIsKnownMinor(bool value) {
        PrepareBuilder();
        result.hasIsKnownMinor = true;
        result.isKnownMinor_ = value;
        return this;
      }
      public Builder ClearIsKnownMinor() {
        PrepareBuilder();
        result.hasIsKnownMinor = false;
        result.isKnownMinor_ = false;
        return this;
      }
      
      public bool HasDndState {
       get { return result.hasDndState; }
      }
      public global::Hangups.Proto.DoNotDisturbSetting DndState {
        get { return result.DndState; }
        set { SetDndState(value); }
      }
      public Builder SetDndState(global::Hangups.Proto.DoNotDisturbSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDndState = true;
        result.dndState_ = value;
        return this;
      }
      public Builder SetDndState(global::Hangups.Proto.DoNotDisturbSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDndState = true;
        result.dndState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDndState(global::Hangups.Proto.DoNotDisturbSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDndState &&
            result.dndState_ != global::Hangups.Proto.DoNotDisturbSetting.DefaultInstance) {
            result.dndState_ = global::Hangups.Proto.DoNotDisturbSetting.CreateBuilder(result.dndState_).MergeFrom(value).BuildPartial();
        } else {
          result.dndState_ = value;
        }
        result.hasDndState = true;
        return this;
      }
      public Builder ClearDndState() {
        PrepareBuilder();
        result.hasDndState = false;
        result.dndState_ = null;
        return this;
      }
      
      public bool HasDesktopOffSetting {
       get { return result.hasDesktopOffSetting; }
      }
      public global::Hangups.Proto.DesktopOffSetting DesktopOffSetting {
        get { return result.DesktopOffSetting; }
        set { SetDesktopOffSetting(value); }
      }
      public Builder SetDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopOffSetting = true;
        result.desktopOffSetting_ = value;
        return this;
      }
      public Builder SetDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopOffSetting = true;
        result.desktopOffSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopOffSetting &&
            result.desktopOffSetting_ != global::Hangups.Proto.DesktopOffSetting.DefaultInstance) {
            result.desktopOffSetting_ = global::Hangups.Proto.DesktopOffSetting.CreateBuilder(result.desktopOffSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopOffSetting_ = value;
        }
        result.hasDesktopOffSetting = true;
        return this;
      }
      public Builder ClearDesktopOffSetting() {
        PrepareBuilder();
        result.hasDesktopOffSetting = false;
        result.desktopOffSetting_ = null;
        return this;
      }
      
      public bool HasPhoneData {
       get { return result.hasPhoneData; }
      }
      public global::Hangups.Proto.PhoneData PhoneData {
        get { return result.PhoneData; }
        set { SetPhoneData(value); }
      }
      public Builder SetPhoneData(global::Hangups.Proto.PhoneData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhoneData = true;
        result.phoneData_ = value;
        return this;
      }
      public Builder SetPhoneData(global::Hangups.Proto.PhoneData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPhoneData = true;
        result.phoneData_ = builderForValue.Build();
        return this;
      }
      public Builder MergePhoneData(global::Hangups.Proto.PhoneData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPhoneData &&
            result.phoneData_ != global::Hangups.Proto.PhoneData.DefaultInstance) {
            result.phoneData_ = global::Hangups.Proto.PhoneData.CreateBuilder(result.phoneData_).MergeFrom(value).BuildPartial();
        } else {
          result.phoneData_ = value;
        }
        result.hasPhoneData = true;
        return this;
      }
      public Builder ClearPhoneData() {
        PrepareBuilder();
        result.hasPhoneData = false;
        result.phoneData_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ConfigurationBit> ConfigurationBitList {
        get { return PrepareBuilder().configurationBit_; }
      }
      public int ConfigurationBitCount {
        get { return result.ConfigurationBitCount; }
      }
      public global::Hangups.Proto.ConfigurationBit GetConfigurationBit(int index) {
        return result.GetConfigurationBit(index);
      }
      public Builder SetConfigurationBit(int index, global::Hangups.Proto.ConfigurationBit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.configurationBit_[index] = value;
        return this;
      }
      public Builder SetConfigurationBit(int index, global::Hangups.Proto.ConfigurationBit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.configurationBit_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConfigurationBit(global::Hangups.Proto.ConfigurationBit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.configurationBit_.Add(value);
        return this;
      }
      public Builder AddConfigurationBit(global::Hangups.Proto.ConfigurationBit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.configurationBit_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConfigurationBit(scg::IEnumerable<global::Hangups.Proto.ConfigurationBit> values) {
        PrepareBuilder();
        result.configurationBit_.Add(values);
        return this;
      }
      public Builder ClearConfigurationBit() {
        PrepareBuilder();
        result.configurationBit_.Clear();
        return this;
      }
      
      public bool HasDesktopOffState {
       get { return result.hasDesktopOffState; }
      }
      public global::Hangups.Proto.DesktopOffState DesktopOffState {
        get { return result.DesktopOffState; }
        set { SetDesktopOffState(value); }
      }
      public Builder SetDesktopOffState(global::Hangups.Proto.DesktopOffState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopOffState = true;
        result.desktopOffState_ = value;
        return this;
      }
      public Builder SetDesktopOffState(global::Hangups.Proto.DesktopOffState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopOffState = true;
        result.desktopOffState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopOffState(global::Hangups.Proto.DesktopOffState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopOffState &&
            result.desktopOffState_ != global::Hangups.Proto.DesktopOffState.DefaultInstance) {
            result.desktopOffState_ = global::Hangups.Proto.DesktopOffState.CreateBuilder(result.desktopOffState_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopOffState_ = value;
        }
        result.hasDesktopOffState = true;
        return this;
      }
      public Builder ClearDesktopOffState() {
        PrepareBuilder();
        result.hasDesktopOffState = false;
        result.desktopOffState_ = null;
        return this;
      }
      
      public bool HasGooglePlusUser {
        get { return result.hasGooglePlusUser; }
      }
      public bool GooglePlusUser {
        get { return result.GooglePlusUser; }
        set { SetGooglePlusUser(value); }
      }
      public Builder SetGooglePlusUser(bool value) {
        PrepareBuilder();
        result.hasGooglePlusUser = true;
        result.googlePlusUser_ = value;
        return this;
      }
      public Builder ClearGooglePlusUser() {
        PrepareBuilder();
        result.hasGooglePlusUser = false;
        result.googlePlusUser_ = false;
        return this;
      }
      
      public bool HasDesktopSoundSetting {
       get { return result.hasDesktopSoundSetting; }
      }
      public global::Hangups.Proto.DesktopSoundSetting DesktopSoundSetting {
        get { return result.DesktopSoundSetting; }
        set { SetDesktopSoundSetting(value); }
      }
      public Builder SetDesktopSoundSetting(global::Hangups.Proto.DesktopSoundSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopSoundSetting = true;
        result.desktopSoundSetting_ = value;
        return this;
      }
      public Builder SetDesktopSoundSetting(global::Hangups.Proto.DesktopSoundSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopSoundSetting = true;
        result.desktopSoundSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopSoundSetting(global::Hangups.Proto.DesktopSoundSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopSoundSetting &&
            result.desktopSoundSetting_ != global::Hangups.Proto.DesktopSoundSetting.DefaultInstance) {
            result.desktopSoundSetting_ = global::Hangups.Proto.DesktopSoundSetting.CreateBuilder(result.desktopSoundSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopSoundSetting_ = value;
        }
        result.hasDesktopSoundSetting = true;
        return this;
      }
      public Builder ClearDesktopSoundSetting() {
        PrepareBuilder();
        result.hasDesktopSoundSetting = false;
        result.desktopSoundSetting_ = null;
        return this;
      }
      
      public bool HasRichPresenceState {
       get { return result.hasRichPresenceState; }
      }
      public global::Hangups.Proto.RichPresenceState RichPresenceState {
        get { return result.RichPresenceState; }
        set { SetRichPresenceState(value); }
      }
      public Builder SetRichPresenceState(global::Hangups.Proto.RichPresenceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRichPresenceState = true;
        result.richPresenceState_ = value;
        return this;
      }
      public Builder SetRichPresenceState(global::Hangups.Proto.RichPresenceState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRichPresenceState = true;
        result.richPresenceState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRichPresenceState(global::Hangups.Proto.RichPresenceState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRichPresenceState &&
            result.richPresenceState_ != global::Hangups.Proto.RichPresenceState.DefaultInstance) {
            result.richPresenceState_ = global::Hangups.Proto.RichPresenceState.CreateBuilder(result.richPresenceState_).MergeFrom(value).BuildPartial();
        } else {
          result.richPresenceState_ = value;
        }
        result.hasRichPresenceState = true;
        return this;
      }
      public Builder ClearRichPresenceState() {
        PrepareBuilder();
        result.hasRichPresenceState = false;
        result.richPresenceState_ = null;
        return this;
      }
      
      public bool HasDefaultCountry {
       get { return result.hasDefaultCountry; }
      }
      public global::Hangups.Proto.Country DefaultCountry {
        get { return result.DefaultCountry; }
        set { SetDefaultCountry(value); }
      }
      public Builder SetDefaultCountry(global::Hangups.Proto.Country value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDefaultCountry = true;
        result.defaultCountry_ = value;
        return this;
      }
      public Builder SetDefaultCountry(global::Hangups.Proto.Country.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDefaultCountry = true;
        result.defaultCountry_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDefaultCountry(global::Hangups.Proto.Country value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDefaultCountry &&
            result.defaultCountry_ != global::Hangups.Proto.Country.DefaultInstance) {
            result.defaultCountry_ = global::Hangups.Proto.Country.CreateBuilder(result.defaultCountry_).MergeFrom(value).BuildPartial();
        } else {
          result.defaultCountry_ = value;
        }
        result.hasDefaultCountry = true;
        return this;
      }
      public Builder ClearDefaultCountry() {
        PrepareBuilder();
        result.hasDefaultCountry = false;
        result.defaultCountry_ = null;
        return this;
      }
    }
    static GetSelfInfoResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryPresenceRequest : pb::GeneratedMessage<QueryPresenceRequest, QueryPresenceRequest.Builder> {
    private QueryPresenceRequest() { }
    private static readonly QueryPresenceRequest defaultInstance = new QueryPresenceRequest().MakeReadOnly();
    private static readonly string[] _queryPresenceRequestFieldNames = new string[] { "field_mask", "participant_id", "request_header" };
    private static readonly uint[] _queryPresenceRequestFieldTags = new uint[] { 24, 18, 10 };
    public static QueryPresenceRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryPresenceRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryPresenceRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_QueryPresenceRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryPresenceRequest, QueryPresenceRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_QueryPresenceRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ParticipantIdFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.ParticipantId> participantId_ = new pbc::PopsicleList<global::Hangups.Proto.ParticipantId>();
    public scg::IList<global::Hangups.Proto.ParticipantId> ParticipantIdList {
      get { return participantId_; }
    }
    public int ParticipantIdCount {
      get { return participantId_.Count; }
    }
    public global::Hangups.Proto.ParticipantId GetParticipantId(int index) {
      return participantId_[index];
    }
    
    public const int FieldMaskFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.FieldMask> fieldMask_ = new pbc::PopsicleList<global::Hangups.Proto.FieldMask>();
    public scg::IList<global::Hangups.Proto.FieldMask> FieldMaskList {
      get { return pbc::Lists.AsReadOnly(fieldMask_); }
    }
    public int FieldMaskCount {
      get { return fieldMask_.Count; }
    }
    public global::Hangups.Proto.FieldMask GetFieldMask(int index) {
      return fieldMask_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _queryPresenceRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (participantId_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], participantId_);
      }
      if (fieldMask_.Count > 0) {
        output.WriteEnumArray(3, field_names[0], fieldMask_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      foreach (global::Hangups.Proto.ParticipantId element in ParticipantIdList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      {
        int dataSize = 0;
        if (fieldMask_.Count > 0) {
          foreach (global::Hangups.Proto.FieldMask element in fieldMask_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 1 * fieldMask_.Count;
        }
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static QueryPresenceRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryPresenceRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryPresenceRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryPresenceRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryPresenceRequest MakeReadOnly() {
      participantId_.MakeReadOnly();
      fieldMask_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryPresenceRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryPresenceRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryPresenceRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryPresenceRequest result;
      
      private QueryPresenceRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryPresenceRequest original = result;
          result = new QueryPresenceRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryPresenceRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.QueryPresenceRequest.Descriptor; }
      }
      
      public override QueryPresenceRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.QueryPresenceRequest.DefaultInstance; }
      }
      
      public override QueryPresenceRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryPresenceRequest) {
          return MergeFrom((QueryPresenceRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryPresenceRequest other) {
        if (other == global::Hangups.Proto.QueryPresenceRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.participantId_.Count != 0) {
          result.participantId_.Add(other.participantId_);
        }
        if (other.fieldMask_.Count != 0) {
          result.fieldMask_.Add(other.fieldMask_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryPresenceRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryPresenceRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.participantId_, global::Hangups.Proto.ParticipantId.DefaultInstance, extensionRegistry);
              break;
            }
            case 26:
            case 24: {
              scg::ICollection<object> unknownItems;
              input.ReadEnumArray<global::Hangups.Proto.FieldMask>(tag, field_name, result.fieldMask_, out unknownItems);
              if (unknownItems != null) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                foreach (object rawValue in unknownItems)
                  if (rawValue is int)
                    unknownFields.MergeVarintField(3, (ulong)(int)rawValue);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ParticipantId> ParticipantIdList {
        get { return PrepareBuilder().participantId_; }
      }
      public int ParticipantIdCount {
        get { return result.ParticipantIdCount; }
      }
      public global::Hangups.Proto.ParticipantId GetParticipantId(int index) {
        return result.GetParticipantId(index);
      }
      public Builder SetParticipantId(int index, global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantId_[index] = value;
        return this;
      }
      public Builder SetParticipantId(int index, global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParticipantId(global::Hangups.Proto.ParticipantId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.participantId_.Add(value);
        return this;
      }
      public Builder AddParticipantId(global::Hangups.Proto.ParticipantId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.participantId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParticipantId(scg::IEnumerable<global::Hangups.Proto.ParticipantId> values) {
        PrepareBuilder();
        result.participantId_.Add(values);
        return this;
      }
      public Builder ClearParticipantId() {
        PrepareBuilder();
        result.participantId_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.FieldMask> FieldMaskList {
        get { return PrepareBuilder().fieldMask_; }
      }
      public int FieldMaskCount {
        get { return result.FieldMaskCount; }
      }
      public global::Hangups.Proto.FieldMask GetFieldMask(int index) {
        return result.GetFieldMask(index);
      }
      public Builder SetFieldMask(int index, global::Hangups.Proto.FieldMask value) {
        PrepareBuilder();
        result.fieldMask_[index] = value;
        return this;
      }
      public Builder AddFieldMask(global::Hangups.Proto.FieldMask value) {
        PrepareBuilder();
        result.fieldMask_.Add(value);
        return this;
      }
      public Builder AddRangeFieldMask(scg::IEnumerable<global::Hangups.Proto.FieldMask> values) {
        PrepareBuilder();
        result.fieldMask_.Add(values);
        return this;
      }
      public Builder ClearFieldMask() {
        PrepareBuilder();
        result.fieldMask_.Clear();
        return this;
      }
    }
    static QueryPresenceRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class QueryPresenceResponse : pb::GeneratedMessage<QueryPresenceResponse, QueryPresenceResponse.Builder> {
    private QueryPresenceResponse() { }
    private static readonly QueryPresenceResponse defaultInstance = new QueryPresenceResponse().MakeReadOnly();
    private static readonly string[] _queryPresenceResponseFieldNames = new string[] { "presence_result", "response_header" };
    private static readonly uint[] _queryPresenceResponseFieldTags = new uint[] { 18, 10 };
    public static QueryPresenceResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryPresenceResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryPresenceResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_QueryPresenceResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryPresenceResponse, QueryPresenceResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_QueryPresenceResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int PresenceResultFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.PresenceResult> presenceResult_ = new pbc::PopsicleList<global::Hangups.Proto.PresenceResult>();
    public scg::IList<global::Hangups.Proto.PresenceResult> PresenceResultList {
      get { return presenceResult_; }
    }
    public int PresenceResultCount {
      get { return presenceResult_.Count; }
    }
    public global::Hangups.Proto.PresenceResult GetPresenceResult(int index) {
      return presenceResult_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.PresenceResult element in PresenceResultList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _queryPresenceResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (presenceResult_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], presenceResult_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      foreach (global::Hangups.Proto.PresenceResult element in PresenceResultList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static QueryPresenceResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryPresenceResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryPresenceResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryPresenceResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryPresenceResponse MakeReadOnly() {
      presenceResult_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryPresenceResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryPresenceResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryPresenceResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryPresenceResponse result;
      
      private QueryPresenceResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryPresenceResponse original = result;
          result = new QueryPresenceResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryPresenceResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.QueryPresenceResponse.Descriptor; }
      }
      
      public override QueryPresenceResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.QueryPresenceResponse.DefaultInstance; }
      }
      
      public override QueryPresenceResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryPresenceResponse) {
          return MergeFrom((QueryPresenceResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryPresenceResponse other) {
        if (other == global::Hangups.Proto.QueryPresenceResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.presenceResult_.Count != 0) {
          result.presenceResult_.Add(other.presenceResult_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryPresenceResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryPresenceResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.presenceResult_, global::Hangups.Proto.PresenceResult.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.PresenceResult> PresenceResultList {
        get { return PrepareBuilder().presenceResult_; }
      }
      public int PresenceResultCount {
        get { return result.PresenceResultCount; }
      }
      public global::Hangups.Proto.PresenceResult GetPresenceResult(int index) {
        return result.GetPresenceResult(index);
      }
      public Builder SetPresenceResult(int index, global::Hangups.Proto.PresenceResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.presenceResult_[index] = value;
        return this;
      }
      public Builder SetPresenceResult(int index, global::Hangups.Proto.PresenceResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.presenceResult_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPresenceResult(global::Hangups.Proto.PresenceResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.presenceResult_.Add(value);
        return this;
      }
      public Builder AddPresenceResult(global::Hangups.Proto.PresenceResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.presenceResult_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePresenceResult(scg::IEnumerable<global::Hangups.Proto.PresenceResult> values) {
        PrepareBuilder();
        result.presenceResult_.Add(values);
        return this;
      }
      public Builder ClearPresenceResult() {
        PrepareBuilder();
        result.presenceResult_.Clear();
        return this;
      }
    }
    static QueryPresenceResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveUserRequest : pb::GeneratedMessage<RemoveUserRequest, RemoveUserRequest.Builder> {
    private RemoveUserRequest() { }
    private static readonly RemoveUserRequest defaultInstance = new RemoveUserRequest().MakeReadOnly();
    private static readonly string[] _removeUserRequestFieldNames = new string[] { "event_request_header", "request_header" };
    private static readonly uint[] _removeUserRequestFieldTags = new uint[] { 42, 10 };
    public static RemoveUserRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveUserRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveUserRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RemoveUserRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveUserRequest, RemoveUserRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RemoveUserRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int EventRequestHeaderFieldNumber = 5;
    private bool hasEventRequestHeader;
    private global::Hangups.Proto.EventRequestHeader eventRequestHeader_;
    public bool HasEventRequestHeader {
      get { return hasEventRequestHeader; }
    }
    public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_ ?? global::Hangups.Proto.EventRequestHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeUserRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[1], RequestHeader);
      }
      if (hasEventRequestHeader) {
        output.WriteMessage(5, field_names[0], EventRequestHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasEventRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, EventRequestHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveUserRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveUserRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUserRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveUserRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveUserRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveUserRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveUserRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveUserRequest result;
      
      private RemoveUserRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveUserRequest original = result;
          result = new RemoveUserRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveUserRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RemoveUserRequest.Descriptor; }
      }
      
      public override RemoveUserRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.RemoveUserRequest.DefaultInstance; }
      }
      
      public override RemoveUserRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveUserRequest) {
          return MergeFrom((RemoveUserRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveUserRequest other) {
        if (other == global::Hangups.Proto.RemoveUserRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasEventRequestHeader) {
          MergeEventRequestHeader(other.EventRequestHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeUserRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeUserRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Hangups.Proto.EventRequestHeader.Builder subBuilder = global::Hangups.Proto.EventRequestHeader.CreateBuilder();
              if (result.hasEventRequestHeader) {
                subBuilder.MergeFrom(EventRequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EventRequestHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasEventRequestHeader {
       get { return result.hasEventRequestHeader; }
      }
      public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
        get { return result.EventRequestHeader; }
        set { SetEventRequestHeader(value); }
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = value;
        return this;
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEventRequestHeader &&
            result.eventRequestHeader_ != global::Hangups.Proto.EventRequestHeader.DefaultInstance) {
            result.eventRequestHeader_ = global::Hangups.Proto.EventRequestHeader.CreateBuilder(result.eventRequestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.eventRequestHeader_ = value;
        }
        result.hasEventRequestHeader = true;
        return this;
      }
      public Builder ClearEventRequestHeader() {
        PrepareBuilder();
        result.hasEventRequestHeader = false;
        result.eventRequestHeader_ = null;
        return this;
      }
    }
    static RemoveUserRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveUserResponse : pb::GeneratedMessage<RemoveUserResponse, RemoveUserResponse.Builder> {
    private RemoveUserResponse() { }
    private static readonly RemoveUserResponse defaultInstance = new RemoveUserResponse().MakeReadOnly();
    private static readonly string[] _removeUserResponseFieldNames = new string[] { "created_event", "response_header" };
    private static readonly uint[] _removeUserResponseFieldTags = new uint[] { 34, 10 };
    public static RemoveUserResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveUserResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveUserResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RemoveUserResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveUserResponse, RemoveUserResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RemoveUserResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int CreatedEventFieldNumber = 4;
    private bool hasCreatedEvent;
    private global::Hangups.Proto.Event createdEvent_;
    public bool HasCreatedEvent {
      get { return hasCreatedEvent; }
    }
    public global::Hangups.Proto.Event CreatedEvent {
      get { return createdEvent_ ?? global::Hangups.Proto.Event.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCreatedEvent) {
          if (!CreatedEvent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeUserResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasCreatedEvent) {
        output.WriteMessage(4, field_names[0], CreatedEvent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasCreatedEvent) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, CreatedEvent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveUserResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveUserResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUserResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveUserResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveUserResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveUserResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveUserResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveUserResponse result;
      
      private RemoveUserResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveUserResponse original = result;
          result = new RemoveUserResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveUserResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RemoveUserResponse.Descriptor; }
      }
      
      public override RemoveUserResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.RemoveUserResponse.DefaultInstance; }
      }
      
      public override RemoveUserResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveUserResponse) {
          return MergeFrom((RemoveUserResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveUserResponse other) {
        if (other == global::Hangups.Proto.RemoveUserResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasCreatedEvent) {
          MergeCreatedEvent(other.CreatedEvent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeUserResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeUserResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::Hangups.Proto.Event.Builder subBuilder = global::Hangups.Proto.Event.CreateBuilder();
              if (result.hasCreatedEvent) {
                subBuilder.MergeFrom(CreatedEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreatedEvent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasCreatedEvent {
       get { return result.hasCreatedEvent; }
      }
      public global::Hangups.Proto.Event CreatedEvent {
        get { return result.CreatedEvent; }
        set { SetCreatedEvent(value); }
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = value;
        return this;
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreatedEvent &&
            result.createdEvent_ != global::Hangups.Proto.Event.DefaultInstance) {
            result.createdEvent_ = global::Hangups.Proto.Event.CreateBuilder(result.createdEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.createdEvent_ = value;
        }
        result.hasCreatedEvent = true;
        return this;
      }
      public Builder ClearCreatedEvent() {
        PrepareBuilder();
        result.hasCreatedEvent = false;
        result.createdEvent_ = null;
        return this;
      }
    }
    static RemoveUserResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RenameConversationRequest : pb::GeneratedMessage<RenameConversationRequest, RenameConversationRequest.Builder> {
    private RenameConversationRequest() { }
    private static readonly RenameConversationRequest defaultInstance = new RenameConversationRequest().MakeReadOnly();
    private static readonly string[] _renameConversationRequestFieldNames = new string[] { "event_request_header", "new_name", "request_header" };
    private static readonly uint[] _renameConversationRequestFieldTags = new uint[] { 42, 26, 10 };
    public static RenameConversationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RenameConversationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RenameConversationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RenameConversationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RenameConversationRequest, RenameConversationRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RenameConversationRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int NewNameFieldNumber = 3;
    private bool hasNewName;
    private string newName_ = "";
    public bool HasNewName {
      get { return hasNewName; }
    }
    public string NewName {
      get { return newName_; }
    }
    
    public const int EventRequestHeaderFieldNumber = 5;
    private bool hasEventRequestHeader;
    private global::Hangups.Proto.EventRequestHeader eventRequestHeader_;
    public bool HasEventRequestHeader {
      get { return hasEventRequestHeader; }
    }
    public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_ ?? global::Hangups.Proto.EventRequestHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _renameConversationRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasNewName) {
        output.WriteString(3, field_names[1], NewName);
      }
      if (hasEventRequestHeader) {
        output.WriteMessage(5, field_names[0], EventRequestHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasNewName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, NewName);
      }
      if (hasEventRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, EventRequestHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RenameConversationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RenameConversationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RenameConversationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RenameConversationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RenameConversationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RenameConversationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RenameConversationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RenameConversationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RenameConversationRequest result;
      
      private RenameConversationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RenameConversationRequest original = result;
          result = new RenameConversationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RenameConversationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RenameConversationRequest.Descriptor; }
      }
      
      public override RenameConversationRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.RenameConversationRequest.DefaultInstance; }
      }
      
      public override RenameConversationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RenameConversationRequest) {
          return MergeFrom((RenameConversationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RenameConversationRequest other) {
        if (other == global::Hangups.Proto.RenameConversationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasNewName) {
          NewName = other.NewName;
        }
        if (other.HasEventRequestHeader) {
          MergeEventRequestHeader(other.EventRequestHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_renameConversationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _renameConversationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasNewName = input.ReadString(ref result.newName_);
              break;
            }
            case 42: {
              global::Hangups.Proto.EventRequestHeader.Builder subBuilder = global::Hangups.Proto.EventRequestHeader.CreateBuilder();
              if (result.hasEventRequestHeader) {
                subBuilder.MergeFrom(EventRequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EventRequestHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasNewName {
        get { return result.hasNewName; }
      }
      public string NewName {
        get { return result.NewName; }
        set { SetNewName(value); }
      }
      public Builder SetNewName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewName = true;
        result.newName_ = value;
        return this;
      }
      public Builder ClearNewName() {
        PrepareBuilder();
        result.hasNewName = false;
        result.newName_ = "";
        return this;
      }
      
      public bool HasEventRequestHeader {
       get { return result.hasEventRequestHeader; }
      }
      public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
        get { return result.EventRequestHeader; }
        set { SetEventRequestHeader(value); }
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = value;
        return this;
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEventRequestHeader &&
            result.eventRequestHeader_ != global::Hangups.Proto.EventRequestHeader.DefaultInstance) {
            result.eventRequestHeader_ = global::Hangups.Proto.EventRequestHeader.CreateBuilder(result.eventRequestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.eventRequestHeader_ = value;
        }
        result.hasEventRequestHeader = true;
        return this;
      }
      public Builder ClearEventRequestHeader() {
        PrepareBuilder();
        result.hasEventRequestHeader = false;
        result.eventRequestHeader_ = null;
        return this;
      }
    }
    static RenameConversationRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RenameConversationResponse : pb::GeneratedMessage<RenameConversationResponse, RenameConversationResponse.Builder> {
    private RenameConversationResponse() { }
    private static readonly RenameConversationResponse defaultInstance = new RenameConversationResponse().MakeReadOnly();
    private static readonly string[] _renameConversationResponseFieldNames = new string[] { "created_event", "response_header" };
    private static readonly uint[] _renameConversationResponseFieldTags = new uint[] { 34, 10 };
    public static RenameConversationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RenameConversationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RenameConversationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_RenameConversationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RenameConversationResponse, RenameConversationResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_RenameConversationResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int CreatedEventFieldNumber = 4;
    private bool hasCreatedEvent;
    private global::Hangups.Proto.Event createdEvent_;
    public bool HasCreatedEvent {
      get { return hasCreatedEvent; }
    }
    public global::Hangups.Proto.Event CreatedEvent {
      get { return createdEvent_ ?? global::Hangups.Proto.Event.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCreatedEvent) {
          if (!CreatedEvent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _renameConversationResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasCreatedEvent) {
        output.WriteMessage(4, field_names[0], CreatedEvent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasCreatedEvent) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, CreatedEvent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RenameConversationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RenameConversationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RenameConversationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RenameConversationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RenameConversationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RenameConversationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RenameConversationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RenameConversationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RenameConversationResponse result;
      
      private RenameConversationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RenameConversationResponse original = result;
          result = new RenameConversationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RenameConversationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.RenameConversationResponse.Descriptor; }
      }
      
      public override RenameConversationResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.RenameConversationResponse.DefaultInstance; }
      }
      
      public override RenameConversationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RenameConversationResponse) {
          return MergeFrom((RenameConversationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RenameConversationResponse other) {
        if (other == global::Hangups.Proto.RenameConversationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasCreatedEvent) {
          MergeCreatedEvent(other.CreatedEvent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_renameConversationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _renameConversationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::Hangups.Proto.Event.Builder subBuilder = global::Hangups.Proto.Event.CreateBuilder();
              if (result.hasCreatedEvent) {
                subBuilder.MergeFrom(CreatedEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreatedEvent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasCreatedEvent {
       get { return result.hasCreatedEvent; }
      }
      public global::Hangups.Proto.Event CreatedEvent {
        get { return result.CreatedEvent; }
        set { SetCreatedEvent(value); }
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = value;
        return this;
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreatedEvent &&
            result.createdEvent_ != global::Hangups.Proto.Event.DefaultInstance) {
            result.createdEvent_ = global::Hangups.Proto.Event.CreateBuilder(result.createdEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.createdEvent_ = value;
        }
        result.hasCreatedEvent = true;
        return this;
      }
      public Builder ClearCreatedEvent() {
        PrepareBuilder();
        result.hasCreatedEvent = false;
        result.createdEvent_ = null;
        return this;
      }
    }
    static RenameConversationResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchEntitiesRequest : pb::GeneratedMessage<SearchEntitiesRequest, SearchEntitiesRequest.Builder> {
    private SearchEntitiesRequest() { }
    private static readonly SearchEntitiesRequest defaultInstance = new SearchEntitiesRequest().MakeReadOnly();
    private static readonly string[] _searchEntitiesRequestFieldNames = new string[] { "max_count", "query", "request_header" };
    private static readonly uint[] _searchEntitiesRequestFieldTags = new uint[] { 32, 26, 10 };
    public static SearchEntitiesRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchEntitiesRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchEntitiesRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SearchEntitiesRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchEntitiesRequest, SearchEntitiesRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SearchEntitiesRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int QueryFieldNumber = 3;
    private bool hasQuery;
    private string query_ = "";
    public bool HasQuery {
      get { return hasQuery; }
    }
    public string Query {
      get { return query_; }
    }
    
    public const int MaxCountFieldNumber = 4;
    private bool hasMaxCount;
    private ulong maxCount_;
    public bool HasMaxCount {
      get { return hasMaxCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxCount {
      get { return maxCount_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchEntitiesRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasQuery) {
        output.WriteString(3, field_names[1], Query);
      }
      if (hasMaxCount) {
        output.WriteUInt64(4, field_names[0], MaxCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasQuery) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Query);
      }
      if (hasMaxCount) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, MaxCount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchEntitiesRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchEntitiesRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchEntitiesRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchEntitiesRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchEntitiesRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchEntitiesRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchEntitiesRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchEntitiesRequest result;
      
      private SearchEntitiesRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchEntitiesRequest original = result;
          result = new SearchEntitiesRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchEntitiesRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SearchEntitiesRequest.Descriptor; }
      }
      
      public override SearchEntitiesRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SearchEntitiesRequest.DefaultInstance; }
      }
      
      public override SearchEntitiesRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchEntitiesRequest) {
          return MergeFrom((SearchEntitiesRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchEntitiesRequest other) {
        if (other == global::Hangups.Proto.SearchEntitiesRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasQuery) {
          Query = other.Query;
        }
        if (other.HasMaxCount) {
          MaxCount = other.MaxCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchEntitiesRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchEntitiesRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasQuery = input.ReadString(ref result.query_);
              break;
            }
            case 32: {
              result.hasMaxCount = input.ReadUInt64(ref result.maxCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasQuery {
        get { return result.hasQuery; }
      }
      public string Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder ClearQuery() {
        PrepareBuilder();
        result.hasQuery = false;
        result.query_ = "";
        return this;
      }
      
      public bool HasMaxCount {
        get { return result.hasMaxCount; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MaxCount {
        get { return result.MaxCount; }
        set { SetMaxCount(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxCount(ulong value) {
        PrepareBuilder();
        result.hasMaxCount = true;
        result.maxCount_ = value;
        return this;
      }
      public Builder ClearMaxCount() {
        PrepareBuilder();
        result.hasMaxCount = false;
        result.maxCount_ = 0UL;
        return this;
      }
    }
    static SearchEntitiesRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchEntitiesResponse : pb::GeneratedMessage<SearchEntitiesResponse, SearchEntitiesResponse.Builder> {
    private SearchEntitiesResponse() { }
    private static readonly SearchEntitiesResponse defaultInstance = new SearchEntitiesResponse().MakeReadOnly();
    private static readonly string[] _searchEntitiesResponseFieldNames = new string[] { "entity", "response_header" };
    private static readonly uint[] _searchEntitiesResponseFieldTags = new uint[] { 18, 10 };
    public static SearchEntitiesResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchEntitiesResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchEntitiesResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SearchEntitiesResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchEntitiesResponse, SearchEntitiesResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SearchEntitiesResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int EntityFieldNumber = 2;
    private pbc::PopsicleList<global::Hangups.Proto.Entity> entity_ = new pbc::PopsicleList<global::Hangups.Proto.Entity>();
    public scg::IList<global::Hangups.Proto.Entity> EntityList {
      get { return entity_; }
    }
    public int EntityCount {
      get { return entity_.Count; }
    }
    public global::Hangups.Proto.Entity GetEntity(int index) {
      return entity_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.Entity element in EntityList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchEntitiesResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (entity_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], entity_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      foreach (global::Hangups.Proto.Entity element in EntityList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchEntitiesResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchEntitiesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchEntitiesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchEntitiesResponse MakeReadOnly() {
      entity_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchEntitiesResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchEntitiesResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchEntitiesResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchEntitiesResponse result;
      
      private SearchEntitiesResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchEntitiesResponse original = result;
          result = new SearchEntitiesResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchEntitiesResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SearchEntitiesResponse.Descriptor; }
      }
      
      public override SearchEntitiesResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SearchEntitiesResponse.DefaultInstance; }
      }
      
      public override SearchEntitiesResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchEntitiesResponse) {
          return MergeFrom((SearchEntitiesResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchEntitiesResponse other) {
        if (other == global::Hangups.Proto.SearchEntitiesResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.entity_.Count != 0) {
          result.entity_.Add(other.entity_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchEntitiesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchEntitiesResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.entity_, global::Hangups.Proto.Entity.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.Entity> EntityList {
        get { return PrepareBuilder().entity_; }
      }
      public int EntityCount {
        get { return result.EntityCount; }
      }
      public global::Hangups.Proto.Entity GetEntity(int index) {
        return result.GetEntity(index);
      }
      public Builder SetEntity(int index, global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entity_[index] = value;
        return this;
      }
      public Builder SetEntity(int index, global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entity_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntity(global::Hangups.Proto.Entity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entity_.Add(value);
        return this;
      }
      public Builder AddEntity(global::Hangups.Proto.Entity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entity_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntity(scg::IEnumerable<global::Hangups.Proto.Entity> values) {
        PrepareBuilder();
        result.entity_.Add(values);
        return this;
      }
      public Builder ClearEntity() {
        PrepareBuilder();
        result.entity_.Clear();
        return this;
      }
    }
    static SearchEntitiesResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendChatMessageRequest : pb::GeneratedMessage<SendChatMessageRequest, SendChatMessageRequest.Builder> {
    private SendChatMessageRequest() { }
    private static readonly SendChatMessageRequest defaultInstance = new SendChatMessageRequest().MakeReadOnly();
    private static readonly string[] _sendChatMessageRequestFieldNames = new string[] { "annotation", "event_request_header", "existing_media", "message_content", "request_header" };
    private static readonly uint[] _sendChatMessageRequestFieldTags = new uint[] { 42, 66, 58, 50, 10 };
    public static SendChatMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendChatMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendChatMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SendChatMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendChatMessageRequest, SendChatMessageRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SendChatMessageRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int AnnotationFieldNumber = 5;
    private pbc::PopsicleList<global::Hangups.Proto.EventAnnotation> annotation_ = new pbc::PopsicleList<global::Hangups.Proto.EventAnnotation>();
    public scg::IList<global::Hangups.Proto.EventAnnotation> AnnotationList {
      get { return annotation_; }
    }
    public int AnnotationCount {
      get { return annotation_.Count; }
    }
    public global::Hangups.Proto.EventAnnotation GetAnnotation(int index) {
      return annotation_[index];
    }
    
    public const int MessageContentFieldNumber = 6;
    private bool hasMessageContent;
    private global::Hangups.Proto.MessageContent messageContent_;
    public bool HasMessageContent {
      get { return hasMessageContent; }
    }
    public global::Hangups.Proto.MessageContent MessageContent {
      get { return messageContent_ ?? global::Hangups.Proto.MessageContent.DefaultInstance; }
    }
    
    public const int ExistingMediaFieldNumber = 7;
    private bool hasExistingMedia;
    private global::Hangups.Proto.ExistingMedia existingMedia_;
    public bool HasExistingMedia {
      get { return hasExistingMedia; }
    }
    public global::Hangups.Proto.ExistingMedia ExistingMedia {
      get { return existingMedia_ ?? global::Hangups.Proto.ExistingMedia.DefaultInstance; }
    }
    
    public const int EventRequestHeaderFieldNumber = 8;
    private bool hasEventRequestHeader;
    private global::Hangups.Proto.EventRequestHeader eventRequestHeader_;
    public bool HasEventRequestHeader {
      get { return hasEventRequestHeader; }
    }
    public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
      get { return eventRequestHeader_ ?? global::Hangups.Proto.EventRequestHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMessageContent) {
          if (!MessageContent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sendChatMessageRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[4], RequestHeader);
      }
      if (annotation_.Count > 0) {
        output.WriteMessageArray(5, field_names[0], annotation_);
      }
      if (hasMessageContent) {
        output.WriteMessage(6, field_names[3], MessageContent);
      }
      if (hasExistingMedia) {
        output.WriteMessage(7, field_names[2], ExistingMedia);
      }
      if (hasEventRequestHeader) {
        output.WriteMessage(8, field_names[1], EventRequestHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      foreach (global::Hangups.Proto.EventAnnotation element in AnnotationList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasMessageContent) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, MessageContent);
      }
      if (hasExistingMedia) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, ExistingMedia);
      }
      if (hasEventRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, EventRequestHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SendChatMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendChatMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendChatMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendChatMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendChatMessageRequest MakeReadOnly() {
      annotation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendChatMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SendChatMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendChatMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendChatMessageRequest result;
      
      private SendChatMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendChatMessageRequest original = result;
          result = new SendChatMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendChatMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SendChatMessageRequest.Descriptor; }
      }
      
      public override SendChatMessageRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SendChatMessageRequest.DefaultInstance; }
      }
      
      public override SendChatMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendChatMessageRequest) {
          return MergeFrom((SendChatMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendChatMessageRequest other) {
        if (other == global::Hangups.Proto.SendChatMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.annotation_.Count != 0) {
          result.annotation_.Add(other.annotation_);
        }
        if (other.HasMessageContent) {
          MergeMessageContent(other.MessageContent);
        }
        if (other.HasExistingMedia) {
          MergeExistingMedia(other.ExistingMedia);
        }
        if (other.HasEventRequestHeader) {
          MergeEventRequestHeader(other.EventRequestHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendChatMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendChatMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.annotation_, global::Hangups.Proto.EventAnnotation.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              global::Hangups.Proto.MessageContent.Builder subBuilder = global::Hangups.Proto.MessageContent.CreateBuilder();
              if (result.hasMessageContent) {
                subBuilder.MergeFrom(MessageContent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MessageContent = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::Hangups.Proto.ExistingMedia.Builder subBuilder = global::Hangups.Proto.ExistingMedia.CreateBuilder();
              if (result.hasExistingMedia) {
                subBuilder.MergeFrom(ExistingMedia);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExistingMedia = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::Hangups.Proto.EventRequestHeader.Builder subBuilder = global::Hangups.Proto.EventRequestHeader.CreateBuilder();
              if (result.hasEventRequestHeader) {
                subBuilder.MergeFrom(EventRequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              EventRequestHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.EventAnnotation> AnnotationList {
        get { return PrepareBuilder().annotation_; }
      }
      public int AnnotationCount {
        get { return result.AnnotationCount; }
      }
      public global::Hangups.Proto.EventAnnotation GetAnnotation(int index) {
        return result.GetAnnotation(index);
      }
      public Builder SetAnnotation(int index, global::Hangups.Proto.EventAnnotation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.annotation_[index] = value;
        return this;
      }
      public Builder SetAnnotation(int index, global::Hangups.Proto.EventAnnotation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.annotation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAnnotation(global::Hangups.Proto.EventAnnotation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.annotation_.Add(value);
        return this;
      }
      public Builder AddAnnotation(global::Hangups.Proto.EventAnnotation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.annotation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAnnotation(scg::IEnumerable<global::Hangups.Proto.EventAnnotation> values) {
        PrepareBuilder();
        result.annotation_.Add(values);
        return this;
      }
      public Builder ClearAnnotation() {
        PrepareBuilder();
        result.annotation_.Clear();
        return this;
      }
      
      public bool HasMessageContent {
       get { return result.hasMessageContent; }
      }
      public global::Hangups.Proto.MessageContent MessageContent {
        get { return result.MessageContent; }
        set { SetMessageContent(value); }
      }
      public Builder SetMessageContent(global::Hangups.Proto.MessageContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessageContent = true;
        result.messageContent_ = value;
        return this;
      }
      public Builder SetMessageContent(global::Hangups.Proto.MessageContent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMessageContent = true;
        result.messageContent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMessageContent(global::Hangups.Proto.MessageContent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMessageContent &&
            result.messageContent_ != global::Hangups.Proto.MessageContent.DefaultInstance) {
            result.messageContent_ = global::Hangups.Proto.MessageContent.CreateBuilder(result.messageContent_).MergeFrom(value).BuildPartial();
        } else {
          result.messageContent_ = value;
        }
        result.hasMessageContent = true;
        return this;
      }
      public Builder ClearMessageContent() {
        PrepareBuilder();
        result.hasMessageContent = false;
        result.messageContent_ = null;
        return this;
      }
      
      public bool HasExistingMedia {
       get { return result.hasExistingMedia; }
      }
      public global::Hangups.Proto.ExistingMedia ExistingMedia {
        get { return result.ExistingMedia; }
        set { SetExistingMedia(value); }
      }
      public Builder SetExistingMedia(global::Hangups.Proto.ExistingMedia value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExistingMedia = true;
        result.existingMedia_ = value;
        return this;
      }
      public Builder SetExistingMedia(global::Hangups.Proto.ExistingMedia.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExistingMedia = true;
        result.existingMedia_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExistingMedia(global::Hangups.Proto.ExistingMedia value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExistingMedia &&
            result.existingMedia_ != global::Hangups.Proto.ExistingMedia.DefaultInstance) {
            result.existingMedia_ = global::Hangups.Proto.ExistingMedia.CreateBuilder(result.existingMedia_).MergeFrom(value).BuildPartial();
        } else {
          result.existingMedia_ = value;
        }
        result.hasExistingMedia = true;
        return this;
      }
      public Builder ClearExistingMedia() {
        PrepareBuilder();
        result.hasExistingMedia = false;
        result.existingMedia_ = null;
        return this;
      }
      
      public bool HasEventRequestHeader {
       get { return result.hasEventRequestHeader; }
      }
      public global::Hangups.Proto.EventRequestHeader EventRequestHeader {
        get { return result.EventRequestHeader; }
        set { SetEventRequestHeader(value); }
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = value;
        return this;
      }
      public Builder SetEventRequestHeader(global::Hangups.Proto.EventRequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEventRequestHeader = true;
        result.eventRequestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEventRequestHeader(global::Hangups.Proto.EventRequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEventRequestHeader &&
            result.eventRequestHeader_ != global::Hangups.Proto.EventRequestHeader.DefaultInstance) {
            result.eventRequestHeader_ = global::Hangups.Proto.EventRequestHeader.CreateBuilder(result.eventRequestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.eventRequestHeader_ = value;
        }
        result.hasEventRequestHeader = true;
        return this;
      }
      public Builder ClearEventRequestHeader() {
        PrepareBuilder();
        result.hasEventRequestHeader = false;
        result.eventRequestHeader_ = null;
        return this;
      }
    }
    static SendChatMessageRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SendChatMessageResponse : pb::GeneratedMessage<SendChatMessageResponse, SendChatMessageResponse.Builder> {
    private SendChatMessageResponse() { }
    private static readonly SendChatMessageResponse defaultInstance = new SendChatMessageResponse().MakeReadOnly();
    private static readonly string[] _sendChatMessageResponseFieldNames = new string[] { "created_event", "response_header" };
    private static readonly uint[] _sendChatMessageResponseFieldTags = new uint[] { 50, 10 };
    public static SendChatMessageResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendChatMessageResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendChatMessageResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SendChatMessageResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendChatMessageResponse, SendChatMessageResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SendChatMessageResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int CreatedEventFieldNumber = 6;
    private bool hasCreatedEvent;
    private global::Hangups.Proto.Event createdEvent_;
    public bool HasCreatedEvent {
      get { return hasCreatedEvent; }
    }
    public global::Hangups.Proto.Event CreatedEvent {
      get { return createdEvent_ ?? global::Hangups.Proto.Event.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCreatedEvent) {
          if (!CreatedEvent.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sendChatMessageResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasCreatedEvent) {
        output.WriteMessage(6, field_names[0], CreatedEvent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasCreatedEvent) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, CreatedEvent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SendChatMessageResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendChatMessageResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendChatMessageResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendChatMessageResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendChatMessageResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendChatMessageResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SendChatMessageResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendChatMessageResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendChatMessageResponse result;
      
      private SendChatMessageResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SendChatMessageResponse original = result;
          result = new SendChatMessageResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendChatMessageResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SendChatMessageResponse.Descriptor; }
      }
      
      public override SendChatMessageResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SendChatMessageResponse.DefaultInstance; }
      }
      
      public override SendChatMessageResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendChatMessageResponse) {
          return MergeFrom((SendChatMessageResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendChatMessageResponse other) {
        if (other == global::Hangups.Proto.SendChatMessageResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasCreatedEvent) {
          MergeCreatedEvent(other.CreatedEvent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendChatMessageResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendChatMessageResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::Hangups.Proto.Event.Builder subBuilder = global::Hangups.Proto.Event.CreateBuilder();
              if (result.hasCreatedEvent) {
                subBuilder.MergeFrom(CreatedEvent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreatedEvent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasCreatedEvent {
       get { return result.hasCreatedEvent; }
      }
      public global::Hangups.Proto.Event CreatedEvent {
        get { return result.CreatedEvent; }
        set { SetCreatedEvent(value); }
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = value;
        return this;
      }
      public Builder SetCreatedEvent(global::Hangups.Proto.Event.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreatedEvent = true;
        result.createdEvent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreatedEvent(global::Hangups.Proto.Event value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreatedEvent &&
            result.createdEvent_ != global::Hangups.Proto.Event.DefaultInstance) {
            result.createdEvent_ = global::Hangups.Proto.Event.CreateBuilder(result.createdEvent_).MergeFrom(value).BuildPartial();
        } else {
          result.createdEvent_ = value;
        }
        result.hasCreatedEvent = true;
        return this;
      }
      public Builder ClearCreatedEvent() {
        PrepareBuilder();
        result.hasCreatedEvent = false;
        result.createdEvent_ = null;
        return this;
      }
    }
    static SendChatMessageResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetActiveClientRequest : pb::GeneratedMessage<SetActiveClientRequest, SetActiveClientRequest.Builder> {
    private SetActiveClientRequest() { }
    private static readonly SetActiveClientRequest defaultInstance = new SetActiveClientRequest().MakeReadOnly();
    private static readonly string[] _setActiveClientRequestFieldNames = new string[] { "full_jid", "is_active", "request_header", "timeout_secs" };
    private static readonly uint[] _setActiveClientRequestFieldTags = new uint[] { 26, 16, 10, 32 };
    public static SetActiveClientRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetActiveClientRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetActiveClientRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetActiveClientRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetActiveClientRequest, SetActiveClientRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetActiveClientRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int IsActiveFieldNumber = 2;
    private bool hasIsActive;
    private bool isActive_;
    public bool HasIsActive {
      get { return hasIsActive; }
    }
    public bool IsActive {
      get { return isActive_; }
    }
    
    public const int FullJidFieldNumber = 3;
    private bool hasFullJid;
    private string fullJid_ = "";
    public bool HasFullJid {
      get { return hasFullJid; }
    }
    public string FullJid {
      get { return fullJid_; }
    }
    
    public const int TimeoutSecsFieldNumber = 4;
    private bool hasTimeoutSecs;
    private ulong timeoutSecs_;
    public bool HasTimeoutSecs {
      get { return hasTimeoutSecs; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TimeoutSecs {
      get { return timeoutSecs_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setActiveClientRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasIsActive) {
        output.WriteBool(2, field_names[1], IsActive);
      }
      if (hasFullJid) {
        output.WriteString(3, field_names[0], FullJid);
      }
      if (hasTimeoutSecs) {
        output.WriteUInt64(4, field_names[3], TimeoutSecs);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasIsActive) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsActive);
      }
      if (hasFullJid) {
        size += pb::CodedOutputStream.ComputeStringSize(3, FullJid);
      }
      if (hasTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, TimeoutSecs);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetActiveClientRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetActiveClientRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetActiveClientRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetActiveClientRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetActiveClientRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetActiveClientRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetActiveClientRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetActiveClientRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetActiveClientRequest result;
      
      private SetActiveClientRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetActiveClientRequest original = result;
          result = new SetActiveClientRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetActiveClientRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetActiveClientRequest.Descriptor; }
      }
      
      public override SetActiveClientRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SetActiveClientRequest.DefaultInstance; }
      }
      
      public override SetActiveClientRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetActiveClientRequest) {
          return MergeFrom((SetActiveClientRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetActiveClientRequest other) {
        if (other == global::Hangups.Proto.SetActiveClientRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasIsActive) {
          IsActive = other.IsActive;
        }
        if (other.HasFullJid) {
          FullJid = other.FullJid;
        }
        if (other.HasTimeoutSecs) {
          TimeoutSecs = other.TimeoutSecs;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setActiveClientRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setActiveClientRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasIsActive = input.ReadBool(ref result.isActive_);
              break;
            }
            case 26: {
              result.hasFullJid = input.ReadString(ref result.fullJid_);
              break;
            }
            case 32: {
              result.hasTimeoutSecs = input.ReadUInt64(ref result.timeoutSecs_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasIsActive {
        get { return result.hasIsActive; }
      }
      public bool IsActive {
        get { return result.IsActive; }
        set { SetIsActive(value); }
      }
      public Builder SetIsActive(bool value) {
        PrepareBuilder();
        result.hasIsActive = true;
        result.isActive_ = value;
        return this;
      }
      public Builder ClearIsActive() {
        PrepareBuilder();
        result.hasIsActive = false;
        result.isActive_ = false;
        return this;
      }
      
      public bool HasFullJid {
        get { return result.hasFullJid; }
      }
      public string FullJid {
        get { return result.FullJid; }
        set { SetFullJid(value); }
      }
      public Builder SetFullJid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFullJid = true;
        result.fullJid_ = value;
        return this;
      }
      public Builder ClearFullJid() {
        PrepareBuilder();
        result.hasFullJid = false;
        result.fullJid_ = "";
        return this;
      }
      
      public bool HasTimeoutSecs {
        get { return result.hasTimeoutSecs; }
      }
      [global::System.CLSCompliant(false)]
      public ulong TimeoutSecs {
        get { return result.TimeoutSecs; }
        set { SetTimeoutSecs(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimeoutSecs(ulong value) {
        PrepareBuilder();
        result.hasTimeoutSecs = true;
        result.timeoutSecs_ = value;
        return this;
      }
      public Builder ClearTimeoutSecs() {
        PrepareBuilder();
        result.hasTimeoutSecs = false;
        result.timeoutSecs_ = 0UL;
        return this;
      }
    }
    static SetActiveClientRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetActiveClientResponse : pb::GeneratedMessage<SetActiveClientResponse, SetActiveClientResponse.Builder> {
    private SetActiveClientResponse() { }
    private static readonly SetActiveClientResponse defaultInstance = new SetActiveClientResponse().MakeReadOnly();
    private static readonly string[] _setActiveClientResponseFieldNames = new string[] { "response_header" };
    private static readonly uint[] _setActiveClientResponseFieldTags = new uint[] { 10 };
    public static SetActiveClientResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetActiveClientResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetActiveClientResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetActiveClientResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetActiveClientResponse, SetActiveClientResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetActiveClientResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setActiveClientResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetActiveClientResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetActiveClientResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetActiveClientResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetActiveClientResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetActiveClientResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetActiveClientResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetActiveClientResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetActiveClientResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetActiveClientResponse result;
      
      private SetActiveClientResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SetActiveClientResponse original = result;
          result = new SetActiveClientResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetActiveClientResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetActiveClientResponse.Descriptor; }
      }
      
      public override SetActiveClientResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SetActiveClientResponse.DefaultInstance; }
      }
      
      public override SetActiveClientResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetActiveClientResponse) {
          return MergeFrom((SetActiveClientResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetActiveClientResponse other) {
        if (other == global::Hangups.Proto.SetActiveClientResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setActiveClientResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setActiveClientResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
    }
    static SetActiveClientResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationLevelRequest : pb::GeneratedMessage<SetConversationLevelRequest, SetConversationLevelRequest.Builder> {
    private SetConversationLevelRequest() { }
    private static readonly SetConversationLevelRequest defaultInstance = new SetConversationLevelRequest().MakeReadOnly();
    private static readonly string[] _setConversationLevelRequestFieldNames = new string[] { "request_header" };
    private static readonly uint[] _setConversationLevelRequestFieldTags = new uint[] { 10 };
    public static SetConversationLevelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetConversationLevelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetConversationLevelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationLevelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetConversationLevelRequest, SetConversationLevelRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationLevelRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setConversationLevelRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[0], RequestHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetConversationLevelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetConversationLevelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationLevelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetConversationLevelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetConversationLevelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetConversationLevelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetConversationLevelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetConversationLevelRequest result;
      
      private SetConversationLevelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetConversationLevelRequest original = result;
          result = new SetConversationLevelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetConversationLevelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetConversationLevelRequest.Descriptor; }
      }
      
      public override SetConversationLevelRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SetConversationLevelRequest.DefaultInstance; }
      }
      
      public override SetConversationLevelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetConversationLevelRequest) {
          return MergeFrom((SetConversationLevelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetConversationLevelRequest other) {
        if (other == global::Hangups.Proto.SetConversationLevelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setConversationLevelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setConversationLevelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
    }
    static SetConversationLevelRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationLevelResponse : pb::GeneratedMessage<SetConversationLevelResponse, SetConversationLevelResponse.Builder> {
    private SetConversationLevelResponse() { }
    private static readonly SetConversationLevelResponse defaultInstance = new SetConversationLevelResponse().MakeReadOnly();
    private static readonly string[] _setConversationLevelResponseFieldNames = new string[] { "response_header" };
    private static readonly uint[] _setConversationLevelResponseFieldTags = new uint[] { 10 };
    public static SetConversationLevelResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetConversationLevelResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetConversationLevelResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationLevelResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetConversationLevelResponse, SetConversationLevelResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationLevelResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setConversationLevelResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetConversationLevelResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetConversationLevelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationLevelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetConversationLevelResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetConversationLevelResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetConversationLevelResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetConversationLevelResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetConversationLevelResponse result;
      
      private SetConversationLevelResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SetConversationLevelResponse original = result;
          result = new SetConversationLevelResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetConversationLevelResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetConversationLevelResponse.Descriptor; }
      }
      
      public override SetConversationLevelResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SetConversationLevelResponse.DefaultInstance; }
      }
      
      public override SetConversationLevelResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetConversationLevelResponse) {
          return MergeFrom((SetConversationLevelResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetConversationLevelResponse other) {
        if (other == global::Hangups.Proto.SetConversationLevelResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setConversationLevelResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setConversationLevelResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
    }
    static SetConversationLevelResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationNotificationLevelRequest : pb::GeneratedMessage<SetConversationNotificationLevelRequest, SetConversationNotificationLevelRequest.Builder> {
    private SetConversationNotificationLevelRequest() { }
    private static readonly SetConversationNotificationLevelRequest defaultInstance = new SetConversationNotificationLevelRequest().MakeReadOnly();
    private static readonly string[] _setConversationNotificationLevelRequestFieldNames = new string[] { "conversation_id", "level", "request_header" };
    private static readonly uint[] _setConversationNotificationLevelRequestFieldTags = new uint[] { 18, 24, 10 };
    public static SetConversationNotificationLevelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetConversationNotificationLevelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetConversationNotificationLevelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationNotificationLevelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetConversationNotificationLevelRequest, SetConversationNotificationLevelRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationNotificationLevelRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int LevelFieldNumber = 3;
    private bool hasLevel;
    private global::Hangups.Proto.NotificationLevel level_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public global::Hangups.Proto.NotificationLevel Level {
      get { return level_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setConversationNotificationLevelRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasLevel) {
        output.WriteEnum(3, field_names[1], (int) Level, Level);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Level);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetConversationNotificationLevelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationNotificationLevelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetConversationNotificationLevelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetConversationNotificationLevelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetConversationNotificationLevelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetConversationNotificationLevelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetConversationNotificationLevelRequest result;
      
      private SetConversationNotificationLevelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetConversationNotificationLevelRequest original = result;
          result = new SetConversationNotificationLevelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetConversationNotificationLevelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetConversationNotificationLevelRequest.Descriptor; }
      }
      
      public override SetConversationNotificationLevelRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SetConversationNotificationLevelRequest.DefaultInstance; }
      }
      
      public override SetConversationNotificationLevelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetConversationNotificationLevelRequest) {
          return MergeFrom((SetConversationNotificationLevelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetConversationNotificationLevelRequest other) {
        if (other == global::Hangups.Proto.SetConversationNotificationLevelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setConversationNotificationLevelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setConversationNotificationLevelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.level_, out unknown)) {
                result.hasLevel = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasLevel {
       get { return result.hasLevel; }
      }
      public global::Hangups.Proto.NotificationLevel Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(global::Hangups.Proto.NotificationLevel value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = global::Hangups.Proto.NotificationLevel.NOTIFICATION_LEVEL_UNKNOWN;
        return this;
      }
    }
    static SetConversationNotificationLevelRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetConversationNotificationLevelResponse : pb::GeneratedMessage<SetConversationNotificationLevelResponse, SetConversationNotificationLevelResponse.Builder> {
    private SetConversationNotificationLevelResponse() { }
    private static readonly SetConversationNotificationLevelResponse defaultInstance = new SetConversationNotificationLevelResponse().MakeReadOnly();
    private static readonly string[] _setConversationNotificationLevelResponseFieldNames = new string[] { "response_header", "timestamp" };
    private static readonly uint[] _setConversationNotificationLevelResponseFieldTags = new uint[] { 10, 16 };
    public static SetConversationNotificationLevelResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetConversationNotificationLevelResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetConversationNotificationLevelResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationNotificationLevelResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetConversationNotificationLevelResponse, SetConversationNotificationLevelResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetConversationNotificationLevelResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 2;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setConversationNotificationLevelResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      if (hasTimestamp) {
        output.WriteUInt64(2, field_names[1], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetConversationNotificationLevelResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetConversationNotificationLevelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetConversationNotificationLevelResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetConversationNotificationLevelResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetConversationNotificationLevelResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetConversationNotificationLevelResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetConversationNotificationLevelResponse result;
      
      private SetConversationNotificationLevelResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SetConversationNotificationLevelResponse original = result;
          result = new SetConversationNotificationLevelResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetConversationNotificationLevelResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetConversationNotificationLevelResponse.Descriptor; }
      }
      
      public override SetConversationNotificationLevelResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SetConversationNotificationLevelResponse.DefaultInstance; }
      }
      
      public override SetConversationNotificationLevelResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetConversationNotificationLevelResponse) {
          return MergeFrom((SetConversationNotificationLevelResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetConversationNotificationLevelResponse other) {
        if (other == global::Hangups.Proto.SetConversationNotificationLevelResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setConversationNotificationLevelResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setConversationNotificationLevelResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
    }
    static SetConversationNotificationLevelResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetFocusRequest : pb::GeneratedMessage<SetFocusRequest, SetFocusRequest.Builder> {
    private SetFocusRequest() { }
    private static readonly SetFocusRequest defaultInstance = new SetFocusRequest().MakeReadOnly();
    private static readonly string[] _setFocusRequestFieldNames = new string[] { "conversation_id", "request_header", "timeout_secs", "type" };
    private static readonly uint[] _setFocusRequestFieldTags = new uint[] { 18, 10, 32, 24 };
    public static SetFocusRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetFocusRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetFocusRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetFocusRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetFocusRequest, SetFocusRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetFocusRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private global::Hangups.Proto.FocusType type_ = global::Hangups.Proto.FocusType.FOCUS_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.FocusType Type {
      get { return type_; }
    }
    
    public const int TimeoutSecsFieldNumber = 4;
    private bool hasTimeoutSecs;
    private uint timeoutSecs_;
    public bool HasTimeoutSecs {
      get { return hasTimeoutSecs; }
    }
    [global::System.CLSCompliant(false)]
    public uint TimeoutSecs {
      get { return timeoutSecs_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setFocusRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[1], RequestHeader);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasType) {
        output.WriteEnum(3, field_names[3], (int) Type, Type);
      }
      if (hasTimeoutSecs) {
        output.WriteUInt32(4, field_names[2], TimeoutSecs);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Type);
      }
      if (hasTimeoutSecs) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, TimeoutSecs);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetFocusRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetFocusRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetFocusRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetFocusRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetFocusRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetFocusRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetFocusRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetFocusRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetFocusRequest result;
      
      private SetFocusRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetFocusRequest original = result;
          result = new SetFocusRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetFocusRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetFocusRequest.Descriptor; }
      }
      
      public override SetFocusRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SetFocusRequest.DefaultInstance; }
      }
      
      public override SetFocusRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetFocusRequest) {
          return MergeFrom((SetFocusRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetFocusRequest other) {
        if (other == global::Hangups.Proto.SetFocusRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasTimeoutSecs) {
          TimeoutSecs = other.TimeoutSecs;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setFocusRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setFocusRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasTimeoutSecs = input.ReadUInt32(ref result.timeoutSecs_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.FocusType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.FocusType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.FocusType.FOCUS_TYPE_UNKNOWN;
        return this;
      }
      
      public bool HasTimeoutSecs {
        get { return result.hasTimeoutSecs; }
      }
      [global::System.CLSCompliant(false)]
      public uint TimeoutSecs {
        get { return result.TimeoutSecs; }
        set { SetTimeoutSecs(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimeoutSecs(uint value) {
        PrepareBuilder();
        result.hasTimeoutSecs = true;
        result.timeoutSecs_ = value;
        return this;
      }
      public Builder ClearTimeoutSecs() {
        PrepareBuilder();
        result.hasTimeoutSecs = false;
        result.timeoutSecs_ = 0;
        return this;
      }
    }
    static SetFocusRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetFocusResponse : pb::GeneratedMessage<SetFocusResponse, SetFocusResponse.Builder> {
    private SetFocusResponse() { }
    private static readonly SetFocusResponse defaultInstance = new SetFocusResponse().MakeReadOnly();
    private static readonly string[] _setFocusResponseFieldNames = new string[] { "response_header", "timestamp" };
    private static readonly uint[] _setFocusResponseFieldTags = new uint[] { 10, 16 };
    public static SetFocusResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetFocusResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetFocusResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetFocusResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetFocusResponse, SetFocusResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetFocusResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 2;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setFocusResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      if (hasTimestamp) {
        output.WriteUInt64(2, field_names[1], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetFocusResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetFocusResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetFocusResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetFocusResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetFocusResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetFocusResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetFocusResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetFocusResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetFocusResponse result;
      
      private SetFocusResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SetFocusResponse original = result;
          result = new SetFocusResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetFocusResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetFocusResponse.Descriptor; }
      }
      
      public override SetFocusResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SetFocusResponse.DefaultInstance; }
      }
      
      public override SetFocusResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetFocusResponse) {
          return MergeFrom((SetFocusResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetFocusResponse other) {
        if (other == global::Hangups.Proto.SetFocusResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setFocusResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setFocusResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
    }
    static SetFocusResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetPresenceRequest : pb::GeneratedMessage<SetPresenceRequest, SetPresenceRequest.Builder> {
    private SetPresenceRequest() { }
    private static readonly SetPresenceRequest defaultInstance = new SetPresenceRequest().MakeReadOnly();
    private static readonly string[] _setPresenceRequestFieldNames = new string[] { "desktop_off_setting", "dnd_setting", "mood_setting", "presence_state_setting", "request_header" };
    private static readonly uint[] _setPresenceRequestFieldTags = new uint[] { 42, 26, 66, 18, 10 };
    public static SetPresenceRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetPresenceRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetPresenceRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetPresenceRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetPresenceRequest, SetPresenceRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetPresenceRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int PresenceStateSettingFieldNumber = 2;
    private bool hasPresenceStateSetting;
    private global::Hangups.Proto.PresenceStateSetting presenceStateSetting_;
    public bool HasPresenceStateSetting {
      get { return hasPresenceStateSetting; }
    }
    public global::Hangups.Proto.PresenceStateSetting PresenceStateSetting {
      get { return presenceStateSetting_ ?? global::Hangups.Proto.PresenceStateSetting.DefaultInstance; }
    }
    
    public const int DndSettingFieldNumber = 3;
    private bool hasDndSetting;
    private global::Hangups.Proto.DndSetting dndSetting_;
    public bool HasDndSetting {
      get { return hasDndSetting; }
    }
    public global::Hangups.Proto.DndSetting DndSetting {
      get { return dndSetting_ ?? global::Hangups.Proto.DndSetting.DefaultInstance; }
    }
    
    public const int DesktopOffSettingFieldNumber = 5;
    private bool hasDesktopOffSetting;
    private global::Hangups.Proto.DesktopOffSetting desktopOffSetting_;
    public bool HasDesktopOffSetting {
      get { return hasDesktopOffSetting; }
    }
    public global::Hangups.Proto.DesktopOffSetting DesktopOffSetting {
      get { return desktopOffSetting_ ?? global::Hangups.Proto.DesktopOffSetting.DefaultInstance; }
    }
    
    public const int MoodSettingFieldNumber = 8;
    private bool hasMoodSetting;
    private global::Hangups.Proto.MoodSetting moodSetting_;
    public bool HasMoodSetting {
      get { return hasMoodSetting; }
    }
    public global::Hangups.Proto.MoodSetting MoodSetting {
      get { return moodSetting_ ?? global::Hangups.Proto.MoodSetting.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMoodSetting) {
          if (!MoodSetting.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setPresenceRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[4], RequestHeader);
      }
      if (hasPresenceStateSetting) {
        output.WriteMessage(2, field_names[3], PresenceStateSetting);
      }
      if (hasDndSetting) {
        output.WriteMessage(3, field_names[1], DndSetting);
      }
      if (hasDesktopOffSetting) {
        output.WriteMessage(5, field_names[0], DesktopOffSetting);
      }
      if (hasMoodSetting) {
        output.WriteMessage(8, field_names[2], MoodSetting);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasPresenceStateSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, PresenceStateSetting);
      }
      if (hasDndSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, DndSetting);
      }
      if (hasDesktopOffSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, DesktopOffSetting);
      }
      if (hasMoodSetting) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, MoodSetting);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetPresenceRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetPresenceRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetPresenceRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetPresenceRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetPresenceRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetPresenceRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetPresenceRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetPresenceRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetPresenceRequest result;
      
      private SetPresenceRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetPresenceRequest original = result;
          result = new SetPresenceRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetPresenceRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetPresenceRequest.Descriptor; }
      }
      
      public override SetPresenceRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SetPresenceRequest.DefaultInstance; }
      }
      
      public override SetPresenceRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetPresenceRequest) {
          return MergeFrom((SetPresenceRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetPresenceRequest other) {
        if (other == global::Hangups.Proto.SetPresenceRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasPresenceStateSetting) {
          MergePresenceStateSetting(other.PresenceStateSetting);
        }
        if (other.HasDndSetting) {
          MergeDndSetting(other.DndSetting);
        }
        if (other.HasDesktopOffSetting) {
          MergeDesktopOffSetting(other.DesktopOffSetting);
        }
        if (other.HasMoodSetting) {
          MergeMoodSetting(other.MoodSetting);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setPresenceRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setPresenceRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.PresenceStateSetting.Builder subBuilder = global::Hangups.Proto.PresenceStateSetting.CreateBuilder();
              if (result.hasPresenceStateSetting) {
                subBuilder.MergeFrom(PresenceStateSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PresenceStateSetting = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::Hangups.Proto.DndSetting.Builder subBuilder = global::Hangups.Proto.DndSetting.CreateBuilder();
              if (result.hasDndSetting) {
                subBuilder.MergeFrom(DndSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DndSetting = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::Hangups.Proto.DesktopOffSetting.Builder subBuilder = global::Hangups.Proto.DesktopOffSetting.CreateBuilder();
              if (result.hasDesktopOffSetting) {
                subBuilder.MergeFrom(DesktopOffSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DesktopOffSetting = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::Hangups.Proto.MoodSetting.Builder subBuilder = global::Hangups.Proto.MoodSetting.CreateBuilder();
              if (result.hasMoodSetting) {
                subBuilder.MergeFrom(MoodSetting);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MoodSetting = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasPresenceStateSetting {
       get { return result.hasPresenceStateSetting; }
      }
      public global::Hangups.Proto.PresenceStateSetting PresenceStateSetting {
        get { return result.PresenceStateSetting; }
        set { SetPresenceStateSetting(value); }
      }
      public Builder SetPresenceStateSetting(global::Hangups.Proto.PresenceStateSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPresenceStateSetting = true;
        result.presenceStateSetting_ = value;
        return this;
      }
      public Builder SetPresenceStateSetting(global::Hangups.Proto.PresenceStateSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPresenceStateSetting = true;
        result.presenceStateSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergePresenceStateSetting(global::Hangups.Proto.PresenceStateSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPresenceStateSetting &&
            result.presenceStateSetting_ != global::Hangups.Proto.PresenceStateSetting.DefaultInstance) {
            result.presenceStateSetting_ = global::Hangups.Proto.PresenceStateSetting.CreateBuilder(result.presenceStateSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.presenceStateSetting_ = value;
        }
        result.hasPresenceStateSetting = true;
        return this;
      }
      public Builder ClearPresenceStateSetting() {
        PrepareBuilder();
        result.hasPresenceStateSetting = false;
        result.presenceStateSetting_ = null;
        return this;
      }
      
      public bool HasDndSetting {
       get { return result.hasDndSetting; }
      }
      public global::Hangups.Proto.DndSetting DndSetting {
        get { return result.DndSetting; }
        set { SetDndSetting(value); }
      }
      public Builder SetDndSetting(global::Hangups.Proto.DndSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDndSetting = true;
        result.dndSetting_ = value;
        return this;
      }
      public Builder SetDndSetting(global::Hangups.Proto.DndSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDndSetting = true;
        result.dndSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDndSetting(global::Hangups.Proto.DndSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDndSetting &&
            result.dndSetting_ != global::Hangups.Proto.DndSetting.DefaultInstance) {
            result.dndSetting_ = global::Hangups.Proto.DndSetting.CreateBuilder(result.dndSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.dndSetting_ = value;
        }
        result.hasDndSetting = true;
        return this;
      }
      public Builder ClearDndSetting() {
        PrepareBuilder();
        result.hasDndSetting = false;
        result.dndSetting_ = null;
        return this;
      }
      
      public bool HasDesktopOffSetting {
       get { return result.hasDesktopOffSetting; }
      }
      public global::Hangups.Proto.DesktopOffSetting DesktopOffSetting {
        get { return result.DesktopOffSetting; }
        set { SetDesktopOffSetting(value); }
      }
      public Builder SetDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDesktopOffSetting = true;
        result.desktopOffSetting_ = value;
        return this;
      }
      public Builder SetDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDesktopOffSetting = true;
        result.desktopOffSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDesktopOffSetting(global::Hangups.Proto.DesktopOffSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDesktopOffSetting &&
            result.desktopOffSetting_ != global::Hangups.Proto.DesktopOffSetting.DefaultInstance) {
            result.desktopOffSetting_ = global::Hangups.Proto.DesktopOffSetting.CreateBuilder(result.desktopOffSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.desktopOffSetting_ = value;
        }
        result.hasDesktopOffSetting = true;
        return this;
      }
      public Builder ClearDesktopOffSetting() {
        PrepareBuilder();
        result.hasDesktopOffSetting = false;
        result.desktopOffSetting_ = null;
        return this;
      }
      
      public bool HasMoodSetting {
       get { return result.hasMoodSetting; }
      }
      public global::Hangups.Proto.MoodSetting MoodSetting {
        get { return result.MoodSetting; }
        set { SetMoodSetting(value); }
      }
      public Builder SetMoodSetting(global::Hangups.Proto.MoodSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMoodSetting = true;
        result.moodSetting_ = value;
        return this;
      }
      public Builder SetMoodSetting(global::Hangups.Proto.MoodSetting.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMoodSetting = true;
        result.moodSetting_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMoodSetting(global::Hangups.Proto.MoodSetting value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMoodSetting &&
            result.moodSetting_ != global::Hangups.Proto.MoodSetting.DefaultInstance) {
            result.moodSetting_ = global::Hangups.Proto.MoodSetting.CreateBuilder(result.moodSetting_).MergeFrom(value).BuildPartial();
        } else {
          result.moodSetting_ = value;
        }
        result.hasMoodSetting = true;
        return this;
      }
      public Builder ClearMoodSetting() {
        PrepareBuilder();
        result.hasMoodSetting = false;
        result.moodSetting_ = null;
        return this;
      }
    }
    static SetPresenceRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetPresenceResponse : pb::GeneratedMessage<SetPresenceResponse, SetPresenceResponse.Builder> {
    private SetPresenceResponse() { }
    private static readonly SetPresenceResponse defaultInstance = new SetPresenceResponse().MakeReadOnly();
    private static readonly string[] _setPresenceResponseFieldNames = new string[] { "response_header" };
    private static readonly uint[] _setPresenceResponseFieldTags = new uint[] { 10 };
    public static SetPresenceResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetPresenceResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetPresenceResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetPresenceResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetPresenceResponse, SetPresenceResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetPresenceResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setPresenceResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetPresenceResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetPresenceResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetPresenceResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetPresenceResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetPresenceResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetPresenceResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetPresenceResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetPresenceResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetPresenceResponse result;
      
      private SetPresenceResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SetPresenceResponse original = result;
          result = new SetPresenceResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetPresenceResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetPresenceResponse.Descriptor; }
      }
      
      public override SetPresenceResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SetPresenceResponse.DefaultInstance; }
      }
      
      public override SetPresenceResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetPresenceResponse) {
          return MergeFrom((SetPresenceResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetPresenceResponse other) {
        if (other == global::Hangups.Proto.SetPresenceResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setPresenceResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setPresenceResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
    }
    static SetPresenceResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetTypingRequest : pb::GeneratedMessage<SetTypingRequest, SetTypingRequest.Builder> {
    private SetTypingRequest() { }
    private static readonly SetTypingRequest defaultInstance = new SetTypingRequest().MakeReadOnly();
    private static readonly string[] _setTypingRequestFieldNames = new string[] { "conversation_id", "request_header", "type" };
    private static readonly uint[] _setTypingRequestFieldTags = new uint[] { 18, 10, 24 };
    public static SetTypingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetTypingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetTypingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetTypingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetTypingRequest, SetTypingRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetTypingRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private global::Hangups.Proto.TypingType type_ = global::Hangups.Proto.TypingType.TYPING_TYPE_UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::Hangups.Proto.TypingType Type {
      get { return type_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setTypingRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[1], RequestHeader);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasType) {
        output.WriteEnum(3, field_names[2], (int) Type, Type);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Type);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetTypingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetTypingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetTypingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetTypingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetTypingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetTypingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetTypingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetTypingRequest result;
      
      private SetTypingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SetTypingRequest original = result;
          result = new SetTypingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetTypingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetTypingRequest.Descriptor; }
      }
      
      public override SetTypingRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SetTypingRequest.DefaultInstance; }
      }
      
      public override SetTypingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetTypingRequest) {
          return MergeFrom((SetTypingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetTypingRequest other) {
        if (other == global::Hangups.Proto.SetTypingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setTypingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setTypingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Hangups.Proto.TypingType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Hangups.Proto.TypingType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::Hangups.Proto.TypingType.TYPING_TYPE_UNKNOWN;
        return this;
      }
    }
    static SetTypingRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetTypingResponse : pb::GeneratedMessage<SetTypingResponse, SetTypingResponse.Builder> {
    private SetTypingResponse() { }
    private static readonly SetTypingResponse defaultInstance = new SetTypingResponse().MakeReadOnly();
    private static readonly string[] _setTypingResponseFieldNames = new string[] { "response_header", "timestamp" };
    private static readonly uint[] _setTypingResponseFieldTags = new uint[] { 10, 16 };
    public static SetTypingResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetTypingResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetTypingResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetTypingResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetTypingResponse, SetTypingResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SetTypingResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int TimestampFieldNumber = 2;
    private bool hasTimestamp;
    private ulong timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setTypingResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      if (hasTimestamp) {
        output.WriteUInt64(2, field_names[1], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetTypingResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetTypingResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetTypingResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetTypingResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetTypingResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetTypingResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetTypingResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetTypingResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetTypingResponse result;
      
      private SetTypingResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SetTypingResponse original = result;
          result = new SetTypingResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetTypingResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SetTypingResponse.Descriptor; }
      }
      
      public override SetTypingResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SetTypingResponse.DefaultInstance; }
      }
      
      public override SetTypingResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetTypingResponse) {
          return MergeFrom((SetTypingResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetTypingResponse other) {
        if (other == global::Hangups.Proto.SetTypingResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setTypingResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setTypingResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTimestamp = input.ReadUInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTimestamp(ulong value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0UL;
        return this;
      }
    }
    static SetTypingResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncAllNewEventsRequest : pb::GeneratedMessage<SyncAllNewEventsRequest, SyncAllNewEventsRequest.Builder> {
    private SyncAllNewEventsRequest() { }
    private static readonly SyncAllNewEventsRequest defaultInstance = new SyncAllNewEventsRequest().MakeReadOnly();
    private static readonly string[] _syncAllNewEventsRequestFieldNames = new string[] { "last_sync_timestamp", "max_response_size_bytes", "request_header" };
    private static readonly uint[] _syncAllNewEventsRequestFieldTags = new uint[] { 16, 64, 10 };
    public static SyncAllNewEventsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncAllNewEventsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncAllNewEventsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncAllNewEventsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncAllNewEventsRequest, SyncAllNewEventsRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncAllNewEventsRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int LastSyncTimestampFieldNumber = 2;
    private bool hasLastSyncTimestamp;
    private ulong lastSyncTimestamp_;
    public bool HasLastSyncTimestamp {
      get { return hasLastSyncTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong LastSyncTimestamp {
      get { return lastSyncTimestamp_; }
    }
    
    public const int MaxResponseSizeBytesFieldNumber = 8;
    private bool hasMaxResponseSizeBytes;
    private ulong maxResponseSizeBytes_;
    public bool HasMaxResponseSizeBytes {
      get { return hasMaxResponseSizeBytes; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxResponseSizeBytes {
      get { return maxResponseSizeBytes_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncAllNewEventsRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasLastSyncTimestamp) {
        output.WriteUInt64(2, field_names[0], LastSyncTimestamp);
      }
      if (hasMaxResponseSizeBytes) {
        output.WriteUInt64(8, field_names[1], MaxResponseSizeBytes);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasLastSyncTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, LastSyncTimestamp);
      }
      if (hasMaxResponseSizeBytes) {
        size += pb::CodedOutputStream.ComputeUInt64Size(8, MaxResponseSizeBytes);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyncAllNewEventsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncAllNewEventsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncAllNewEventsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncAllNewEventsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncAllNewEventsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncAllNewEventsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncAllNewEventsRequest result;
      
      private SyncAllNewEventsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncAllNewEventsRequest original = result;
          result = new SyncAllNewEventsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncAllNewEventsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SyncAllNewEventsRequest.Descriptor; }
      }
      
      public override SyncAllNewEventsRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SyncAllNewEventsRequest.DefaultInstance; }
      }
      
      public override SyncAllNewEventsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncAllNewEventsRequest) {
          return MergeFrom((SyncAllNewEventsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncAllNewEventsRequest other) {
        if (other == global::Hangups.Proto.SyncAllNewEventsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasLastSyncTimestamp) {
          LastSyncTimestamp = other.LastSyncTimestamp;
        }
        if (other.HasMaxResponseSizeBytes) {
          MaxResponseSizeBytes = other.MaxResponseSizeBytes;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncAllNewEventsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncAllNewEventsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasLastSyncTimestamp = input.ReadUInt64(ref result.lastSyncTimestamp_);
              break;
            }
            case 64: {
              result.hasMaxResponseSizeBytes = input.ReadUInt64(ref result.maxResponseSizeBytes_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasLastSyncTimestamp {
        get { return result.hasLastSyncTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong LastSyncTimestamp {
        get { return result.LastSyncTimestamp; }
        set { SetLastSyncTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLastSyncTimestamp(ulong value) {
        PrepareBuilder();
        result.hasLastSyncTimestamp = true;
        result.lastSyncTimestamp_ = value;
        return this;
      }
      public Builder ClearLastSyncTimestamp() {
        PrepareBuilder();
        result.hasLastSyncTimestamp = false;
        result.lastSyncTimestamp_ = 0UL;
        return this;
      }
      
      public bool HasMaxResponseSizeBytes {
        get { return result.hasMaxResponseSizeBytes; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MaxResponseSizeBytes {
        get { return result.MaxResponseSizeBytes; }
        set { SetMaxResponseSizeBytes(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxResponseSizeBytes(ulong value) {
        PrepareBuilder();
        result.hasMaxResponseSizeBytes = true;
        result.maxResponseSizeBytes_ = value;
        return this;
      }
      public Builder ClearMaxResponseSizeBytes() {
        PrepareBuilder();
        result.hasMaxResponseSizeBytes = false;
        result.maxResponseSizeBytes_ = 0UL;
        return this;
      }
    }
    static SyncAllNewEventsRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncAllNewEventsResponse : pb::GeneratedMessage<SyncAllNewEventsResponse, SyncAllNewEventsResponse.Builder> {
    private SyncAllNewEventsResponse() { }
    private static readonly SyncAllNewEventsResponse defaultInstance = new SyncAllNewEventsResponse().MakeReadOnly();
    private static readonly string[] _syncAllNewEventsResponseFieldNames = new string[] { "conversation_state", "response_header", "sync_timestamp" };
    private static readonly uint[] _syncAllNewEventsResponseFieldTags = new uint[] { 26, 10, 16 };
    public static SyncAllNewEventsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncAllNewEventsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncAllNewEventsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncAllNewEventsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncAllNewEventsResponse, SyncAllNewEventsResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncAllNewEventsResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int SyncTimestampFieldNumber = 2;
    private bool hasSyncTimestamp;
    private ulong syncTimestamp_;
    public bool HasSyncTimestamp {
      get { return hasSyncTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SyncTimestamp {
      get { return syncTimestamp_; }
    }
    
    public const int ConversationStateFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.ConversationState> conversationState_ = new pbc::PopsicleList<global::Hangups.Proto.ConversationState>();
    public scg::IList<global::Hangups.Proto.ConversationState> ConversationStateList {
      get { return conversationState_; }
    }
    public int ConversationStateCount {
      get { return conversationState_.Count; }
    }
    public global::Hangups.Proto.ConversationState GetConversationState(int index) {
      return conversationState_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.ConversationState element in ConversationStateList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncAllNewEventsResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasSyncTimestamp) {
        output.WriteUInt64(2, field_names[2], SyncTimestamp);
      }
      if (conversationState_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], conversationState_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasSyncTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, SyncTimestamp);
      }
      foreach (global::Hangups.Proto.ConversationState element in ConversationStateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyncAllNewEventsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncAllNewEventsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncAllNewEventsResponse MakeReadOnly() {
      conversationState_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncAllNewEventsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncAllNewEventsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncAllNewEventsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncAllNewEventsResponse result;
      
      private SyncAllNewEventsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncAllNewEventsResponse original = result;
          result = new SyncAllNewEventsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncAllNewEventsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SyncAllNewEventsResponse.Descriptor; }
      }
      
      public override SyncAllNewEventsResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SyncAllNewEventsResponse.DefaultInstance; }
      }
      
      public override SyncAllNewEventsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncAllNewEventsResponse) {
          return MergeFrom((SyncAllNewEventsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncAllNewEventsResponse other) {
        if (other == global::Hangups.Proto.SyncAllNewEventsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasSyncTimestamp) {
          SyncTimestamp = other.SyncTimestamp;
        }
        if (other.conversationState_.Count != 0) {
          result.conversationState_.Add(other.conversationState_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncAllNewEventsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncAllNewEventsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasSyncTimestamp = input.ReadUInt64(ref result.syncTimestamp_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.conversationState_, global::Hangups.Proto.ConversationState.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasSyncTimestamp {
        get { return result.hasSyncTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong SyncTimestamp {
        get { return result.SyncTimestamp; }
        set { SetSyncTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSyncTimestamp(ulong value) {
        PrepareBuilder();
        result.hasSyncTimestamp = true;
        result.syncTimestamp_ = value;
        return this;
      }
      public Builder ClearSyncTimestamp() {
        PrepareBuilder();
        result.hasSyncTimestamp = false;
        result.syncTimestamp_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ConversationState> ConversationStateList {
        get { return PrepareBuilder().conversationState_; }
      }
      public int ConversationStateCount {
        get { return result.ConversationStateCount; }
      }
      public global::Hangups.Proto.ConversationState GetConversationState(int index) {
        return result.GetConversationState(index);
      }
      public Builder SetConversationState(int index, global::Hangups.Proto.ConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.conversationState_[index] = value;
        return this;
      }
      public Builder SetConversationState(int index, global::Hangups.Proto.ConversationState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.conversationState_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConversationState(global::Hangups.Proto.ConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.conversationState_.Add(value);
        return this;
      }
      public Builder AddConversationState(global::Hangups.Proto.ConversationState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.conversationState_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConversationState(scg::IEnumerable<global::Hangups.Proto.ConversationState> values) {
        PrepareBuilder();
        result.conversationState_.Add(values);
        return this;
      }
      public Builder ClearConversationState() {
        PrepareBuilder();
        result.conversationState_.Clear();
        return this;
      }
    }
    static SyncAllNewEventsResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncRecentConversationsRequest : pb::GeneratedMessage<SyncRecentConversationsRequest, SyncRecentConversationsRequest.Builder> {
    private SyncRecentConversationsRequest() { }
    private static readonly SyncRecentConversationsRequest defaultInstance = new SyncRecentConversationsRequest().MakeReadOnly();
    private static readonly string[] _syncRecentConversationsRequestFieldNames = new string[] { "max_conversations", "max_events_per_conversation", "request_header", "sync_filter" };
    private static readonly uint[] _syncRecentConversationsRequestFieldTags = new uint[] { 24, 32, 10, 40 };
    public static SyncRecentConversationsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncRecentConversationsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncRecentConversationsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncRecentConversationsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncRecentConversationsRequest, SyncRecentConversationsRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncRecentConversationsRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int MaxConversationsFieldNumber = 3;
    private bool hasMaxConversations;
    private ulong maxConversations_;
    public bool HasMaxConversations {
      get { return hasMaxConversations; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxConversations {
      get { return maxConversations_; }
    }
    
    public const int MaxEventsPerConversationFieldNumber = 4;
    private bool hasMaxEventsPerConversation;
    private ulong maxEventsPerConversation_;
    public bool HasMaxEventsPerConversation {
      get { return hasMaxEventsPerConversation; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxEventsPerConversation {
      get { return maxEventsPerConversation_; }
    }
    
    public const int SyncFilterFieldNumber = 5;
    private pbc::PopsicleList<global::Hangups.Proto.SyncFilter> syncFilter_ = new pbc::PopsicleList<global::Hangups.Proto.SyncFilter>();
    public scg::IList<global::Hangups.Proto.SyncFilter> SyncFilterList {
      get { return pbc::Lists.AsReadOnly(syncFilter_); }
    }
    public int SyncFilterCount {
      get { return syncFilter_.Count; }
    }
    public global::Hangups.Proto.SyncFilter GetSyncFilter(int index) {
      return syncFilter_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncRecentConversationsRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasMaxConversations) {
        output.WriteUInt64(3, field_names[0], MaxConversations);
      }
      if (hasMaxEventsPerConversation) {
        output.WriteUInt64(4, field_names[1], MaxEventsPerConversation);
      }
      if (syncFilter_.Count > 0) {
        output.WriteEnumArray(5, field_names[3], syncFilter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasMaxConversations) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, MaxConversations);
      }
      if (hasMaxEventsPerConversation) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, MaxEventsPerConversation);
      }
      {
        int dataSize = 0;
        if (syncFilter_.Count > 0) {
          foreach (global::Hangups.Proto.SyncFilter element in syncFilter_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 1 * syncFilter_.Count;
        }
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyncRecentConversationsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncRecentConversationsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncRecentConversationsRequest MakeReadOnly() {
      syncFilter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncRecentConversationsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncRecentConversationsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncRecentConversationsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncRecentConversationsRequest result;
      
      private SyncRecentConversationsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncRecentConversationsRequest original = result;
          result = new SyncRecentConversationsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncRecentConversationsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SyncRecentConversationsRequest.Descriptor; }
      }
      
      public override SyncRecentConversationsRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.SyncRecentConversationsRequest.DefaultInstance; }
      }
      
      public override SyncRecentConversationsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncRecentConversationsRequest) {
          return MergeFrom((SyncRecentConversationsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncRecentConversationsRequest other) {
        if (other == global::Hangups.Proto.SyncRecentConversationsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasMaxConversations) {
          MaxConversations = other.MaxConversations;
        }
        if (other.HasMaxEventsPerConversation) {
          MaxEventsPerConversation = other.MaxEventsPerConversation;
        }
        if (other.syncFilter_.Count != 0) {
          result.syncFilter_.Add(other.syncFilter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncRecentConversationsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncRecentConversationsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasMaxConversations = input.ReadUInt64(ref result.maxConversations_);
              break;
            }
            case 32: {
              result.hasMaxEventsPerConversation = input.ReadUInt64(ref result.maxEventsPerConversation_);
              break;
            }
            case 42:
            case 40: {
              scg::ICollection<object> unknownItems;
              input.ReadEnumArray<global::Hangups.Proto.SyncFilter>(tag, field_name, result.syncFilter_, out unknownItems);
              if (unknownItems != null) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                foreach (object rawValue in unknownItems)
                  if (rawValue is int)
                    unknownFields.MergeVarintField(5, (ulong)(int)rawValue);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasMaxConversations {
        get { return result.hasMaxConversations; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MaxConversations {
        get { return result.MaxConversations; }
        set { SetMaxConversations(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxConversations(ulong value) {
        PrepareBuilder();
        result.hasMaxConversations = true;
        result.maxConversations_ = value;
        return this;
      }
      public Builder ClearMaxConversations() {
        PrepareBuilder();
        result.hasMaxConversations = false;
        result.maxConversations_ = 0UL;
        return this;
      }
      
      public bool HasMaxEventsPerConversation {
        get { return result.hasMaxEventsPerConversation; }
      }
      [global::System.CLSCompliant(false)]
      public ulong MaxEventsPerConversation {
        get { return result.MaxEventsPerConversation; }
        set { SetMaxEventsPerConversation(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMaxEventsPerConversation(ulong value) {
        PrepareBuilder();
        result.hasMaxEventsPerConversation = true;
        result.maxEventsPerConversation_ = value;
        return this;
      }
      public Builder ClearMaxEventsPerConversation() {
        PrepareBuilder();
        result.hasMaxEventsPerConversation = false;
        result.maxEventsPerConversation_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.SyncFilter> SyncFilterList {
        get { return PrepareBuilder().syncFilter_; }
      }
      public int SyncFilterCount {
        get { return result.SyncFilterCount; }
      }
      public global::Hangups.Proto.SyncFilter GetSyncFilter(int index) {
        return result.GetSyncFilter(index);
      }
      public Builder SetSyncFilter(int index, global::Hangups.Proto.SyncFilter value) {
        PrepareBuilder();
        result.syncFilter_[index] = value;
        return this;
      }
      public Builder AddSyncFilter(global::Hangups.Proto.SyncFilter value) {
        PrepareBuilder();
        result.syncFilter_.Add(value);
        return this;
      }
      public Builder AddRangeSyncFilter(scg::IEnumerable<global::Hangups.Proto.SyncFilter> values) {
        PrepareBuilder();
        result.syncFilter_.Add(values);
        return this;
      }
      public Builder ClearSyncFilter() {
        PrepareBuilder();
        result.syncFilter_.Clear();
        return this;
      }
    }
    static SyncRecentConversationsRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyncRecentConversationsResponse : pb::GeneratedMessage<SyncRecentConversationsResponse, SyncRecentConversationsResponse.Builder> {
    private SyncRecentConversationsResponse() { }
    private static readonly SyncRecentConversationsResponse defaultInstance = new SyncRecentConversationsResponse().MakeReadOnly();
    private static readonly string[] _syncRecentConversationsResponseFieldNames = new string[] { "conversation_state", "response_header", "sync_timestamp" };
    private static readonly uint[] _syncRecentConversationsResponseFieldTags = new uint[] { 26, 10, 16 };
    public static SyncRecentConversationsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyncRecentConversationsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyncRecentConversationsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncRecentConversationsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyncRecentConversationsResponse, SyncRecentConversationsResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_SyncRecentConversationsResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public const int SyncTimestampFieldNumber = 2;
    private bool hasSyncTimestamp;
    private ulong syncTimestamp_;
    public bool HasSyncTimestamp {
      get { return hasSyncTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SyncTimestamp {
      get { return syncTimestamp_; }
    }
    
    public const int ConversationStateFieldNumber = 3;
    private pbc::PopsicleList<global::Hangups.Proto.ConversationState> conversationState_ = new pbc::PopsicleList<global::Hangups.Proto.ConversationState>();
    public scg::IList<global::Hangups.Proto.ConversationState> ConversationStateList {
      get { return conversationState_; }
    }
    public int ConversationStateCount {
      get { return conversationState_.Count; }
    }
    public global::Hangups.Proto.ConversationState GetConversationState(int index) {
      return conversationState_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Hangups.Proto.ConversationState element in ConversationStateList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syncRecentConversationsResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[1], ResponseHeader);
      }
      if (hasSyncTimestamp) {
        output.WriteUInt64(2, field_names[2], SyncTimestamp);
      }
      if (conversationState_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], conversationState_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      if (hasSyncTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, SyncTimestamp);
      }
      foreach (global::Hangups.Proto.ConversationState element in ConversationStateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyncRecentConversationsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyncRecentConversationsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyncRecentConversationsResponse MakeReadOnly() {
      conversationState_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyncRecentConversationsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyncRecentConversationsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyncRecentConversationsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyncRecentConversationsResponse result;
      
      private SyncRecentConversationsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SyncRecentConversationsResponse original = result;
          result = new SyncRecentConversationsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyncRecentConversationsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.SyncRecentConversationsResponse.Descriptor; }
      }
      
      public override SyncRecentConversationsResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.SyncRecentConversationsResponse.DefaultInstance; }
      }
      
      public override SyncRecentConversationsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyncRecentConversationsResponse) {
          return MergeFrom((SyncRecentConversationsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyncRecentConversationsResponse other) {
        if (other == global::Hangups.Proto.SyncRecentConversationsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        if (other.HasSyncTimestamp) {
          SyncTimestamp = other.SyncTimestamp;
        }
        if (other.conversationState_.Count != 0) {
          result.conversationState_.Add(other.conversationState_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syncRecentConversationsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syncRecentConversationsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasSyncTimestamp = input.ReadUInt64(ref result.syncTimestamp_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.conversationState_, global::Hangups.Proto.ConversationState.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
      
      public bool HasSyncTimestamp {
        get { return result.hasSyncTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong SyncTimestamp {
        get { return result.SyncTimestamp; }
        set { SetSyncTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSyncTimestamp(ulong value) {
        PrepareBuilder();
        result.hasSyncTimestamp = true;
        result.syncTimestamp_ = value;
        return this;
      }
      public Builder ClearSyncTimestamp() {
        PrepareBuilder();
        result.hasSyncTimestamp = false;
        result.syncTimestamp_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::Hangups.Proto.ConversationState> ConversationStateList {
        get { return PrepareBuilder().conversationState_; }
      }
      public int ConversationStateCount {
        get { return result.ConversationStateCount; }
      }
      public global::Hangups.Proto.ConversationState GetConversationState(int index) {
        return result.GetConversationState(index);
      }
      public Builder SetConversationState(int index, global::Hangups.Proto.ConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.conversationState_[index] = value;
        return this;
      }
      public Builder SetConversationState(int index, global::Hangups.Proto.ConversationState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.conversationState_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConversationState(global::Hangups.Proto.ConversationState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.conversationState_.Add(value);
        return this;
      }
      public Builder AddConversationState(global::Hangups.Proto.ConversationState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.conversationState_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConversationState(scg::IEnumerable<global::Hangups.Proto.ConversationState> values) {
        PrepareBuilder();
        result.conversationState_.Add(values);
        return this;
      }
      public Builder ClearConversationState() {
        PrepareBuilder();
        result.conversationState_.Clear();
        return this;
      }
    }
    static SyncRecentConversationsResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateWatermarkRequest : pb::GeneratedMessage<UpdateWatermarkRequest, UpdateWatermarkRequest.Builder> {
    private UpdateWatermarkRequest() { }
    private static readonly UpdateWatermarkRequest defaultInstance = new UpdateWatermarkRequest().MakeReadOnly();
    private static readonly string[] _updateWatermarkRequestFieldNames = new string[] { "conversation_id", "last_read_timestamp", "request_header" };
    private static readonly uint[] _updateWatermarkRequestFieldTags = new uint[] { 18, 24, 10 };
    public static UpdateWatermarkRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateWatermarkRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateWatermarkRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_UpdateWatermarkRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateWatermarkRequest, UpdateWatermarkRequest.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_UpdateWatermarkRequest__FieldAccessorTable; }
    }
    
    public const int RequestHeaderFieldNumber = 1;
    private bool hasRequestHeader;
    private global::Hangups.Proto.RequestHeader requestHeader_;
    public bool HasRequestHeader {
      get { return hasRequestHeader; }
    }
    public global::Hangups.Proto.RequestHeader RequestHeader {
      get { return requestHeader_ ?? global::Hangups.Proto.RequestHeader.DefaultInstance; }
    }
    
    public const int ConversationIdFieldNumber = 2;
    private bool hasConversationId;
    private global::Hangups.Proto.ConversationId conversationId_;
    public bool HasConversationId {
      get { return hasConversationId; }
    }
    public global::Hangups.Proto.ConversationId ConversationId {
      get { return conversationId_ ?? global::Hangups.Proto.ConversationId.DefaultInstance; }
    }
    
    public const int LastReadTimestampFieldNumber = 3;
    private bool hasLastReadTimestamp;
    private ulong lastReadTimestamp_;
    public bool HasLastReadTimestamp {
      get { return hasLastReadTimestamp; }
    }
    [global::System.CLSCompliant(false)]
    public ulong LastReadTimestamp {
      get { return lastReadTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateWatermarkRequestFieldNames;
      if (hasRequestHeader) {
        output.WriteMessage(1, field_names[2], RequestHeader);
      }
      if (hasConversationId) {
        output.WriteMessage(2, field_names[0], ConversationId);
      }
      if (hasLastReadTimestamp) {
        output.WriteUInt64(3, field_names[1], LastReadTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RequestHeader);
      }
      if (hasConversationId) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ConversationId);
      }
      if (hasLastReadTimestamp) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, LastReadTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateWatermarkRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateWatermarkRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateWatermarkRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateWatermarkRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateWatermarkRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateWatermarkRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateWatermarkRequest result;
      
      private UpdateWatermarkRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateWatermarkRequest original = result;
          result = new UpdateWatermarkRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateWatermarkRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.UpdateWatermarkRequest.Descriptor; }
      }
      
      public override UpdateWatermarkRequest DefaultInstanceForType {
        get { return global::Hangups.Proto.UpdateWatermarkRequest.DefaultInstance; }
      }
      
      public override UpdateWatermarkRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateWatermarkRequest) {
          return MergeFrom((UpdateWatermarkRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateWatermarkRequest other) {
        if (other == global::Hangups.Proto.UpdateWatermarkRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestHeader) {
          MergeRequestHeader(other.RequestHeader);
        }
        if (other.HasConversationId) {
          MergeConversationId(other.ConversationId);
        }
        if (other.HasLastReadTimestamp) {
          LastReadTimestamp = other.LastReadTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateWatermarkRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateWatermarkRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.RequestHeader.Builder subBuilder = global::Hangups.Proto.RequestHeader.CreateBuilder();
              if (result.hasRequestHeader) {
                subBuilder.MergeFrom(RequestHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RequestHeader = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::Hangups.Proto.ConversationId.Builder subBuilder = global::Hangups.Proto.ConversationId.CreateBuilder();
              if (result.hasConversationId) {
                subBuilder.MergeFrom(ConversationId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConversationId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasLastReadTimestamp = input.ReadUInt64(ref result.lastReadTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestHeader {
       get { return result.hasRequestHeader; }
      }
      public global::Hangups.Proto.RequestHeader RequestHeader {
        get { return result.RequestHeader; }
        set { SetRequestHeader(value); }
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = value;
        return this;
      }
      public Builder SetRequestHeader(global::Hangups.Proto.RequestHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRequestHeader = true;
        result.requestHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRequestHeader(global::Hangups.Proto.RequestHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRequestHeader &&
            result.requestHeader_ != global::Hangups.Proto.RequestHeader.DefaultInstance) {
            result.requestHeader_ = global::Hangups.Proto.RequestHeader.CreateBuilder(result.requestHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.requestHeader_ = value;
        }
        result.hasRequestHeader = true;
        return this;
      }
      public Builder ClearRequestHeader() {
        PrepareBuilder();
        result.hasRequestHeader = false;
        result.requestHeader_ = null;
        return this;
      }
      
      public bool HasConversationId {
       get { return result.hasConversationId; }
      }
      public global::Hangups.Proto.ConversationId ConversationId {
        get { return result.ConversationId; }
        set { SetConversationId(value); }
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = value;
        return this;
      }
      public Builder SetConversationId(global::Hangups.Proto.ConversationId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConversationId = true;
        result.conversationId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConversationId(global::Hangups.Proto.ConversationId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConversationId &&
            result.conversationId_ != global::Hangups.Proto.ConversationId.DefaultInstance) {
            result.conversationId_ = global::Hangups.Proto.ConversationId.CreateBuilder(result.conversationId_).MergeFrom(value).BuildPartial();
        } else {
          result.conversationId_ = value;
        }
        result.hasConversationId = true;
        return this;
      }
      public Builder ClearConversationId() {
        PrepareBuilder();
        result.hasConversationId = false;
        result.conversationId_ = null;
        return this;
      }
      
      public bool HasLastReadTimestamp {
        get { return result.hasLastReadTimestamp; }
      }
      [global::System.CLSCompliant(false)]
      public ulong LastReadTimestamp {
        get { return result.LastReadTimestamp; }
        set { SetLastReadTimestamp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLastReadTimestamp(ulong value) {
        PrepareBuilder();
        result.hasLastReadTimestamp = true;
        result.lastReadTimestamp_ = value;
        return this;
      }
      public Builder ClearLastReadTimestamp() {
        PrepareBuilder();
        result.hasLastReadTimestamp = false;
        result.lastReadTimestamp_ = 0UL;
        return this;
      }
    }
    static UpdateWatermarkRequest() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateWatermarkResponse : pb::GeneratedMessage<UpdateWatermarkResponse, UpdateWatermarkResponse.Builder> {
    private UpdateWatermarkResponse() { }
    private static readonly UpdateWatermarkResponse defaultInstance = new UpdateWatermarkResponse().MakeReadOnly();
    private static readonly string[] _updateWatermarkResponseFieldNames = new string[] { "response_header" };
    private static readonly uint[] _updateWatermarkResponseFieldTags = new uint[] { 10 };
    public static UpdateWatermarkResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateWatermarkResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateWatermarkResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Hangups.Proto.Hangouts.internal__static_UpdateWatermarkResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateWatermarkResponse, UpdateWatermarkResponse.Builder> InternalFieldAccessors {
      get { return global::Hangups.Proto.Hangouts.internal__static_UpdateWatermarkResponse__FieldAccessorTable; }
    }
    
    public const int ResponseHeaderFieldNumber = 1;
    private bool hasResponseHeader;
    private global::Hangups.Proto.ResponseHeader responseHeader_;
    public bool HasResponseHeader {
      get { return hasResponseHeader; }
    }
    public global::Hangups.Proto.ResponseHeader ResponseHeader {
      get { return responseHeader_ ?? global::Hangups.Proto.ResponseHeader.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateWatermarkResponseFieldNames;
      if (hasResponseHeader) {
        output.WriteMessage(1, field_names[0], ResponseHeader);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResponseHeader) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ResponseHeader);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateWatermarkResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateWatermarkResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateWatermarkResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateWatermarkResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateWatermarkResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateWatermarkResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateWatermarkResponse result;
      
      private UpdateWatermarkResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateWatermarkResponse original = result;
          result = new UpdateWatermarkResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateWatermarkResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Hangups.Proto.UpdateWatermarkResponse.Descriptor; }
      }
      
      public override UpdateWatermarkResponse DefaultInstanceForType {
        get { return global::Hangups.Proto.UpdateWatermarkResponse.DefaultInstance; }
      }
      
      public override UpdateWatermarkResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateWatermarkResponse) {
          return MergeFrom((UpdateWatermarkResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateWatermarkResponse other) {
        if (other == global::Hangups.Proto.UpdateWatermarkResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResponseHeader) {
          MergeResponseHeader(other.ResponseHeader);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateWatermarkResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateWatermarkResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Hangups.Proto.ResponseHeader.Builder subBuilder = global::Hangups.Proto.ResponseHeader.CreateBuilder();
              if (result.hasResponseHeader) {
                subBuilder.MergeFrom(ResponseHeader);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResponseHeader = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResponseHeader {
       get { return result.hasResponseHeader; }
      }
      public global::Hangups.Proto.ResponseHeader ResponseHeader {
        get { return result.ResponseHeader; }
        set { SetResponseHeader(value); }
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = value;
        return this;
      }
      public Builder SetResponseHeader(global::Hangups.Proto.ResponseHeader.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResponseHeader = true;
        result.responseHeader_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResponseHeader(global::Hangups.Proto.ResponseHeader value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResponseHeader &&
            result.responseHeader_ != global::Hangups.Proto.ResponseHeader.DefaultInstance) {
            result.responseHeader_ = global::Hangups.Proto.ResponseHeader.CreateBuilder(result.responseHeader_).MergeFrom(value).BuildPartial();
        } else {
          result.responseHeader_ = value;
        }
        result.hasResponseHeader = true;
        return this;
      }
      public Builder ClearResponseHeader() {
        PrepareBuilder();
        result.hasResponseHeader = false;
        result.responseHeader_ = null;
        return this;
      }
    }
    static UpdateWatermarkResponse() {
      object.ReferenceEquals(global::Hangups.Proto.Hangouts.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
